#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4289712942946267341) {
   out_4289712942946267341[0] = 0;
   out_4289712942946267341[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4289712942946267341[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4289712942946267341[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4289712942946267341[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4289712942946267341[5] = -sin(in_vec[1]);
   out_4289712942946267341[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4289712942946267341[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4289712942946267341[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4289712942946267341[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4289712942946267341[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4289712942946267341[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4289712942946267341[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4289712942946267341[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4289712942946267341[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4289712942946267341[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4289712942946267341[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4289712942946267341[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4616301597669227937) {
   out_4616301597669227937[0] = delta_x[0] + nom_x[0];
   out_4616301597669227937[1] = delta_x[1] + nom_x[1];
   out_4616301597669227937[2] = delta_x[2] + nom_x[2];
   out_4616301597669227937[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4616301597669227937[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4616301597669227937[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4616301597669227937[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4616301597669227937[7] = delta_x[6] + nom_x[7];
   out_4616301597669227937[8] = delta_x[7] + nom_x[8];
   out_4616301597669227937[9] = delta_x[8] + nom_x[9];
   out_4616301597669227937[10] = delta_x[9] + nom_x[10];
   out_4616301597669227937[11] = delta_x[10] + nom_x[11];
   out_4616301597669227937[12] = delta_x[11] + nom_x[12];
   out_4616301597669227937[13] = delta_x[12] + nom_x[13];
   out_4616301597669227937[14] = delta_x[13] + nom_x[14];
   out_4616301597669227937[15] = delta_x[14] + nom_x[15];
   out_4616301597669227937[16] = delta_x[15] + nom_x[16];
   out_4616301597669227937[17] = delta_x[16] + nom_x[17];
   out_4616301597669227937[18] = delta_x[17] + nom_x[18];
   out_4616301597669227937[19] = delta_x[18] + nom_x[19];
   out_4616301597669227937[20] = delta_x[19] + nom_x[20];
   out_4616301597669227937[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1812580838723876329) {
   out_1812580838723876329[0] = -nom_x[0] + true_x[0];
   out_1812580838723876329[1] = -nom_x[1] + true_x[1];
   out_1812580838723876329[2] = -nom_x[2] + true_x[2];
   out_1812580838723876329[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1812580838723876329[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1812580838723876329[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1812580838723876329[6] = -nom_x[7] + true_x[7];
   out_1812580838723876329[7] = -nom_x[8] + true_x[8];
   out_1812580838723876329[8] = -nom_x[9] + true_x[9];
   out_1812580838723876329[9] = -nom_x[10] + true_x[10];
   out_1812580838723876329[10] = -nom_x[11] + true_x[11];
   out_1812580838723876329[11] = -nom_x[12] + true_x[12];
   out_1812580838723876329[12] = -nom_x[13] + true_x[13];
   out_1812580838723876329[13] = -nom_x[14] + true_x[14];
   out_1812580838723876329[14] = -nom_x[15] + true_x[15];
   out_1812580838723876329[15] = -nom_x[16] + true_x[16];
   out_1812580838723876329[16] = -nom_x[17] + true_x[17];
   out_1812580838723876329[17] = -nom_x[18] + true_x[18];
   out_1812580838723876329[18] = -nom_x[19] + true_x[19];
   out_1812580838723876329[19] = -nom_x[20] + true_x[20];
   out_1812580838723876329[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3527885802992339195) {
   out_3527885802992339195[0] = 1.0;
   out_3527885802992339195[1] = 0;
   out_3527885802992339195[2] = 0;
   out_3527885802992339195[3] = 0;
   out_3527885802992339195[4] = 0;
   out_3527885802992339195[5] = 0;
   out_3527885802992339195[6] = 0;
   out_3527885802992339195[7] = 0;
   out_3527885802992339195[8] = 0;
   out_3527885802992339195[9] = 0;
   out_3527885802992339195[10] = 0;
   out_3527885802992339195[11] = 0;
   out_3527885802992339195[12] = 0;
   out_3527885802992339195[13] = 0;
   out_3527885802992339195[14] = 0;
   out_3527885802992339195[15] = 0;
   out_3527885802992339195[16] = 0;
   out_3527885802992339195[17] = 0;
   out_3527885802992339195[18] = 0;
   out_3527885802992339195[19] = 0;
   out_3527885802992339195[20] = 0;
   out_3527885802992339195[21] = 0;
   out_3527885802992339195[22] = 1.0;
   out_3527885802992339195[23] = 0;
   out_3527885802992339195[24] = 0;
   out_3527885802992339195[25] = 0;
   out_3527885802992339195[26] = 0;
   out_3527885802992339195[27] = 0;
   out_3527885802992339195[28] = 0;
   out_3527885802992339195[29] = 0;
   out_3527885802992339195[30] = 0;
   out_3527885802992339195[31] = 0;
   out_3527885802992339195[32] = 0;
   out_3527885802992339195[33] = 0;
   out_3527885802992339195[34] = 0;
   out_3527885802992339195[35] = 0;
   out_3527885802992339195[36] = 0;
   out_3527885802992339195[37] = 0;
   out_3527885802992339195[38] = 0;
   out_3527885802992339195[39] = 0;
   out_3527885802992339195[40] = 0;
   out_3527885802992339195[41] = 0;
   out_3527885802992339195[42] = 0;
   out_3527885802992339195[43] = 0;
   out_3527885802992339195[44] = 1.0;
   out_3527885802992339195[45] = 0;
   out_3527885802992339195[46] = 0;
   out_3527885802992339195[47] = 0;
   out_3527885802992339195[48] = 0;
   out_3527885802992339195[49] = 0;
   out_3527885802992339195[50] = 0;
   out_3527885802992339195[51] = 0;
   out_3527885802992339195[52] = 0;
   out_3527885802992339195[53] = 0;
   out_3527885802992339195[54] = 0;
   out_3527885802992339195[55] = 0;
   out_3527885802992339195[56] = 0;
   out_3527885802992339195[57] = 0;
   out_3527885802992339195[58] = 0;
   out_3527885802992339195[59] = 0;
   out_3527885802992339195[60] = 0;
   out_3527885802992339195[61] = 0;
   out_3527885802992339195[62] = 0;
   out_3527885802992339195[63] = 0;
   out_3527885802992339195[64] = 0;
   out_3527885802992339195[65] = 0;
   out_3527885802992339195[66] = -0.5*state[4];
   out_3527885802992339195[67] = -0.5*state[5];
   out_3527885802992339195[68] = -0.5*state[6];
   out_3527885802992339195[69] = 0;
   out_3527885802992339195[70] = 0;
   out_3527885802992339195[71] = 0;
   out_3527885802992339195[72] = 0;
   out_3527885802992339195[73] = 0;
   out_3527885802992339195[74] = 0;
   out_3527885802992339195[75] = 0;
   out_3527885802992339195[76] = 0;
   out_3527885802992339195[77] = 0;
   out_3527885802992339195[78] = 0;
   out_3527885802992339195[79] = 0;
   out_3527885802992339195[80] = 0;
   out_3527885802992339195[81] = 0;
   out_3527885802992339195[82] = 0;
   out_3527885802992339195[83] = 0;
   out_3527885802992339195[84] = 0;
   out_3527885802992339195[85] = 0;
   out_3527885802992339195[86] = 0;
   out_3527885802992339195[87] = 0.5*state[3];
   out_3527885802992339195[88] = 0.5*state[6];
   out_3527885802992339195[89] = -0.5*state[5];
   out_3527885802992339195[90] = 0;
   out_3527885802992339195[91] = 0;
   out_3527885802992339195[92] = 0;
   out_3527885802992339195[93] = 0;
   out_3527885802992339195[94] = 0;
   out_3527885802992339195[95] = 0;
   out_3527885802992339195[96] = 0;
   out_3527885802992339195[97] = 0;
   out_3527885802992339195[98] = 0;
   out_3527885802992339195[99] = 0;
   out_3527885802992339195[100] = 0;
   out_3527885802992339195[101] = 0;
   out_3527885802992339195[102] = 0;
   out_3527885802992339195[103] = 0;
   out_3527885802992339195[104] = 0;
   out_3527885802992339195[105] = 0;
   out_3527885802992339195[106] = 0;
   out_3527885802992339195[107] = 0;
   out_3527885802992339195[108] = -0.5*state[6];
   out_3527885802992339195[109] = 0.5*state[3];
   out_3527885802992339195[110] = 0.5*state[4];
   out_3527885802992339195[111] = 0;
   out_3527885802992339195[112] = 0;
   out_3527885802992339195[113] = 0;
   out_3527885802992339195[114] = 0;
   out_3527885802992339195[115] = 0;
   out_3527885802992339195[116] = 0;
   out_3527885802992339195[117] = 0;
   out_3527885802992339195[118] = 0;
   out_3527885802992339195[119] = 0;
   out_3527885802992339195[120] = 0;
   out_3527885802992339195[121] = 0;
   out_3527885802992339195[122] = 0;
   out_3527885802992339195[123] = 0;
   out_3527885802992339195[124] = 0;
   out_3527885802992339195[125] = 0;
   out_3527885802992339195[126] = 0;
   out_3527885802992339195[127] = 0;
   out_3527885802992339195[128] = 0;
   out_3527885802992339195[129] = 0.5*state[5];
   out_3527885802992339195[130] = -0.5*state[4];
   out_3527885802992339195[131] = 0.5*state[3];
   out_3527885802992339195[132] = 0;
   out_3527885802992339195[133] = 0;
   out_3527885802992339195[134] = 0;
   out_3527885802992339195[135] = 0;
   out_3527885802992339195[136] = 0;
   out_3527885802992339195[137] = 0;
   out_3527885802992339195[138] = 0;
   out_3527885802992339195[139] = 0;
   out_3527885802992339195[140] = 0;
   out_3527885802992339195[141] = 0;
   out_3527885802992339195[142] = 0;
   out_3527885802992339195[143] = 0;
   out_3527885802992339195[144] = 0;
   out_3527885802992339195[145] = 0;
   out_3527885802992339195[146] = 0;
   out_3527885802992339195[147] = 0;
   out_3527885802992339195[148] = 0;
   out_3527885802992339195[149] = 0;
   out_3527885802992339195[150] = 0;
   out_3527885802992339195[151] = 0;
   out_3527885802992339195[152] = 0;
   out_3527885802992339195[153] = 1.0;
   out_3527885802992339195[154] = 0;
   out_3527885802992339195[155] = 0;
   out_3527885802992339195[156] = 0;
   out_3527885802992339195[157] = 0;
   out_3527885802992339195[158] = 0;
   out_3527885802992339195[159] = 0;
   out_3527885802992339195[160] = 0;
   out_3527885802992339195[161] = 0;
   out_3527885802992339195[162] = 0;
   out_3527885802992339195[163] = 0;
   out_3527885802992339195[164] = 0;
   out_3527885802992339195[165] = 0;
   out_3527885802992339195[166] = 0;
   out_3527885802992339195[167] = 0;
   out_3527885802992339195[168] = 0;
   out_3527885802992339195[169] = 0;
   out_3527885802992339195[170] = 0;
   out_3527885802992339195[171] = 0;
   out_3527885802992339195[172] = 0;
   out_3527885802992339195[173] = 0;
   out_3527885802992339195[174] = 0;
   out_3527885802992339195[175] = 1.0;
   out_3527885802992339195[176] = 0;
   out_3527885802992339195[177] = 0;
   out_3527885802992339195[178] = 0;
   out_3527885802992339195[179] = 0;
   out_3527885802992339195[180] = 0;
   out_3527885802992339195[181] = 0;
   out_3527885802992339195[182] = 0;
   out_3527885802992339195[183] = 0;
   out_3527885802992339195[184] = 0;
   out_3527885802992339195[185] = 0;
   out_3527885802992339195[186] = 0;
   out_3527885802992339195[187] = 0;
   out_3527885802992339195[188] = 0;
   out_3527885802992339195[189] = 0;
   out_3527885802992339195[190] = 0;
   out_3527885802992339195[191] = 0;
   out_3527885802992339195[192] = 0;
   out_3527885802992339195[193] = 0;
   out_3527885802992339195[194] = 0;
   out_3527885802992339195[195] = 0;
   out_3527885802992339195[196] = 0;
   out_3527885802992339195[197] = 1.0;
   out_3527885802992339195[198] = 0;
   out_3527885802992339195[199] = 0;
   out_3527885802992339195[200] = 0;
   out_3527885802992339195[201] = 0;
   out_3527885802992339195[202] = 0;
   out_3527885802992339195[203] = 0;
   out_3527885802992339195[204] = 0;
   out_3527885802992339195[205] = 0;
   out_3527885802992339195[206] = 0;
   out_3527885802992339195[207] = 0;
   out_3527885802992339195[208] = 0;
   out_3527885802992339195[209] = 0;
   out_3527885802992339195[210] = 0;
   out_3527885802992339195[211] = 0;
   out_3527885802992339195[212] = 0;
   out_3527885802992339195[213] = 0;
   out_3527885802992339195[214] = 0;
   out_3527885802992339195[215] = 0;
   out_3527885802992339195[216] = 0;
   out_3527885802992339195[217] = 0;
   out_3527885802992339195[218] = 0;
   out_3527885802992339195[219] = 1.0;
   out_3527885802992339195[220] = 0;
   out_3527885802992339195[221] = 0;
   out_3527885802992339195[222] = 0;
   out_3527885802992339195[223] = 0;
   out_3527885802992339195[224] = 0;
   out_3527885802992339195[225] = 0;
   out_3527885802992339195[226] = 0;
   out_3527885802992339195[227] = 0;
   out_3527885802992339195[228] = 0;
   out_3527885802992339195[229] = 0;
   out_3527885802992339195[230] = 0;
   out_3527885802992339195[231] = 0;
   out_3527885802992339195[232] = 0;
   out_3527885802992339195[233] = 0;
   out_3527885802992339195[234] = 0;
   out_3527885802992339195[235] = 0;
   out_3527885802992339195[236] = 0;
   out_3527885802992339195[237] = 0;
   out_3527885802992339195[238] = 0;
   out_3527885802992339195[239] = 0;
   out_3527885802992339195[240] = 0;
   out_3527885802992339195[241] = 1.0;
   out_3527885802992339195[242] = 0;
   out_3527885802992339195[243] = 0;
   out_3527885802992339195[244] = 0;
   out_3527885802992339195[245] = 0;
   out_3527885802992339195[246] = 0;
   out_3527885802992339195[247] = 0;
   out_3527885802992339195[248] = 0;
   out_3527885802992339195[249] = 0;
   out_3527885802992339195[250] = 0;
   out_3527885802992339195[251] = 0;
   out_3527885802992339195[252] = 0;
   out_3527885802992339195[253] = 0;
   out_3527885802992339195[254] = 0;
   out_3527885802992339195[255] = 0;
   out_3527885802992339195[256] = 0;
   out_3527885802992339195[257] = 0;
   out_3527885802992339195[258] = 0;
   out_3527885802992339195[259] = 0;
   out_3527885802992339195[260] = 0;
   out_3527885802992339195[261] = 0;
   out_3527885802992339195[262] = 0;
   out_3527885802992339195[263] = 1.0;
   out_3527885802992339195[264] = 0;
   out_3527885802992339195[265] = 0;
   out_3527885802992339195[266] = 0;
   out_3527885802992339195[267] = 0;
   out_3527885802992339195[268] = 0;
   out_3527885802992339195[269] = 0;
   out_3527885802992339195[270] = 0;
   out_3527885802992339195[271] = 0;
   out_3527885802992339195[272] = 0;
   out_3527885802992339195[273] = 0;
   out_3527885802992339195[274] = 0;
   out_3527885802992339195[275] = 0;
   out_3527885802992339195[276] = 0;
   out_3527885802992339195[277] = 0;
   out_3527885802992339195[278] = 0;
   out_3527885802992339195[279] = 0;
   out_3527885802992339195[280] = 0;
   out_3527885802992339195[281] = 0;
   out_3527885802992339195[282] = 0;
   out_3527885802992339195[283] = 0;
   out_3527885802992339195[284] = 0;
   out_3527885802992339195[285] = 1.0;
   out_3527885802992339195[286] = 0;
   out_3527885802992339195[287] = 0;
   out_3527885802992339195[288] = 0;
   out_3527885802992339195[289] = 0;
   out_3527885802992339195[290] = 0;
   out_3527885802992339195[291] = 0;
   out_3527885802992339195[292] = 0;
   out_3527885802992339195[293] = 0;
   out_3527885802992339195[294] = 0;
   out_3527885802992339195[295] = 0;
   out_3527885802992339195[296] = 0;
   out_3527885802992339195[297] = 0;
   out_3527885802992339195[298] = 0;
   out_3527885802992339195[299] = 0;
   out_3527885802992339195[300] = 0;
   out_3527885802992339195[301] = 0;
   out_3527885802992339195[302] = 0;
   out_3527885802992339195[303] = 0;
   out_3527885802992339195[304] = 0;
   out_3527885802992339195[305] = 0;
   out_3527885802992339195[306] = 0;
   out_3527885802992339195[307] = 1.0;
   out_3527885802992339195[308] = 0;
   out_3527885802992339195[309] = 0;
   out_3527885802992339195[310] = 0;
   out_3527885802992339195[311] = 0;
   out_3527885802992339195[312] = 0;
   out_3527885802992339195[313] = 0;
   out_3527885802992339195[314] = 0;
   out_3527885802992339195[315] = 0;
   out_3527885802992339195[316] = 0;
   out_3527885802992339195[317] = 0;
   out_3527885802992339195[318] = 0;
   out_3527885802992339195[319] = 0;
   out_3527885802992339195[320] = 0;
   out_3527885802992339195[321] = 0;
   out_3527885802992339195[322] = 0;
   out_3527885802992339195[323] = 0;
   out_3527885802992339195[324] = 0;
   out_3527885802992339195[325] = 0;
   out_3527885802992339195[326] = 0;
   out_3527885802992339195[327] = 0;
   out_3527885802992339195[328] = 0;
   out_3527885802992339195[329] = 1.0;
   out_3527885802992339195[330] = 0;
   out_3527885802992339195[331] = 0;
   out_3527885802992339195[332] = 0;
   out_3527885802992339195[333] = 0;
   out_3527885802992339195[334] = 0;
   out_3527885802992339195[335] = 0;
   out_3527885802992339195[336] = 0;
   out_3527885802992339195[337] = 0;
   out_3527885802992339195[338] = 0;
   out_3527885802992339195[339] = 0;
   out_3527885802992339195[340] = 0;
   out_3527885802992339195[341] = 0;
   out_3527885802992339195[342] = 0;
   out_3527885802992339195[343] = 0;
   out_3527885802992339195[344] = 0;
   out_3527885802992339195[345] = 0;
   out_3527885802992339195[346] = 0;
   out_3527885802992339195[347] = 0;
   out_3527885802992339195[348] = 0;
   out_3527885802992339195[349] = 0;
   out_3527885802992339195[350] = 0;
   out_3527885802992339195[351] = 1.0;
   out_3527885802992339195[352] = 0;
   out_3527885802992339195[353] = 0;
   out_3527885802992339195[354] = 0;
   out_3527885802992339195[355] = 0;
   out_3527885802992339195[356] = 0;
   out_3527885802992339195[357] = 0;
   out_3527885802992339195[358] = 0;
   out_3527885802992339195[359] = 0;
   out_3527885802992339195[360] = 0;
   out_3527885802992339195[361] = 0;
   out_3527885802992339195[362] = 0;
   out_3527885802992339195[363] = 0;
   out_3527885802992339195[364] = 0;
   out_3527885802992339195[365] = 0;
   out_3527885802992339195[366] = 0;
   out_3527885802992339195[367] = 0;
   out_3527885802992339195[368] = 0;
   out_3527885802992339195[369] = 0;
   out_3527885802992339195[370] = 0;
   out_3527885802992339195[371] = 0;
   out_3527885802992339195[372] = 0;
   out_3527885802992339195[373] = 1.0;
   out_3527885802992339195[374] = 0;
   out_3527885802992339195[375] = 0;
   out_3527885802992339195[376] = 0;
   out_3527885802992339195[377] = 0;
   out_3527885802992339195[378] = 0;
   out_3527885802992339195[379] = 0;
   out_3527885802992339195[380] = 0;
   out_3527885802992339195[381] = 0;
   out_3527885802992339195[382] = 0;
   out_3527885802992339195[383] = 0;
   out_3527885802992339195[384] = 0;
   out_3527885802992339195[385] = 0;
   out_3527885802992339195[386] = 0;
   out_3527885802992339195[387] = 0;
   out_3527885802992339195[388] = 0;
   out_3527885802992339195[389] = 0;
   out_3527885802992339195[390] = 0;
   out_3527885802992339195[391] = 0;
   out_3527885802992339195[392] = 0;
   out_3527885802992339195[393] = 0;
   out_3527885802992339195[394] = 0;
   out_3527885802992339195[395] = 1.0;
   out_3527885802992339195[396] = 0;
   out_3527885802992339195[397] = 0;
   out_3527885802992339195[398] = 0;
   out_3527885802992339195[399] = 0;
   out_3527885802992339195[400] = 0;
   out_3527885802992339195[401] = 0;
   out_3527885802992339195[402] = 0;
   out_3527885802992339195[403] = 0;
   out_3527885802992339195[404] = 0;
   out_3527885802992339195[405] = 0;
   out_3527885802992339195[406] = 0;
   out_3527885802992339195[407] = 0;
   out_3527885802992339195[408] = 0;
   out_3527885802992339195[409] = 0;
   out_3527885802992339195[410] = 0;
   out_3527885802992339195[411] = 0;
   out_3527885802992339195[412] = 0;
   out_3527885802992339195[413] = 0;
   out_3527885802992339195[414] = 0;
   out_3527885802992339195[415] = 0;
   out_3527885802992339195[416] = 0;
   out_3527885802992339195[417] = 1.0;
   out_3527885802992339195[418] = 0;
   out_3527885802992339195[419] = 0;
   out_3527885802992339195[420] = 0;
   out_3527885802992339195[421] = 0;
   out_3527885802992339195[422] = 0;
   out_3527885802992339195[423] = 0;
   out_3527885802992339195[424] = 0;
   out_3527885802992339195[425] = 0;
   out_3527885802992339195[426] = 0;
   out_3527885802992339195[427] = 0;
   out_3527885802992339195[428] = 0;
   out_3527885802992339195[429] = 0;
   out_3527885802992339195[430] = 0;
   out_3527885802992339195[431] = 0;
   out_3527885802992339195[432] = 0;
   out_3527885802992339195[433] = 0;
   out_3527885802992339195[434] = 0;
   out_3527885802992339195[435] = 0;
   out_3527885802992339195[436] = 0;
   out_3527885802992339195[437] = 0;
   out_3527885802992339195[438] = 0;
   out_3527885802992339195[439] = 1.0;
   out_3527885802992339195[440] = 0;
   out_3527885802992339195[441] = 0;
   out_3527885802992339195[442] = 0;
   out_3527885802992339195[443] = 0;
   out_3527885802992339195[444] = 0;
   out_3527885802992339195[445] = 0;
   out_3527885802992339195[446] = 0;
   out_3527885802992339195[447] = 0;
   out_3527885802992339195[448] = 0;
   out_3527885802992339195[449] = 0;
   out_3527885802992339195[450] = 0;
   out_3527885802992339195[451] = 0;
   out_3527885802992339195[452] = 0;
   out_3527885802992339195[453] = 0;
   out_3527885802992339195[454] = 0;
   out_3527885802992339195[455] = 0;
   out_3527885802992339195[456] = 0;
   out_3527885802992339195[457] = 0;
   out_3527885802992339195[458] = 0;
   out_3527885802992339195[459] = 0;
   out_3527885802992339195[460] = 0;
   out_3527885802992339195[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2299966431904020397) {
   out_2299966431904020397[0] = dt*state[7] + state[0];
   out_2299966431904020397[1] = dt*state[8] + state[1];
   out_2299966431904020397[2] = dt*state[9] + state[2];
   out_2299966431904020397[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2299966431904020397[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2299966431904020397[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2299966431904020397[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2299966431904020397[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2299966431904020397[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2299966431904020397[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2299966431904020397[10] = state[10];
   out_2299966431904020397[11] = state[11];
   out_2299966431904020397[12] = state[12];
   out_2299966431904020397[13] = state[13];
   out_2299966431904020397[14] = state[14];
   out_2299966431904020397[15] = state[15];
   out_2299966431904020397[16] = state[16];
   out_2299966431904020397[17] = state[17];
   out_2299966431904020397[18] = state[18];
   out_2299966431904020397[19] = state[19];
   out_2299966431904020397[20] = state[20];
   out_2299966431904020397[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5930141094880253588) {
   out_5930141094880253588[0] = 1;
   out_5930141094880253588[1] = 0;
   out_5930141094880253588[2] = 0;
   out_5930141094880253588[3] = 0;
   out_5930141094880253588[4] = 0;
   out_5930141094880253588[5] = 0;
   out_5930141094880253588[6] = dt;
   out_5930141094880253588[7] = 0;
   out_5930141094880253588[8] = 0;
   out_5930141094880253588[9] = 0;
   out_5930141094880253588[10] = 0;
   out_5930141094880253588[11] = 0;
   out_5930141094880253588[12] = 0;
   out_5930141094880253588[13] = 0;
   out_5930141094880253588[14] = 0;
   out_5930141094880253588[15] = 0;
   out_5930141094880253588[16] = 0;
   out_5930141094880253588[17] = 0;
   out_5930141094880253588[18] = 0;
   out_5930141094880253588[19] = 0;
   out_5930141094880253588[20] = 0;
   out_5930141094880253588[21] = 0;
   out_5930141094880253588[22] = 1;
   out_5930141094880253588[23] = 0;
   out_5930141094880253588[24] = 0;
   out_5930141094880253588[25] = 0;
   out_5930141094880253588[26] = 0;
   out_5930141094880253588[27] = 0;
   out_5930141094880253588[28] = dt;
   out_5930141094880253588[29] = 0;
   out_5930141094880253588[30] = 0;
   out_5930141094880253588[31] = 0;
   out_5930141094880253588[32] = 0;
   out_5930141094880253588[33] = 0;
   out_5930141094880253588[34] = 0;
   out_5930141094880253588[35] = 0;
   out_5930141094880253588[36] = 0;
   out_5930141094880253588[37] = 0;
   out_5930141094880253588[38] = 0;
   out_5930141094880253588[39] = 0;
   out_5930141094880253588[40] = 0;
   out_5930141094880253588[41] = 0;
   out_5930141094880253588[42] = 0;
   out_5930141094880253588[43] = 0;
   out_5930141094880253588[44] = 1;
   out_5930141094880253588[45] = 0;
   out_5930141094880253588[46] = 0;
   out_5930141094880253588[47] = 0;
   out_5930141094880253588[48] = 0;
   out_5930141094880253588[49] = 0;
   out_5930141094880253588[50] = dt;
   out_5930141094880253588[51] = 0;
   out_5930141094880253588[52] = 0;
   out_5930141094880253588[53] = 0;
   out_5930141094880253588[54] = 0;
   out_5930141094880253588[55] = 0;
   out_5930141094880253588[56] = 0;
   out_5930141094880253588[57] = 0;
   out_5930141094880253588[58] = 0;
   out_5930141094880253588[59] = 0;
   out_5930141094880253588[60] = 0;
   out_5930141094880253588[61] = 0;
   out_5930141094880253588[62] = 0;
   out_5930141094880253588[63] = 0;
   out_5930141094880253588[64] = 0;
   out_5930141094880253588[65] = 0;
   out_5930141094880253588[66] = 1;
   out_5930141094880253588[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5930141094880253588[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5930141094880253588[69] = 0;
   out_5930141094880253588[70] = 0;
   out_5930141094880253588[71] = 0;
   out_5930141094880253588[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5930141094880253588[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5930141094880253588[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5930141094880253588[75] = 0;
   out_5930141094880253588[76] = 0;
   out_5930141094880253588[77] = 0;
   out_5930141094880253588[78] = 0;
   out_5930141094880253588[79] = 0;
   out_5930141094880253588[80] = 0;
   out_5930141094880253588[81] = 0;
   out_5930141094880253588[82] = 0;
   out_5930141094880253588[83] = 0;
   out_5930141094880253588[84] = 0;
   out_5930141094880253588[85] = 0;
   out_5930141094880253588[86] = 0;
   out_5930141094880253588[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5930141094880253588[88] = 1;
   out_5930141094880253588[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5930141094880253588[90] = 0;
   out_5930141094880253588[91] = 0;
   out_5930141094880253588[92] = 0;
   out_5930141094880253588[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5930141094880253588[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5930141094880253588[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5930141094880253588[96] = 0;
   out_5930141094880253588[97] = 0;
   out_5930141094880253588[98] = 0;
   out_5930141094880253588[99] = 0;
   out_5930141094880253588[100] = 0;
   out_5930141094880253588[101] = 0;
   out_5930141094880253588[102] = 0;
   out_5930141094880253588[103] = 0;
   out_5930141094880253588[104] = 0;
   out_5930141094880253588[105] = 0;
   out_5930141094880253588[106] = 0;
   out_5930141094880253588[107] = 0;
   out_5930141094880253588[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5930141094880253588[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5930141094880253588[110] = 1;
   out_5930141094880253588[111] = 0;
   out_5930141094880253588[112] = 0;
   out_5930141094880253588[113] = 0;
   out_5930141094880253588[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5930141094880253588[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5930141094880253588[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5930141094880253588[117] = 0;
   out_5930141094880253588[118] = 0;
   out_5930141094880253588[119] = 0;
   out_5930141094880253588[120] = 0;
   out_5930141094880253588[121] = 0;
   out_5930141094880253588[122] = 0;
   out_5930141094880253588[123] = 0;
   out_5930141094880253588[124] = 0;
   out_5930141094880253588[125] = 0;
   out_5930141094880253588[126] = 0;
   out_5930141094880253588[127] = 0;
   out_5930141094880253588[128] = 0;
   out_5930141094880253588[129] = 0;
   out_5930141094880253588[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5930141094880253588[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5930141094880253588[132] = 1;
   out_5930141094880253588[133] = 0;
   out_5930141094880253588[134] = 0;
   out_5930141094880253588[135] = 0;
   out_5930141094880253588[136] = 0;
   out_5930141094880253588[137] = 0;
   out_5930141094880253588[138] = 0;
   out_5930141094880253588[139] = 0;
   out_5930141094880253588[140] = 0;
   out_5930141094880253588[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5930141094880253588[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5930141094880253588[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5930141094880253588[144] = 0;
   out_5930141094880253588[145] = 0;
   out_5930141094880253588[146] = 0;
   out_5930141094880253588[147] = 0;
   out_5930141094880253588[148] = 0;
   out_5930141094880253588[149] = 0;
   out_5930141094880253588[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5930141094880253588[151] = 0;
   out_5930141094880253588[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5930141094880253588[153] = 0;
   out_5930141094880253588[154] = 1;
   out_5930141094880253588[155] = 0;
   out_5930141094880253588[156] = 0;
   out_5930141094880253588[157] = 0;
   out_5930141094880253588[158] = 0;
   out_5930141094880253588[159] = 0;
   out_5930141094880253588[160] = 0;
   out_5930141094880253588[161] = 0;
   out_5930141094880253588[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5930141094880253588[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5930141094880253588[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5930141094880253588[165] = 0;
   out_5930141094880253588[166] = 0;
   out_5930141094880253588[167] = 0;
   out_5930141094880253588[168] = 0;
   out_5930141094880253588[169] = 0;
   out_5930141094880253588[170] = 0;
   out_5930141094880253588[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5930141094880253588[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5930141094880253588[173] = 0;
   out_5930141094880253588[174] = 0;
   out_5930141094880253588[175] = 0;
   out_5930141094880253588[176] = 1;
   out_5930141094880253588[177] = 0;
   out_5930141094880253588[178] = 0;
   out_5930141094880253588[179] = 0;
   out_5930141094880253588[180] = 0;
   out_5930141094880253588[181] = 0;
   out_5930141094880253588[182] = 0;
   out_5930141094880253588[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5930141094880253588[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5930141094880253588[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5930141094880253588[186] = 0;
   out_5930141094880253588[187] = 0;
   out_5930141094880253588[188] = 0;
   out_5930141094880253588[189] = 0;
   out_5930141094880253588[190] = 0;
   out_5930141094880253588[191] = 0;
   out_5930141094880253588[192] = 0;
   out_5930141094880253588[193] = 0;
   out_5930141094880253588[194] = 0;
   out_5930141094880253588[195] = 0;
   out_5930141094880253588[196] = 0;
   out_5930141094880253588[197] = 0;
   out_5930141094880253588[198] = 1;
   out_5930141094880253588[199] = 0;
   out_5930141094880253588[200] = 0;
   out_5930141094880253588[201] = 0;
   out_5930141094880253588[202] = 0;
   out_5930141094880253588[203] = 0;
   out_5930141094880253588[204] = 0;
   out_5930141094880253588[205] = 0;
   out_5930141094880253588[206] = 0;
   out_5930141094880253588[207] = 0;
   out_5930141094880253588[208] = 0;
   out_5930141094880253588[209] = 0;
   out_5930141094880253588[210] = 0;
   out_5930141094880253588[211] = 0;
   out_5930141094880253588[212] = 0;
   out_5930141094880253588[213] = 0;
   out_5930141094880253588[214] = 0;
   out_5930141094880253588[215] = 0;
   out_5930141094880253588[216] = 0;
   out_5930141094880253588[217] = 0;
   out_5930141094880253588[218] = 0;
   out_5930141094880253588[219] = 0;
   out_5930141094880253588[220] = 1;
   out_5930141094880253588[221] = 0;
   out_5930141094880253588[222] = 0;
   out_5930141094880253588[223] = 0;
   out_5930141094880253588[224] = 0;
   out_5930141094880253588[225] = 0;
   out_5930141094880253588[226] = 0;
   out_5930141094880253588[227] = 0;
   out_5930141094880253588[228] = 0;
   out_5930141094880253588[229] = 0;
   out_5930141094880253588[230] = 0;
   out_5930141094880253588[231] = 0;
   out_5930141094880253588[232] = 0;
   out_5930141094880253588[233] = 0;
   out_5930141094880253588[234] = 0;
   out_5930141094880253588[235] = 0;
   out_5930141094880253588[236] = 0;
   out_5930141094880253588[237] = 0;
   out_5930141094880253588[238] = 0;
   out_5930141094880253588[239] = 0;
   out_5930141094880253588[240] = 0;
   out_5930141094880253588[241] = 0;
   out_5930141094880253588[242] = 1;
   out_5930141094880253588[243] = 0;
   out_5930141094880253588[244] = 0;
   out_5930141094880253588[245] = 0;
   out_5930141094880253588[246] = 0;
   out_5930141094880253588[247] = 0;
   out_5930141094880253588[248] = 0;
   out_5930141094880253588[249] = 0;
   out_5930141094880253588[250] = 0;
   out_5930141094880253588[251] = 0;
   out_5930141094880253588[252] = 0;
   out_5930141094880253588[253] = 0;
   out_5930141094880253588[254] = 0;
   out_5930141094880253588[255] = 0;
   out_5930141094880253588[256] = 0;
   out_5930141094880253588[257] = 0;
   out_5930141094880253588[258] = 0;
   out_5930141094880253588[259] = 0;
   out_5930141094880253588[260] = 0;
   out_5930141094880253588[261] = 0;
   out_5930141094880253588[262] = 0;
   out_5930141094880253588[263] = 0;
   out_5930141094880253588[264] = 1;
   out_5930141094880253588[265] = 0;
   out_5930141094880253588[266] = 0;
   out_5930141094880253588[267] = 0;
   out_5930141094880253588[268] = 0;
   out_5930141094880253588[269] = 0;
   out_5930141094880253588[270] = 0;
   out_5930141094880253588[271] = 0;
   out_5930141094880253588[272] = 0;
   out_5930141094880253588[273] = 0;
   out_5930141094880253588[274] = 0;
   out_5930141094880253588[275] = 0;
   out_5930141094880253588[276] = 0;
   out_5930141094880253588[277] = 0;
   out_5930141094880253588[278] = 0;
   out_5930141094880253588[279] = 0;
   out_5930141094880253588[280] = 0;
   out_5930141094880253588[281] = 0;
   out_5930141094880253588[282] = 0;
   out_5930141094880253588[283] = 0;
   out_5930141094880253588[284] = 0;
   out_5930141094880253588[285] = 0;
   out_5930141094880253588[286] = 1;
   out_5930141094880253588[287] = 0;
   out_5930141094880253588[288] = 0;
   out_5930141094880253588[289] = 0;
   out_5930141094880253588[290] = 0;
   out_5930141094880253588[291] = 0;
   out_5930141094880253588[292] = 0;
   out_5930141094880253588[293] = 0;
   out_5930141094880253588[294] = 0;
   out_5930141094880253588[295] = 0;
   out_5930141094880253588[296] = 0;
   out_5930141094880253588[297] = 0;
   out_5930141094880253588[298] = 0;
   out_5930141094880253588[299] = 0;
   out_5930141094880253588[300] = 0;
   out_5930141094880253588[301] = 0;
   out_5930141094880253588[302] = 0;
   out_5930141094880253588[303] = 0;
   out_5930141094880253588[304] = 0;
   out_5930141094880253588[305] = 0;
   out_5930141094880253588[306] = 0;
   out_5930141094880253588[307] = 0;
   out_5930141094880253588[308] = 1;
   out_5930141094880253588[309] = 0;
   out_5930141094880253588[310] = 0;
   out_5930141094880253588[311] = 0;
   out_5930141094880253588[312] = 0;
   out_5930141094880253588[313] = 0;
   out_5930141094880253588[314] = 0;
   out_5930141094880253588[315] = 0;
   out_5930141094880253588[316] = 0;
   out_5930141094880253588[317] = 0;
   out_5930141094880253588[318] = 0;
   out_5930141094880253588[319] = 0;
   out_5930141094880253588[320] = 0;
   out_5930141094880253588[321] = 0;
   out_5930141094880253588[322] = 0;
   out_5930141094880253588[323] = 0;
   out_5930141094880253588[324] = 0;
   out_5930141094880253588[325] = 0;
   out_5930141094880253588[326] = 0;
   out_5930141094880253588[327] = 0;
   out_5930141094880253588[328] = 0;
   out_5930141094880253588[329] = 0;
   out_5930141094880253588[330] = 1;
   out_5930141094880253588[331] = 0;
   out_5930141094880253588[332] = 0;
   out_5930141094880253588[333] = 0;
   out_5930141094880253588[334] = 0;
   out_5930141094880253588[335] = 0;
   out_5930141094880253588[336] = 0;
   out_5930141094880253588[337] = 0;
   out_5930141094880253588[338] = 0;
   out_5930141094880253588[339] = 0;
   out_5930141094880253588[340] = 0;
   out_5930141094880253588[341] = 0;
   out_5930141094880253588[342] = 0;
   out_5930141094880253588[343] = 0;
   out_5930141094880253588[344] = 0;
   out_5930141094880253588[345] = 0;
   out_5930141094880253588[346] = 0;
   out_5930141094880253588[347] = 0;
   out_5930141094880253588[348] = 0;
   out_5930141094880253588[349] = 0;
   out_5930141094880253588[350] = 0;
   out_5930141094880253588[351] = 0;
   out_5930141094880253588[352] = 1;
   out_5930141094880253588[353] = 0;
   out_5930141094880253588[354] = 0;
   out_5930141094880253588[355] = 0;
   out_5930141094880253588[356] = 0;
   out_5930141094880253588[357] = 0;
   out_5930141094880253588[358] = 0;
   out_5930141094880253588[359] = 0;
   out_5930141094880253588[360] = 0;
   out_5930141094880253588[361] = 0;
   out_5930141094880253588[362] = 0;
   out_5930141094880253588[363] = 0;
   out_5930141094880253588[364] = 0;
   out_5930141094880253588[365] = 0;
   out_5930141094880253588[366] = 0;
   out_5930141094880253588[367] = 0;
   out_5930141094880253588[368] = 0;
   out_5930141094880253588[369] = 0;
   out_5930141094880253588[370] = 0;
   out_5930141094880253588[371] = 0;
   out_5930141094880253588[372] = 0;
   out_5930141094880253588[373] = 0;
   out_5930141094880253588[374] = 1;
   out_5930141094880253588[375] = 0;
   out_5930141094880253588[376] = 0;
   out_5930141094880253588[377] = 0;
   out_5930141094880253588[378] = 0;
   out_5930141094880253588[379] = 0;
   out_5930141094880253588[380] = 0;
   out_5930141094880253588[381] = 0;
   out_5930141094880253588[382] = 0;
   out_5930141094880253588[383] = 0;
   out_5930141094880253588[384] = 0;
   out_5930141094880253588[385] = 0;
   out_5930141094880253588[386] = 0;
   out_5930141094880253588[387] = 0;
   out_5930141094880253588[388] = 0;
   out_5930141094880253588[389] = 0;
   out_5930141094880253588[390] = 0;
   out_5930141094880253588[391] = 0;
   out_5930141094880253588[392] = 0;
   out_5930141094880253588[393] = 0;
   out_5930141094880253588[394] = 0;
   out_5930141094880253588[395] = 0;
   out_5930141094880253588[396] = 1;
   out_5930141094880253588[397] = 0;
   out_5930141094880253588[398] = 0;
   out_5930141094880253588[399] = 0;
   out_5930141094880253588[400] = 0;
   out_5930141094880253588[401] = 0;
   out_5930141094880253588[402] = 0;
   out_5930141094880253588[403] = 0;
   out_5930141094880253588[404] = 0;
   out_5930141094880253588[405] = 0;
   out_5930141094880253588[406] = 0;
   out_5930141094880253588[407] = 0;
   out_5930141094880253588[408] = 0;
   out_5930141094880253588[409] = 0;
   out_5930141094880253588[410] = 0;
   out_5930141094880253588[411] = 0;
   out_5930141094880253588[412] = 0;
   out_5930141094880253588[413] = 0;
   out_5930141094880253588[414] = 0;
   out_5930141094880253588[415] = 0;
   out_5930141094880253588[416] = 0;
   out_5930141094880253588[417] = 0;
   out_5930141094880253588[418] = 1;
   out_5930141094880253588[419] = 0;
   out_5930141094880253588[420] = 0;
   out_5930141094880253588[421] = 0;
   out_5930141094880253588[422] = 0;
   out_5930141094880253588[423] = 0;
   out_5930141094880253588[424] = 0;
   out_5930141094880253588[425] = 0;
   out_5930141094880253588[426] = 0;
   out_5930141094880253588[427] = 0;
   out_5930141094880253588[428] = 0;
   out_5930141094880253588[429] = 0;
   out_5930141094880253588[430] = 0;
   out_5930141094880253588[431] = 0;
   out_5930141094880253588[432] = 0;
   out_5930141094880253588[433] = 0;
   out_5930141094880253588[434] = 0;
   out_5930141094880253588[435] = 0;
   out_5930141094880253588[436] = 0;
   out_5930141094880253588[437] = 0;
   out_5930141094880253588[438] = 0;
   out_5930141094880253588[439] = 0;
   out_5930141094880253588[440] = 1;
}
void h_4(double *state, double *unused, double *out_1782520131042216938) {
   out_1782520131042216938[0] = state[10] + state[13];
   out_1782520131042216938[1] = state[11] + state[14];
   out_1782520131042216938[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4664208093126642294) {
   out_4664208093126642294[0] = 0;
   out_4664208093126642294[1] = 0;
   out_4664208093126642294[2] = 0;
   out_4664208093126642294[3] = 0;
   out_4664208093126642294[4] = 0;
   out_4664208093126642294[5] = 0;
   out_4664208093126642294[6] = 0;
   out_4664208093126642294[7] = 0;
   out_4664208093126642294[8] = 0;
   out_4664208093126642294[9] = 0;
   out_4664208093126642294[10] = 1;
   out_4664208093126642294[11] = 0;
   out_4664208093126642294[12] = 0;
   out_4664208093126642294[13] = 1;
   out_4664208093126642294[14] = 0;
   out_4664208093126642294[15] = 0;
   out_4664208093126642294[16] = 0;
   out_4664208093126642294[17] = 0;
   out_4664208093126642294[18] = 0;
   out_4664208093126642294[19] = 0;
   out_4664208093126642294[20] = 0;
   out_4664208093126642294[21] = 0;
   out_4664208093126642294[22] = 0;
   out_4664208093126642294[23] = 0;
   out_4664208093126642294[24] = 0;
   out_4664208093126642294[25] = 0;
   out_4664208093126642294[26] = 0;
   out_4664208093126642294[27] = 0;
   out_4664208093126642294[28] = 0;
   out_4664208093126642294[29] = 0;
   out_4664208093126642294[30] = 0;
   out_4664208093126642294[31] = 0;
   out_4664208093126642294[32] = 0;
   out_4664208093126642294[33] = 1;
   out_4664208093126642294[34] = 0;
   out_4664208093126642294[35] = 0;
   out_4664208093126642294[36] = 1;
   out_4664208093126642294[37] = 0;
   out_4664208093126642294[38] = 0;
   out_4664208093126642294[39] = 0;
   out_4664208093126642294[40] = 0;
   out_4664208093126642294[41] = 0;
   out_4664208093126642294[42] = 0;
   out_4664208093126642294[43] = 0;
   out_4664208093126642294[44] = 0;
   out_4664208093126642294[45] = 0;
   out_4664208093126642294[46] = 0;
   out_4664208093126642294[47] = 0;
   out_4664208093126642294[48] = 0;
   out_4664208093126642294[49] = 0;
   out_4664208093126642294[50] = 0;
   out_4664208093126642294[51] = 0;
   out_4664208093126642294[52] = 0;
   out_4664208093126642294[53] = 0;
   out_4664208093126642294[54] = 0;
   out_4664208093126642294[55] = 0;
   out_4664208093126642294[56] = 1;
   out_4664208093126642294[57] = 0;
   out_4664208093126642294[58] = 0;
   out_4664208093126642294[59] = 1;
   out_4664208093126642294[60] = 0;
   out_4664208093126642294[61] = 0;
   out_4664208093126642294[62] = 0;
   out_4664208093126642294[63] = 0;
   out_4664208093126642294[64] = 0;
   out_4664208093126642294[65] = 0;
}
void h_9(double *state, double *unused, double *out_7315912115744482679) {
   out_7315912115744482679[0] = state[10];
   out_7315912115744482679[1] = state[11];
   out_7315912115744482679[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2623010842137805176) {
   out_2623010842137805176[0] = 0;
   out_2623010842137805176[1] = 0;
   out_2623010842137805176[2] = 0;
   out_2623010842137805176[3] = 0;
   out_2623010842137805176[4] = 0;
   out_2623010842137805176[5] = 0;
   out_2623010842137805176[6] = 0;
   out_2623010842137805176[7] = 0;
   out_2623010842137805176[8] = 0;
   out_2623010842137805176[9] = 0;
   out_2623010842137805176[10] = 1;
   out_2623010842137805176[11] = 0;
   out_2623010842137805176[12] = 0;
   out_2623010842137805176[13] = 0;
   out_2623010842137805176[14] = 0;
   out_2623010842137805176[15] = 0;
   out_2623010842137805176[16] = 0;
   out_2623010842137805176[17] = 0;
   out_2623010842137805176[18] = 0;
   out_2623010842137805176[19] = 0;
   out_2623010842137805176[20] = 0;
   out_2623010842137805176[21] = 0;
   out_2623010842137805176[22] = 0;
   out_2623010842137805176[23] = 0;
   out_2623010842137805176[24] = 0;
   out_2623010842137805176[25] = 0;
   out_2623010842137805176[26] = 0;
   out_2623010842137805176[27] = 0;
   out_2623010842137805176[28] = 0;
   out_2623010842137805176[29] = 0;
   out_2623010842137805176[30] = 0;
   out_2623010842137805176[31] = 0;
   out_2623010842137805176[32] = 0;
   out_2623010842137805176[33] = 1;
   out_2623010842137805176[34] = 0;
   out_2623010842137805176[35] = 0;
   out_2623010842137805176[36] = 0;
   out_2623010842137805176[37] = 0;
   out_2623010842137805176[38] = 0;
   out_2623010842137805176[39] = 0;
   out_2623010842137805176[40] = 0;
   out_2623010842137805176[41] = 0;
   out_2623010842137805176[42] = 0;
   out_2623010842137805176[43] = 0;
   out_2623010842137805176[44] = 0;
   out_2623010842137805176[45] = 0;
   out_2623010842137805176[46] = 0;
   out_2623010842137805176[47] = 0;
   out_2623010842137805176[48] = 0;
   out_2623010842137805176[49] = 0;
   out_2623010842137805176[50] = 0;
   out_2623010842137805176[51] = 0;
   out_2623010842137805176[52] = 0;
   out_2623010842137805176[53] = 0;
   out_2623010842137805176[54] = 0;
   out_2623010842137805176[55] = 0;
   out_2623010842137805176[56] = 1;
   out_2623010842137805176[57] = 0;
   out_2623010842137805176[58] = 0;
   out_2623010842137805176[59] = 0;
   out_2623010842137805176[60] = 0;
   out_2623010842137805176[61] = 0;
   out_2623010842137805176[62] = 0;
   out_2623010842137805176[63] = 0;
   out_2623010842137805176[64] = 0;
   out_2623010842137805176[65] = 0;
}
void h_10(double *state, double *unused, double *out_37103880392024000) {
   out_37103880392024000[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_37103880392024000[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_37103880392024000[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7097268044025873025) {
   out_7097268044025873025[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7097268044025873025[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7097268044025873025[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7097268044025873025[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7097268044025873025[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7097268044025873025[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7097268044025873025[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7097268044025873025[7] = 0;
   out_7097268044025873025[8] = 0;
   out_7097268044025873025[9] = 0;
   out_7097268044025873025[10] = 0;
   out_7097268044025873025[11] = 0;
   out_7097268044025873025[12] = 0;
   out_7097268044025873025[13] = 0;
   out_7097268044025873025[14] = 0;
   out_7097268044025873025[15] = 0;
   out_7097268044025873025[16] = 1;
   out_7097268044025873025[17] = 0;
   out_7097268044025873025[18] = 0;
   out_7097268044025873025[19] = 1;
   out_7097268044025873025[20] = 0;
   out_7097268044025873025[21] = 0;
   out_7097268044025873025[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7097268044025873025[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7097268044025873025[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7097268044025873025[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7097268044025873025[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7097268044025873025[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7097268044025873025[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7097268044025873025[29] = 0;
   out_7097268044025873025[30] = 0;
   out_7097268044025873025[31] = 0;
   out_7097268044025873025[32] = 0;
   out_7097268044025873025[33] = 0;
   out_7097268044025873025[34] = 0;
   out_7097268044025873025[35] = 0;
   out_7097268044025873025[36] = 0;
   out_7097268044025873025[37] = 0;
   out_7097268044025873025[38] = 0;
   out_7097268044025873025[39] = 1;
   out_7097268044025873025[40] = 0;
   out_7097268044025873025[41] = 0;
   out_7097268044025873025[42] = 1;
   out_7097268044025873025[43] = 0;
   out_7097268044025873025[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7097268044025873025[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7097268044025873025[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7097268044025873025[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7097268044025873025[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7097268044025873025[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7097268044025873025[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7097268044025873025[51] = 0;
   out_7097268044025873025[52] = 0;
   out_7097268044025873025[53] = 0;
   out_7097268044025873025[54] = 0;
   out_7097268044025873025[55] = 0;
   out_7097268044025873025[56] = 0;
   out_7097268044025873025[57] = 0;
   out_7097268044025873025[58] = 0;
   out_7097268044025873025[59] = 0;
   out_7097268044025873025[60] = 0;
   out_7097268044025873025[61] = 0;
   out_7097268044025873025[62] = 1;
   out_7097268044025873025[63] = 0;
   out_7097268044025873025[64] = 0;
   out_7097268044025873025[65] = 1;
}
void h_12(double *state, double *unused, double *out_1233166051115787650) {
   out_1233166051115787650[0] = state[0];
   out_1233166051115787650[1] = state[1];
   out_1233166051115787650[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7401277603540176326) {
   out_7401277603540176326[0] = 1;
   out_7401277603540176326[1] = 0;
   out_7401277603540176326[2] = 0;
   out_7401277603540176326[3] = 0;
   out_7401277603540176326[4] = 0;
   out_7401277603540176326[5] = 0;
   out_7401277603540176326[6] = 0;
   out_7401277603540176326[7] = 0;
   out_7401277603540176326[8] = 0;
   out_7401277603540176326[9] = 0;
   out_7401277603540176326[10] = 0;
   out_7401277603540176326[11] = 0;
   out_7401277603540176326[12] = 0;
   out_7401277603540176326[13] = 0;
   out_7401277603540176326[14] = 0;
   out_7401277603540176326[15] = 0;
   out_7401277603540176326[16] = 0;
   out_7401277603540176326[17] = 0;
   out_7401277603540176326[18] = 0;
   out_7401277603540176326[19] = 0;
   out_7401277603540176326[20] = 0;
   out_7401277603540176326[21] = 0;
   out_7401277603540176326[22] = 0;
   out_7401277603540176326[23] = 1;
   out_7401277603540176326[24] = 0;
   out_7401277603540176326[25] = 0;
   out_7401277603540176326[26] = 0;
   out_7401277603540176326[27] = 0;
   out_7401277603540176326[28] = 0;
   out_7401277603540176326[29] = 0;
   out_7401277603540176326[30] = 0;
   out_7401277603540176326[31] = 0;
   out_7401277603540176326[32] = 0;
   out_7401277603540176326[33] = 0;
   out_7401277603540176326[34] = 0;
   out_7401277603540176326[35] = 0;
   out_7401277603540176326[36] = 0;
   out_7401277603540176326[37] = 0;
   out_7401277603540176326[38] = 0;
   out_7401277603540176326[39] = 0;
   out_7401277603540176326[40] = 0;
   out_7401277603540176326[41] = 0;
   out_7401277603540176326[42] = 0;
   out_7401277603540176326[43] = 0;
   out_7401277603540176326[44] = 0;
   out_7401277603540176326[45] = 0;
   out_7401277603540176326[46] = 1;
   out_7401277603540176326[47] = 0;
   out_7401277603540176326[48] = 0;
   out_7401277603540176326[49] = 0;
   out_7401277603540176326[50] = 0;
   out_7401277603540176326[51] = 0;
   out_7401277603540176326[52] = 0;
   out_7401277603540176326[53] = 0;
   out_7401277603540176326[54] = 0;
   out_7401277603540176326[55] = 0;
   out_7401277603540176326[56] = 0;
   out_7401277603540176326[57] = 0;
   out_7401277603540176326[58] = 0;
   out_7401277603540176326[59] = 0;
   out_7401277603540176326[60] = 0;
   out_7401277603540176326[61] = 0;
   out_7401277603540176326[62] = 0;
   out_7401277603540176326[63] = 0;
   out_7401277603540176326[64] = 0;
   out_7401277603540176326[65] = 0;
}
void h_35(double *state, double *unused, double *out_8096301931054628985) {
   out_8096301931054628985[0] = state[7];
   out_8096301931054628985[1] = state[8];
   out_8096301931054628985[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3100811347230333210) {
   out_3100811347230333210[0] = 0;
   out_3100811347230333210[1] = 0;
   out_3100811347230333210[2] = 0;
   out_3100811347230333210[3] = 0;
   out_3100811347230333210[4] = 0;
   out_3100811347230333210[5] = 0;
   out_3100811347230333210[6] = 0;
   out_3100811347230333210[7] = 1;
   out_3100811347230333210[8] = 0;
   out_3100811347230333210[9] = 0;
   out_3100811347230333210[10] = 0;
   out_3100811347230333210[11] = 0;
   out_3100811347230333210[12] = 0;
   out_3100811347230333210[13] = 0;
   out_3100811347230333210[14] = 0;
   out_3100811347230333210[15] = 0;
   out_3100811347230333210[16] = 0;
   out_3100811347230333210[17] = 0;
   out_3100811347230333210[18] = 0;
   out_3100811347230333210[19] = 0;
   out_3100811347230333210[20] = 0;
   out_3100811347230333210[21] = 0;
   out_3100811347230333210[22] = 0;
   out_3100811347230333210[23] = 0;
   out_3100811347230333210[24] = 0;
   out_3100811347230333210[25] = 0;
   out_3100811347230333210[26] = 0;
   out_3100811347230333210[27] = 0;
   out_3100811347230333210[28] = 0;
   out_3100811347230333210[29] = 0;
   out_3100811347230333210[30] = 1;
   out_3100811347230333210[31] = 0;
   out_3100811347230333210[32] = 0;
   out_3100811347230333210[33] = 0;
   out_3100811347230333210[34] = 0;
   out_3100811347230333210[35] = 0;
   out_3100811347230333210[36] = 0;
   out_3100811347230333210[37] = 0;
   out_3100811347230333210[38] = 0;
   out_3100811347230333210[39] = 0;
   out_3100811347230333210[40] = 0;
   out_3100811347230333210[41] = 0;
   out_3100811347230333210[42] = 0;
   out_3100811347230333210[43] = 0;
   out_3100811347230333210[44] = 0;
   out_3100811347230333210[45] = 0;
   out_3100811347230333210[46] = 0;
   out_3100811347230333210[47] = 0;
   out_3100811347230333210[48] = 0;
   out_3100811347230333210[49] = 0;
   out_3100811347230333210[50] = 0;
   out_3100811347230333210[51] = 0;
   out_3100811347230333210[52] = 0;
   out_3100811347230333210[53] = 1;
   out_3100811347230333210[54] = 0;
   out_3100811347230333210[55] = 0;
   out_3100811347230333210[56] = 0;
   out_3100811347230333210[57] = 0;
   out_3100811347230333210[58] = 0;
   out_3100811347230333210[59] = 0;
   out_3100811347230333210[60] = 0;
   out_3100811347230333210[61] = 0;
   out_3100811347230333210[62] = 0;
   out_3100811347230333210[63] = 0;
   out_3100811347230333210[64] = 0;
   out_3100811347230333210[65] = 0;
}
void h_32(double *state, double *unused, double *out_7352123618983963746) {
   out_7352123618983963746[0] = state[3];
   out_7352123618983963746[1] = state[4];
   out_7352123618983963746[2] = state[5];
   out_7352123618983963746[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5041649684563342011) {
   out_5041649684563342011[0] = 0;
   out_5041649684563342011[1] = 0;
   out_5041649684563342011[2] = 0;
   out_5041649684563342011[3] = 1;
   out_5041649684563342011[4] = 0;
   out_5041649684563342011[5] = 0;
   out_5041649684563342011[6] = 0;
   out_5041649684563342011[7] = 0;
   out_5041649684563342011[8] = 0;
   out_5041649684563342011[9] = 0;
   out_5041649684563342011[10] = 0;
   out_5041649684563342011[11] = 0;
   out_5041649684563342011[12] = 0;
   out_5041649684563342011[13] = 0;
   out_5041649684563342011[14] = 0;
   out_5041649684563342011[15] = 0;
   out_5041649684563342011[16] = 0;
   out_5041649684563342011[17] = 0;
   out_5041649684563342011[18] = 0;
   out_5041649684563342011[19] = 0;
   out_5041649684563342011[20] = 0;
   out_5041649684563342011[21] = 0;
   out_5041649684563342011[22] = 0;
   out_5041649684563342011[23] = 0;
   out_5041649684563342011[24] = 0;
   out_5041649684563342011[25] = 0;
   out_5041649684563342011[26] = 1;
   out_5041649684563342011[27] = 0;
   out_5041649684563342011[28] = 0;
   out_5041649684563342011[29] = 0;
   out_5041649684563342011[30] = 0;
   out_5041649684563342011[31] = 0;
   out_5041649684563342011[32] = 0;
   out_5041649684563342011[33] = 0;
   out_5041649684563342011[34] = 0;
   out_5041649684563342011[35] = 0;
   out_5041649684563342011[36] = 0;
   out_5041649684563342011[37] = 0;
   out_5041649684563342011[38] = 0;
   out_5041649684563342011[39] = 0;
   out_5041649684563342011[40] = 0;
   out_5041649684563342011[41] = 0;
   out_5041649684563342011[42] = 0;
   out_5041649684563342011[43] = 0;
   out_5041649684563342011[44] = 0;
   out_5041649684563342011[45] = 0;
   out_5041649684563342011[46] = 0;
   out_5041649684563342011[47] = 0;
   out_5041649684563342011[48] = 0;
   out_5041649684563342011[49] = 1;
   out_5041649684563342011[50] = 0;
   out_5041649684563342011[51] = 0;
   out_5041649684563342011[52] = 0;
   out_5041649684563342011[53] = 0;
   out_5041649684563342011[54] = 0;
   out_5041649684563342011[55] = 0;
   out_5041649684563342011[56] = 0;
   out_5041649684563342011[57] = 0;
   out_5041649684563342011[58] = 0;
   out_5041649684563342011[59] = 0;
   out_5041649684563342011[60] = 0;
   out_5041649684563342011[61] = 0;
   out_5041649684563342011[62] = 0;
   out_5041649684563342011[63] = 0;
   out_5041649684563342011[64] = 0;
   out_5041649684563342011[65] = 0;
   out_5041649684563342011[66] = 0;
   out_5041649684563342011[67] = 0;
   out_5041649684563342011[68] = 0;
   out_5041649684563342011[69] = 0;
   out_5041649684563342011[70] = 0;
   out_5041649684563342011[71] = 0;
   out_5041649684563342011[72] = 1;
   out_5041649684563342011[73] = 0;
   out_5041649684563342011[74] = 0;
   out_5041649684563342011[75] = 0;
   out_5041649684563342011[76] = 0;
   out_5041649684563342011[77] = 0;
   out_5041649684563342011[78] = 0;
   out_5041649684563342011[79] = 0;
   out_5041649684563342011[80] = 0;
   out_5041649684563342011[81] = 0;
   out_5041649684563342011[82] = 0;
   out_5041649684563342011[83] = 0;
   out_5041649684563342011[84] = 0;
   out_5041649684563342011[85] = 0;
   out_5041649684563342011[86] = 0;
   out_5041649684563342011[87] = 0;
}
void h_13(double *state, double *unused, double *out_3435031346060559229) {
   out_3435031346060559229[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3435031346060559229[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3435031346060559229[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3692563050135837383) {
   out_3692563050135837383[0] = 0;
   out_3692563050135837383[1] = 0;
   out_3692563050135837383[2] = 0;
   out_3692563050135837383[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3692563050135837383[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3692563050135837383[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3692563050135837383[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3692563050135837383[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3692563050135837383[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3692563050135837383[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3692563050135837383[10] = 0;
   out_3692563050135837383[11] = 0;
   out_3692563050135837383[12] = 0;
   out_3692563050135837383[13] = 0;
   out_3692563050135837383[14] = 0;
   out_3692563050135837383[15] = 0;
   out_3692563050135837383[16] = 0;
   out_3692563050135837383[17] = 0;
   out_3692563050135837383[18] = 0;
   out_3692563050135837383[19] = 0;
   out_3692563050135837383[20] = 0;
   out_3692563050135837383[21] = 0;
   out_3692563050135837383[22] = 0;
   out_3692563050135837383[23] = 0;
   out_3692563050135837383[24] = 0;
   out_3692563050135837383[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3692563050135837383[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3692563050135837383[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3692563050135837383[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3692563050135837383[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3692563050135837383[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3692563050135837383[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3692563050135837383[32] = 0;
   out_3692563050135837383[33] = 0;
   out_3692563050135837383[34] = 0;
   out_3692563050135837383[35] = 0;
   out_3692563050135837383[36] = 0;
   out_3692563050135837383[37] = 0;
   out_3692563050135837383[38] = 0;
   out_3692563050135837383[39] = 0;
   out_3692563050135837383[40] = 0;
   out_3692563050135837383[41] = 0;
   out_3692563050135837383[42] = 0;
   out_3692563050135837383[43] = 0;
   out_3692563050135837383[44] = 0;
   out_3692563050135837383[45] = 0;
   out_3692563050135837383[46] = 0;
   out_3692563050135837383[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3692563050135837383[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3692563050135837383[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3692563050135837383[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3692563050135837383[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3692563050135837383[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3692563050135837383[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3692563050135837383[54] = 0;
   out_3692563050135837383[55] = 0;
   out_3692563050135837383[56] = 0;
   out_3692563050135837383[57] = 0;
   out_3692563050135837383[58] = 0;
   out_3692563050135837383[59] = 0;
   out_3692563050135837383[60] = 0;
   out_3692563050135837383[61] = 0;
   out_3692563050135837383[62] = 0;
   out_3692563050135837383[63] = 0;
   out_3692563050135837383[64] = 0;
   out_3692563050135837383[65] = 0;
}
void h_14(double *state, double *unused, double *out_7315912115744482679) {
   out_7315912115744482679[0] = state[10];
   out_7315912115744482679[1] = state[11];
   out_7315912115744482679[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2623010842137805176) {
   out_2623010842137805176[0] = 0;
   out_2623010842137805176[1] = 0;
   out_2623010842137805176[2] = 0;
   out_2623010842137805176[3] = 0;
   out_2623010842137805176[4] = 0;
   out_2623010842137805176[5] = 0;
   out_2623010842137805176[6] = 0;
   out_2623010842137805176[7] = 0;
   out_2623010842137805176[8] = 0;
   out_2623010842137805176[9] = 0;
   out_2623010842137805176[10] = 1;
   out_2623010842137805176[11] = 0;
   out_2623010842137805176[12] = 0;
   out_2623010842137805176[13] = 0;
   out_2623010842137805176[14] = 0;
   out_2623010842137805176[15] = 0;
   out_2623010842137805176[16] = 0;
   out_2623010842137805176[17] = 0;
   out_2623010842137805176[18] = 0;
   out_2623010842137805176[19] = 0;
   out_2623010842137805176[20] = 0;
   out_2623010842137805176[21] = 0;
   out_2623010842137805176[22] = 0;
   out_2623010842137805176[23] = 0;
   out_2623010842137805176[24] = 0;
   out_2623010842137805176[25] = 0;
   out_2623010842137805176[26] = 0;
   out_2623010842137805176[27] = 0;
   out_2623010842137805176[28] = 0;
   out_2623010842137805176[29] = 0;
   out_2623010842137805176[30] = 0;
   out_2623010842137805176[31] = 0;
   out_2623010842137805176[32] = 0;
   out_2623010842137805176[33] = 1;
   out_2623010842137805176[34] = 0;
   out_2623010842137805176[35] = 0;
   out_2623010842137805176[36] = 0;
   out_2623010842137805176[37] = 0;
   out_2623010842137805176[38] = 0;
   out_2623010842137805176[39] = 0;
   out_2623010842137805176[40] = 0;
   out_2623010842137805176[41] = 0;
   out_2623010842137805176[42] = 0;
   out_2623010842137805176[43] = 0;
   out_2623010842137805176[44] = 0;
   out_2623010842137805176[45] = 0;
   out_2623010842137805176[46] = 0;
   out_2623010842137805176[47] = 0;
   out_2623010842137805176[48] = 0;
   out_2623010842137805176[49] = 0;
   out_2623010842137805176[50] = 0;
   out_2623010842137805176[51] = 0;
   out_2623010842137805176[52] = 0;
   out_2623010842137805176[53] = 0;
   out_2623010842137805176[54] = 0;
   out_2623010842137805176[55] = 0;
   out_2623010842137805176[56] = 1;
   out_2623010842137805176[57] = 0;
   out_2623010842137805176[58] = 0;
   out_2623010842137805176[59] = 0;
   out_2623010842137805176[60] = 0;
   out_2623010842137805176[61] = 0;
   out_2623010842137805176[62] = 0;
   out_2623010842137805176[63] = 0;
   out_2623010842137805176[64] = 0;
   out_2623010842137805176[65] = 0;
}
void h_33(double *state, double *unused, double *out_1041888176521729484) {
   out_1041888176521729484[0] = state[16];
   out_1041888176521729484[1] = state[17];
   out_1041888176521729484[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1853010968884822686) {
   out_1853010968884822686[0] = 0;
   out_1853010968884822686[1] = 0;
   out_1853010968884822686[2] = 0;
   out_1853010968884822686[3] = 0;
   out_1853010968884822686[4] = 0;
   out_1853010968884822686[5] = 0;
   out_1853010968884822686[6] = 0;
   out_1853010968884822686[7] = 0;
   out_1853010968884822686[8] = 0;
   out_1853010968884822686[9] = 0;
   out_1853010968884822686[10] = 0;
   out_1853010968884822686[11] = 0;
   out_1853010968884822686[12] = 0;
   out_1853010968884822686[13] = 0;
   out_1853010968884822686[14] = 0;
   out_1853010968884822686[15] = 0;
   out_1853010968884822686[16] = 1;
   out_1853010968884822686[17] = 0;
   out_1853010968884822686[18] = 0;
   out_1853010968884822686[19] = 0;
   out_1853010968884822686[20] = 0;
   out_1853010968884822686[21] = 0;
   out_1853010968884822686[22] = 0;
   out_1853010968884822686[23] = 0;
   out_1853010968884822686[24] = 0;
   out_1853010968884822686[25] = 0;
   out_1853010968884822686[26] = 0;
   out_1853010968884822686[27] = 0;
   out_1853010968884822686[28] = 0;
   out_1853010968884822686[29] = 0;
   out_1853010968884822686[30] = 0;
   out_1853010968884822686[31] = 0;
   out_1853010968884822686[32] = 0;
   out_1853010968884822686[33] = 0;
   out_1853010968884822686[34] = 0;
   out_1853010968884822686[35] = 0;
   out_1853010968884822686[36] = 0;
   out_1853010968884822686[37] = 0;
   out_1853010968884822686[38] = 0;
   out_1853010968884822686[39] = 1;
   out_1853010968884822686[40] = 0;
   out_1853010968884822686[41] = 0;
   out_1853010968884822686[42] = 0;
   out_1853010968884822686[43] = 0;
   out_1853010968884822686[44] = 0;
   out_1853010968884822686[45] = 0;
   out_1853010968884822686[46] = 0;
   out_1853010968884822686[47] = 0;
   out_1853010968884822686[48] = 0;
   out_1853010968884822686[49] = 0;
   out_1853010968884822686[50] = 0;
   out_1853010968884822686[51] = 0;
   out_1853010968884822686[52] = 0;
   out_1853010968884822686[53] = 0;
   out_1853010968884822686[54] = 0;
   out_1853010968884822686[55] = 0;
   out_1853010968884822686[56] = 0;
   out_1853010968884822686[57] = 0;
   out_1853010968884822686[58] = 0;
   out_1853010968884822686[59] = 0;
   out_1853010968884822686[60] = 0;
   out_1853010968884822686[61] = 0;
   out_1853010968884822686[62] = 1;
   out_1853010968884822686[63] = 0;
   out_1853010968884822686[64] = 0;
   out_1853010968884822686[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4289712942946267341) {
  H(in_vec, out_4289712942946267341);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4616301597669227937) {
  err_fun(nom_x, delta_x, out_4616301597669227937);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1812580838723876329) {
  inv_err_fun(nom_x, true_x, out_1812580838723876329);
}
void live_H_mod_fun(double *state, double *out_3527885802992339195) {
  H_mod_fun(state, out_3527885802992339195);
}
void live_f_fun(double *state, double dt, double *out_2299966431904020397) {
  f_fun(state,  dt, out_2299966431904020397);
}
void live_F_fun(double *state, double dt, double *out_5930141094880253588) {
  F_fun(state,  dt, out_5930141094880253588);
}
void live_h_4(double *state, double *unused, double *out_1782520131042216938) {
  h_4(state, unused, out_1782520131042216938);
}
void live_H_4(double *state, double *unused, double *out_4664208093126642294) {
  H_4(state, unused, out_4664208093126642294);
}
void live_h_9(double *state, double *unused, double *out_7315912115744482679) {
  h_9(state, unused, out_7315912115744482679);
}
void live_H_9(double *state, double *unused, double *out_2623010842137805176) {
  H_9(state, unused, out_2623010842137805176);
}
void live_h_10(double *state, double *unused, double *out_37103880392024000) {
  h_10(state, unused, out_37103880392024000);
}
void live_H_10(double *state, double *unused, double *out_7097268044025873025) {
  H_10(state, unused, out_7097268044025873025);
}
void live_h_12(double *state, double *unused, double *out_1233166051115787650) {
  h_12(state, unused, out_1233166051115787650);
}
void live_H_12(double *state, double *unused, double *out_7401277603540176326) {
  H_12(state, unused, out_7401277603540176326);
}
void live_h_35(double *state, double *unused, double *out_8096301931054628985) {
  h_35(state, unused, out_8096301931054628985);
}
void live_H_35(double *state, double *unused, double *out_3100811347230333210) {
  H_35(state, unused, out_3100811347230333210);
}
void live_h_32(double *state, double *unused, double *out_7352123618983963746) {
  h_32(state, unused, out_7352123618983963746);
}
void live_H_32(double *state, double *unused, double *out_5041649684563342011) {
  H_32(state, unused, out_5041649684563342011);
}
void live_h_13(double *state, double *unused, double *out_3435031346060559229) {
  h_13(state, unused, out_3435031346060559229);
}
void live_H_13(double *state, double *unused, double *out_3692563050135837383) {
  H_13(state, unused, out_3692563050135837383);
}
void live_h_14(double *state, double *unused, double *out_7315912115744482679) {
  h_14(state, unused, out_7315912115744482679);
}
void live_H_14(double *state, double *unused, double *out_2623010842137805176) {
  H_14(state, unused, out_2623010842137805176);
}
void live_h_33(double *state, double *unused, double *out_1041888176521729484) {
  h_33(state, unused, out_1041888176521729484);
}
void live_H_33(double *state, double *unused, double *out_1853010968884822686) {
  H_33(state, unused, out_1853010968884822686);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
