#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1737675768873191672) {
   out_1737675768873191672[0] = 0;
   out_1737675768873191672[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1737675768873191672[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1737675768873191672[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1737675768873191672[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1737675768873191672[5] = -sin(in_vec[1]);
   out_1737675768873191672[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1737675768873191672[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1737675768873191672[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1737675768873191672[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1737675768873191672[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1737675768873191672[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1737675768873191672[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1737675768873191672[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1737675768873191672[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1737675768873191672[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1737675768873191672[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1737675768873191672[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1220197346673272979) {
   out_1220197346673272979[0] = delta_x[0] + nom_x[0];
   out_1220197346673272979[1] = delta_x[1] + nom_x[1];
   out_1220197346673272979[2] = delta_x[2] + nom_x[2];
   out_1220197346673272979[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1220197346673272979[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1220197346673272979[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1220197346673272979[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1220197346673272979[7] = delta_x[6] + nom_x[7];
   out_1220197346673272979[8] = delta_x[7] + nom_x[8];
   out_1220197346673272979[9] = delta_x[8] + nom_x[9];
   out_1220197346673272979[10] = delta_x[9] + nom_x[10];
   out_1220197346673272979[11] = delta_x[10] + nom_x[11];
   out_1220197346673272979[12] = delta_x[11] + nom_x[12];
   out_1220197346673272979[13] = delta_x[12] + nom_x[13];
   out_1220197346673272979[14] = delta_x[13] + nom_x[14];
   out_1220197346673272979[15] = delta_x[14] + nom_x[15];
   out_1220197346673272979[16] = delta_x[15] + nom_x[16];
   out_1220197346673272979[17] = delta_x[16] + nom_x[17];
   out_1220197346673272979[18] = delta_x[17] + nom_x[18];
   out_1220197346673272979[19] = delta_x[18] + nom_x[19];
   out_1220197346673272979[20] = delta_x[19] + nom_x[20];
   out_1220197346673272979[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4602414087323353683) {
   out_4602414087323353683[0] = -nom_x[0] + true_x[0];
   out_4602414087323353683[1] = -nom_x[1] + true_x[1];
   out_4602414087323353683[2] = -nom_x[2] + true_x[2];
   out_4602414087323353683[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4602414087323353683[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4602414087323353683[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4602414087323353683[6] = -nom_x[7] + true_x[7];
   out_4602414087323353683[7] = -nom_x[8] + true_x[8];
   out_4602414087323353683[8] = -nom_x[9] + true_x[9];
   out_4602414087323353683[9] = -nom_x[10] + true_x[10];
   out_4602414087323353683[10] = -nom_x[11] + true_x[11];
   out_4602414087323353683[11] = -nom_x[12] + true_x[12];
   out_4602414087323353683[12] = -nom_x[13] + true_x[13];
   out_4602414087323353683[13] = -nom_x[14] + true_x[14];
   out_4602414087323353683[14] = -nom_x[15] + true_x[15];
   out_4602414087323353683[15] = -nom_x[16] + true_x[16];
   out_4602414087323353683[16] = -nom_x[17] + true_x[17];
   out_4602414087323353683[17] = -nom_x[18] + true_x[18];
   out_4602414087323353683[18] = -nom_x[19] + true_x[19];
   out_4602414087323353683[19] = -nom_x[20] + true_x[20];
   out_4602414087323353683[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3696488601833635144) {
   out_3696488601833635144[0] = 1.0;
   out_3696488601833635144[1] = 0;
   out_3696488601833635144[2] = 0;
   out_3696488601833635144[3] = 0;
   out_3696488601833635144[4] = 0;
   out_3696488601833635144[5] = 0;
   out_3696488601833635144[6] = 0;
   out_3696488601833635144[7] = 0;
   out_3696488601833635144[8] = 0;
   out_3696488601833635144[9] = 0;
   out_3696488601833635144[10] = 0;
   out_3696488601833635144[11] = 0;
   out_3696488601833635144[12] = 0;
   out_3696488601833635144[13] = 0;
   out_3696488601833635144[14] = 0;
   out_3696488601833635144[15] = 0;
   out_3696488601833635144[16] = 0;
   out_3696488601833635144[17] = 0;
   out_3696488601833635144[18] = 0;
   out_3696488601833635144[19] = 0;
   out_3696488601833635144[20] = 0;
   out_3696488601833635144[21] = 0;
   out_3696488601833635144[22] = 1.0;
   out_3696488601833635144[23] = 0;
   out_3696488601833635144[24] = 0;
   out_3696488601833635144[25] = 0;
   out_3696488601833635144[26] = 0;
   out_3696488601833635144[27] = 0;
   out_3696488601833635144[28] = 0;
   out_3696488601833635144[29] = 0;
   out_3696488601833635144[30] = 0;
   out_3696488601833635144[31] = 0;
   out_3696488601833635144[32] = 0;
   out_3696488601833635144[33] = 0;
   out_3696488601833635144[34] = 0;
   out_3696488601833635144[35] = 0;
   out_3696488601833635144[36] = 0;
   out_3696488601833635144[37] = 0;
   out_3696488601833635144[38] = 0;
   out_3696488601833635144[39] = 0;
   out_3696488601833635144[40] = 0;
   out_3696488601833635144[41] = 0;
   out_3696488601833635144[42] = 0;
   out_3696488601833635144[43] = 0;
   out_3696488601833635144[44] = 1.0;
   out_3696488601833635144[45] = 0;
   out_3696488601833635144[46] = 0;
   out_3696488601833635144[47] = 0;
   out_3696488601833635144[48] = 0;
   out_3696488601833635144[49] = 0;
   out_3696488601833635144[50] = 0;
   out_3696488601833635144[51] = 0;
   out_3696488601833635144[52] = 0;
   out_3696488601833635144[53] = 0;
   out_3696488601833635144[54] = 0;
   out_3696488601833635144[55] = 0;
   out_3696488601833635144[56] = 0;
   out_3696488601833635144[57] = 0;
   out_3696488601833635144[58] = 0;
   out_3696488601833635144[59] = 0;
   out_3696488601833635144[60] = 0;
   out_3696488601833635144[61] = 0;
   out_3696488601833635144[62] = 0;
   out_3696488601833635144[63] = 0;
   out_3696488601833635144[64] = 0;
   out_3696488601833635144[65] = 0;
   out_3696488601833635144[66] = -0.5*state[4];
   out_3696488601833635144[67] = -0.5*state[5];
   out_3696488601833635144[68] = -0.5*state[6];
   out_3696488601833635144[69] = 0;
   out_3696488601833635144[70] = 0;
   out_3696488601833635144[71] = 0;
   out_3696488601833635144[72] = 0;
   out_3696488601833635144[73] = 0;
   out_3696488601833635144[74] = 0;
   out_3696488601833635144[75] = 0;
   out_3696488601833635144[76] = 0;
   out_3696488601833635144[77] = 0;
   out_3696488601833635144[78] = 0;
   out_3696488601833635144[79] = 0;
   out_3696488601833635144[80] = 0;
   out_3696488601833635144[81] = 0;
   out_3696488601833635144[82] = 0;
   out_3696488601833635144[83] = 0;
   out_3696488601833635144[84] = 0;
   out_3696488601833635144[85] = 0;
   out_3696488601833635144[86] = 0;
   out_3696488601833635144[87] = 0.5*state[3];
   out_3696488601833635144[88] = 0.5*state[6];
   out_3696488601833635144[89] = -0.5*state[5];
   out_3696488601833635144[90] = 0;
   out_3696488601833635144[91] = 0;
   out_3696488601833635144[92] = 0;
   out_3696488601833635144[93] = 0;
   out_3696488601833635144[94] = 0;
   out_3696488601833635144[95] = 0;
   out_3696488601833635144[96] = 0;
   out_3696488601833635144[97] = 0;
   out_3696488601833635144[98] = 0;
   out_3696488601833635144[99] = 0;
   out_3696488601833635144[100] = 0;
   out_3696488601833635144[101] = 0;
   out_3696488601833635144[102] = 0;
   out_3696488601833635144[103] = 0;
   out_3696488601833635144[104] = 0;
   out_3696488601833635144[105] = 0;
   out_3696488601833635144[106] = 0;
   out_3696488601833635144[107] = 0;
   out_3696488601833635144[108] = -0.5*state[6];
   out_3696488601833635144[109] = 0.5*state[3];
   out_3696488601833635144[110] = 0.5*state[4];
   out_3696488601833635144[111] = 0;
   out_3696488601833635144[112] = 0;
   out_3696488601833635144[113] = 0;
   out_3696488601833635144[114] = 0;
   out_3696488601833635144[115] = 0;
   out_3696488601833635144[116] = 0;
   out_3696488601833635144[117] = 0;
   out_3696488601833635144[118] = 0;
   out_3696488601833635144[119] = 0;
   out_3696488601833635144[120] = 0;
   out_3696488601833635144[121] = 0;
   out_3696488601833635144[122] = 0;
   out_3696488601833635144[123] = 0;
   out_3696488601833635144[124] = 0;
   out_3696488601833635144[125] = 0;
   out_3696488601833635144[126] = 0;
   out_3696488601833635144[127] = 0;
   out_3696488601833635144[128] = 0;
   out_3696488601833635144[129] = 0.5*state[5];
   out_3696488601833635144[130] = -0.5*state[4];
   out_3696488601833635144[131] = 0.5*state[3];
   out_3696488601833635144[132] = 0;
   out_3696488601833635144[133] = 0;
   out_3696488601833635144[134] = 0;
   out_3696488601833635144[135] = 0;
   out_3696488601833635144[136] = 0;
   out_3696488601833635144[137] = 0;
   out_3696488601833635144[138] = 0;
   out_3696488601833635144[139] = 0;
   out_3696488601833635144[140] = 0;
   out_3696488601833635144[141] = 0;
   out_3696488601833635144[142] = 0;
   out_3696488601833635144[143] = 0;
   out_3696488601833635144[144] = 0;
   out_3696488601833635144[145] = 0;
   out_3696488601833635144[146] = 0;
   out_3696488601833635144[147] = 0;
   out_3696488601833635144[148] = 0;
   out_3696488601833635144[149] = 0;
   out_3696488601833635144[150] = 0;
   out_3696488601833635144[151] = 0;
   out_3696488601833635144[152] = 0;
   out_3696488601833635144[153] = 1.0;
   out_3696488601833635144[154] = 0;
   out_3696488601833635144[155] = 0;
   out_3696488601833635144[156] = 0;
   out_3696488601833635144[157] = 0;
   out_3696488601833635144[158] = 0;
   out_3696488601833635144[159] = 0;
   out_3696488601833635144[160] = 0;
   out_3696488601833635144[161] = 0;
   out_3696488601833635144[162] = 0;
   out_3696488601833635144[163] = 0;
   out_3696488601833635144[164] = 0;
   out_3696488601833635144[165] = 0;
   out_3696488601833635144[166] = 0;
   out_3696488601833635144[167] = 0;
   out_3696488601833635144[168] = 0;
   out_3696488601833635144[169] = 0;
   out_3696488601833635144[170] = 0;
   out_3696488601833635144[171] = 0;
   out_3696488601833635144[172] = 0;
   out_3696488601833635144[173] = 0;
   out_3696488601833635144[174] = 0;
   out_3696488601833635144[175] = 1.0;
   out_3696488601833635144[176] = 0;
   out_3696488601833635144[177] = 0;
   out_3696488601833635144[178] = 0;
   out_3696488601833635144[179] = 0;
   out_3696488601833635144[180] = 0;
   out_3696488601833635144[181] = 0;
   out_3696488601833635144[182] = 0;
   out_3696488601833635144[183] = 0;
   out_3696488601833635144[184] = 0;
   out_3696488601833635144[185] = 0;
   out_3696488601833635144[186] = 0;
   out_3696488601833635144[187] = 0;
   out_3696488601833635144[188] = 0;
   out_3696488601833635144[189] = 0;
   out_3696488601833635144[190] = 0;
   out_3696488601833635144[191] = 0;
   out_3696488601833635144[192] = 0;
   out_3696488601833635144[193] = 0;
   out_3696488601833635144[194] = 0;
   out_3696488601833635144[195] = 0;
   out_3696488601833635144[196] = 0;
   out_3696488601833635144[197] = 1.0;
   out_3696488601833635144[198] = 0;
   out_3696488601833635144[199] = 0;
   out_3696488601833635144[200] = 0;
   out_3696488601833635144[201] = 0;
   out_3696488601833635144[202] = 0;
   out_3696488601833635144[203] = 0;
   out_3696488601833635144[204] = 0;
   out_3696488601833635144[205] = 0;
   out_3696488601833635144[206] = 0;
   out_3696488601833635144[207] = 0;
   out_3696488601833635144[208] = 0;
   out_3696488601833635144[209] = 0;
   out_3696488601833635144[210] = 0;
   out_3696488601833635144[211] = 0;
   out_3696488601833635144[212] = 0;
   out_3696488601833635144[213] = 0;
   out_3696488601833635144[214] = 0;
   out_3696488601833635144[215] = 0;
   out_3696488601833635144[216] = 0;
   out_3696488601833635144[217] = 0;
   out_3696488601833635144[218] = 0;
   out_3696488601833635144[219] = 1.0;
   out_3696488601833635144[220] = 0;
   out_3696488601833635144[221] = 0;
   out_3696488601833635144[222] = 0;
   out_3696488601833635144[223] = 0;
   out_3696488601833635144[224] = 0;
   out_3696488601833635144[225] = 0;
   out_3696488601833635144[226] = 0;
   out_3696488601833635144[227] = 0;
   out_3696488601833635144[228] = 0;
   out_3696488601833635144[229] = 0;
   out_3696488601833635144[230] = 0;
   out_3696488601833635144[231] = 0;
   out_3696488601833635144[232] = 0;
   out_3696488601833635144[233] = 0;
   out_3696488601833635144[234] = 0;
   out_3696488601833635144[235] = 0;
   out_3696488601833635144[236] = 0;
   out_3696488601833635144[237] = 0;
   out_3696488601833635144[238] = 0;
   out_3696488601833635144[239] = 0;
   out_3696488601833635144[240] = 0;
   out_3696488601833635144[241] = 1.0;
   out_3696488601833635144[242] = 0;
   out_3696488601833635144[243] = 0;
   out_3696488601833635144[244] = 0;
   out_3696488601833635144[245] = 0;
   out_3696488601833635144[246] = 0;
   out_3696488601833635144[247] = 0;
   out_3696488601833635144[248] = 0;
   out_3696488601833635144[249] = 0;
   out_3696488601833635144[250] = 0;
   out_3696488601833635144[251] = 0;
   out_3696488601833635144[252] = 0;
   out_3696488601833635144[253] = 0;
   out_3696488601833635144[254] = 0;
   out_3696488601833635144[255] = 0;
   out_3696488601833635144[256] = 0;
   out_3696488601833635144[257] = 0;
   out_3696488601833635144[258] = 0;
   out_3696488601833635144[259] = 0;
   out_3696488601833635144[260] = 0;
   out_3696488601833635144[261] = 0;
   out_3696488601833635144[262] = 0;
   out_3696488601833635144[263] = 1.0;
   out_3696488601833635144[264] = 0;
   out_3696488601833635144[265] = 0;
   out_3696488601833635144[266] = 0;
   out_3696488601833635144[267] = 0;
   out_3696488601833635144[268] = 0;
   out_3696488601833635144[269] = 0;
   out_3696488601833635144[270] = 0;
   out_3696488601833635144[271] = 0;
   out_3696488601833635144[272] = 0;
   out_3696488601833635144[273] = 0;
   out_3696488601833635144[274] = 0;
   out_3696488601833635144[275] = 0;
   out_3696488601833635144[276] = 0;
   out_3696488601833635144[277] = 0;
   out_3696488601833635144[278] = 0;
   out_3696488601833635144[279] = 0;
   out_3696488601833635144[280] = 0;
   out_3696488601833635144[281] = 0;
   out_3696488601833635144[282] = 0;
   out_3696488601833635144[283] = 0;
   out_3696488601833635144[284] = 0;
   out_3696488601833635144[285] = 1.0;
   out_3696488601833635144[286] = 0;
   out_3696488601833635144[287] = 0;
   out_3696488601833635144[288] = 0;
   out_3696488601833635144[289] = 0;
   out_3696488601833635144[290] = 0;
   out_3696488601833635144[291] = 0;
   out_3696488601833635144[292] = 0;
   out_3696488601833635144[293] = 0;
   out_3696488601833635144[294] = 0;
   out_3696488601833635144[295] = 0;
   out_3696488601833635144[296] = 0;
   out_3696488601833635144[297] = 0;
   out_3696488601833635144[298] = 0;
   out_3696488601833635144[299] = 0;
   out_3696488601833635144[300] = 0;
   out_3696488601833635144[301] = 0;
   out_3696488601833635144[302] = 0;
   out_3696488601833635144[303] = 0;
   out_3696488601833635144[304] = 0;
   out_3696488601833635144[305] = 0;
   out_3696488601833635144[306] = 0;
   out_3696488601833635144[307] = 1.0;
   out_3696488601833635144[308] = 0;
   out_3696488601833635144[309] = 0;
   out_3696488601833635144[310] = 0;
   out_3696488601833635144[311] = 0;
   out_3696488601833635144[312] = 0;
   out_3696488601833635144[313] = 0;
   out_3696488601833635144[314] = 0;
   out_3696488601833635144[315] = 0;
   out_3696488601833635144[316] = 0;
   out_3696488601833635144[317] = 0;
   out_3696488601833635144[318] = 0;
   out_3696488601833635144[319] = 0;
   out_3696488601833635144[320] = 0;
   out_3696488601833635144[321] = 0;
   out_3696488601833635144[322] = 0;
   out_3696488601833635144[323] = 0;
   out_3696488601833635144[324] = 0;
   out_3696488601833635144[325] = 0;
   out_3696488601833635144[326] = 0;
   out_3696488601833635144[327] = 0;
   out_3696488601833635144[328] = 0;
   out_3696488601833635144[329] = 1.0;
   out_3696488601833635144[330] = 0;
   out_3696488601833635144[331] = 0;
   out_3696488601833635144[332] = 0;
   out_3696488601833635144[333] = 0;
   out_3696488601833635144[334] = 0;
   out_3696488601833635144[335] = 0;
   out_3696488601833635144[336] = 0;
   out_3696488601833635144[337] = 0;
   out_3696488601833635144[338] = 0;
   out_3696488601833635144[339] = 0;
   out_3696488601833635144[340] = 0;
   out_3696488601833635144[341] = 0;
   out_3696488601833635144[342] = 0;
   out_3696488601833635144[343] = 0;
   out_3696488601833635144[344] = 0;
   out_3696488601833635144[345] = 0;
   out_3696488601833635144[346] = 0;
   out_3696488601833635144[347] = 0;
   out_3696488601833635144[348] = 0;
   out_3696488601833635144[349] = 0;
   out_3696488601833635144[350] = 0;
   out_3696488601833635144[351] = 1.0;
   out_3696488601833635144[352] = 0;
   out_3696488601833635144[353] = 0;
   out_3696488601833635144[354] = 0;
   out_3696488601833635144[355] = 0;
   out_3696488601833635144[356] = 0;
   out_3696488601833635144[357] = 0;
   out_3696488601833635144[358] = 0;
   out_3696488601833635144[359] = 0;
   out_3696488601833635144[360] = 0;
   out_3696488601833635144[361] = 0;
   out_3696488601833635144[362] = 0;
   out_3696488601833635144[363] = 0;
   out_3696488601833635144[364] = 0;
   out_3696488601833635144[365] = 0;
   out_3696488601833635144[366] = 0;
   out_3696488601833635144[367] = 0;
   out_3696488601833635144[368] = 0;
   out_3696488601833635144[369] = 0;
   out_3696488601833635144[370] = 0;
   out_3696488601833635144[371] = 0;
   out_3696488601833635144[372] = 0;
   out_3696488601833635144[373] = 1.0;
   out_3696488601833635144[374] = 0;
   out_3696488601833635144[375] = 0;
   out_3696488601833635144[376] = 0;
   out_3696488601833635144[377] = 0;
   out_3696488601833635144[378] = 0;
   out_3696488601833635144[379] = 0;
   out_3696488601833635144[380] = 0;
   out_3696488601833635144[381] = 0;
   out_3696488601833635144[382] = 0;
   out_3696488601833635144[383] = 0;
   out_3696488601833635144[384] = 0;
   out_3696488601833635144[385] = 0;
   out_3696488601833635144[386] = 0;
   out_3696488601833635144[387] = 0;
   out_3696488601833635144[388] = 0;
   out_3696488601833635144[389] = 0;
   out_3696488601833635144[390] = 0;
   out_3696488601833635144[391] = 0;
   out_3696488601833635144[392] = 0;
   out_3696488601833635144[393] = 0;
   out_3696488601833635144[394] = 0;
   out_3696488601833635144[395] = 1.0;
   out_3696488601833635144[396] = 0;
   out_3696488601833635144[397] = 0;
   out_3696488601833635144[398] = 0;
   out_3696488601833635144[399] = 0;
   out_3696488601833635144[400] = 0;
   out_3696488601833635144[401] = 0;
   out_3696488601833635144[402] = 0;
   out_3696488601833635144[403] = 0;
   out_3696488601833635144[404] = 0;
   out_3696488601833635144[405] = 0;
   out_3696488601833635144[406] = 0;
   out_3696488601833635144[407] = 0;
   out_3696488601833635144[408] = 0;
   out_3696488601833635144[409] = 0;
   out_3696488601833635144[410] = 0;
   out_3696488601833635144[411] = 0;
   out_3696488601833635144[412] = 0;
   out_3696488601833635144[413] = 0;
   out_3696488601833635144[414] = 0;
   out_3696488601833635144[415] = 0;
   out_3696488601833635144[416] = 0;
   out_3696488601833635144[417] = 1.0;
   out_3696488601833635144[418] = 0;
   out_3696488601833635144[419] = 0;
   out_3696488601833635144[420] = 0;
   out_3696488601833635144[421] = 0;
   out_3696488601833635144[422] = 0;
   out_3696488601833635144[423] = 0;
   out_3696488601833635144[424] = 0;
   out_3696488601833635144[425] = 0;
   out_3696488601833635144[426] = 0;
   out_3696488601833635144[427] = 0;
   out_3696488601833635144[428] = 0;
   out_3696488601833635144[429] = 0;
   out_3696488601833635144[430] = 0;
   out_3696488601833635144[431] = 0;
   out_3696488601833635144[432] = 0;
   out_3696488601833635144[433] = 0;
   out_3696488601833635144[434] = 0;
   out_3696488601833635144[435] = 0;
   out_3696488601833635144[436] = 0;
   out_3696488601833635144[437] = 0;
   out_3696488601833635144[438] = 0;
   out_3696488601833635144[439] = 1.0;
   out_3696488601833635144[440] = 0;
   out_3696488601833635144[441] = 0;
   out_3696488601833635144[442] = 0;
   out_3696488601833635144[443] = 0;
   out_3696488601833635144[444] = 0;
   out_3696488601833635144[445] = 0;
   out_3696488601833635144[446] = 0;
   out_3696488601833635144[447] = 0;
   out_3696488601833635144[448] = 0;
   out_3696488601833635144[449] = 0;
   out_3696488601833635144[450] = 0;
   out_3696488601833635144[451] = 0;
   out_3696488601833635144[452] = 0;
   out_3696488601833635144[453] = 0;
   out_3696488601833635144[454] = 0;
   out_3696488601833635144[455] = 0;
   out_3696488601833635144[456] = 0;
   out_3696488601833635144[457] = 0;
   out_3696488601833635144[458] = 0;
   out_3696488601833635144[459] = 0;
   out_3696488601833635144[460] = 0;
   out_3696488601833635144[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6895149659757995784) {
   out_6895149659757995784[0] = dt*state[7] + state[0];
   out_6895149659757995784[1] = dt*state[8] + state[1];
   out_6895149659757995784[2] = dt*state[9] + state[2];
   out_6895149659757995784[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6895149659757995784[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6895149659757995784[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6895149659757995784[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6895149659757995784[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6895149659757995784[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6895149659757995784[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6895149659757995784[10] = state[10];
   out_6895149659757995784[11] = state[11];
   out_6895149659757995784[12] = state[12];
   out_6895149659757995784[13] = state[13];
   out_6895149659757995784[14] = state[14];
   out_6895149659757995784[15] = state[15];
   out_6895149659757995784[16] = state[16];
   out_6895149659757995784[17] = state[17];
   out_6895149659757995784[18] = state[18];
   out_6895149659757995784[19] = state[19];
   out_6895149659757995784[20] = state[20];
   out_6895149659757995784[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2700104100697984823) {
   out_2700104100697984823[0] = 1;
   out_2700104100697984823[1] = 0;
   out_2700104100697984823[2] = 0;
   out_2700104100697984823[3] = 0;
   out_2700104100697984823[4] = 0;
   out_2700104100697984823[5] = 0;
   out_2700104100697984823[6] = dt;
   out_2700104100697984823[7] = 0;
   out_2700104100697984823[8] = 0;
   out_2700104100697984823[9] = 0;
   out_2700104100697984823[10] = 0;
   out_2700104100697984823[11] = 0;
   out_2700104100697984823[12] = 0;
   out_2700104100697984823[13] = 0;
   out_2700104100697984823[14] = 0;
   out_2700104100697984823[15] = 0;
   out_2700104100697984823[16] = 0;
   out_2700104100697984823[17] = 0;
   out_2700104100697984823[18] = 0;
   out_2700104100697984823[19] = 0;
   out_2700104100697984823[20] = 0;
   out_2700104100697984823[21] = 0;
   out_2700104100697984823[22] = 1;
   out_2700104100697984823[23] = 0;
   out_2700104100697984823[24] = 0;
   out_2700104100697984823[25] = 0;
   out_2700104100697984823[26] = 0;
   out_2700104100697984823[27] = 0;
   out_2700104100697984823[28] = dt;
   out_2700104100697984823[29] = 0;
   out_2700104100697984823[30] = 0;
   out_2700104100697984823[31] = 0;
   out_2700104100697984823[32] = 0;
   out_2700104100697984823[33] = 0;
   out_2700104100697984823[34] = 0;
   out_2700104100697984823[35] = 0;
   out_2700104100697984823[36] = 0;
   out_2700104100697984823[37] = 0;
   out_2700104100697984823[38] = 0;
   out_2700104100697984823[39] = 0;
   out_2700104100697984823[40] = 0;
   out_2700104100697984823[41] = 0;
   out_2700104100697984823[42] = 0;
   out_2700104100697984823[43] = 0;
   out_2700104100697984823[44] = 1;
   out_2700104100697984823[45] = 0;
   out_2700104100697984823[46] = 0;
   out_2700104100697984823[47] = 0;
   out_2700104100697984823[48] = 0;
   out_2700104100697984823[49] = 0;
   out_2700104100697984823[50] = dt;
   out_2700104100697984823[51] = 0;
   out_2700104100697984823[52] = 0;
   out_2700104100697984823[53] = 0;
   out_2700104100697984823[54] = 0;
   out_2700104100697984823[55] = 0;
   out_2700104100697984823[56] = 0;
   out_2700104100697984823[57] = 0;
   out_2700104100697984823[58] = 0;
   out_2700104100697984823[59] = 0;
   out_2700104100697984823[60] = 0;
   out_2700104100697984823[61] = 0;
   out_2700104100697984823[62] = 0;
   out_2700104100697984823[63] = 0;
   out_2700104100697984823[64] = 0;
   out_2700104100697984823[65] = 0;
   out_2700104100697984823[66] = 1;
   out_2700104100697984823[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2700104100697984823[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2700104100697984823[69] = 0;
   out_2700104100697984823[70] = 0;
   out_2700104100697984823[71] = 0;
   out_2700104100697984823[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2700104100697984823[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2700104100697984823[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2700104100697984823[75] = 0;
   out_2700104100697984823[76] = 0;
   out_2700104100697984823[77] = 0;
   out_2700104100697984823[78] = 0;
   out_2700104100697984823[79] = 0;
   out_2700104100697984823[80] = 0;
   out_2700104100697984823[81] = 0;
   out_2700104100697984823[82] = 0;
   out_2700104100697984823[83] = 0;
   out_2700104100697984823[84] = 0;
   out_2700104100697984823[85] = 0;
   out_2700104100697984823[86] = 0;
   out_2700104100697984823[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2700104100697984823[88] = 1;
   out_2700104100697984823[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2700104100697984823[90] = 0;
   out_2700104100697984823[91] = 0;
   out_2700104100697984823[92] = 0;
   out_2700104100697984823[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2700104100697984823[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2700104100697984823[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2700104100697984823[96] = 0;
   out_2700104100697984823[97] = 0;
   out_2700104100697984823[98] = 0;
   out_2700104100697984823[99] = 0;
   out_2700104100697984823[100] = 0;
   out_2700104100697984823[101] = 0;
   out_2700104100697984823[102] = 0;
   out_2700104100697984823[103] = 0;
   out_2700104100697984823[104] = 0;
   out_2700104100697984823[105] = 0;
   out_2700104100697984823[106] = 0;
   out_2700104100697984823[107] = 0;
   out_2700104100697984823[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2700104100697984823[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2700104100697984823[110] = 1;
   out_2700104100697984823[111] = 0;
   out_2700104100697984823[112] = 0;
   out_2700104100697984823[113] = 0;
   out_2700104100697984823[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2700104100697984823[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2700104100697984823[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2700104100697984823[117] = 0;
   out_2700104100697984823[118] = 0;
   out_2700104100697984823[119] = 0;
   out_2700104100697984823[120] = 0;
   out_2700104100697984823[121] = 0;
   out_2700104100697984823[122] = 0;
   out_2700104100697984823[123] = 0;
   out_2700104100697984823[124] = 0;
   out_2700104100697984823[125] = 0;
   out_2700104100697984823[126] = 0;
   out_2700104100697984823[127] = 0;
   out_2700104100697984823[128] = 0;
   out_2700104100697984823[129] = 0;
   out_2700104100697984823[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2700104100697984823[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2700104100697984823[132] = 1;
   out_2700104100697984823[133] = 0;
   out_2700104100697984823[134] = 0;
   out_2700104100697984823[135] = 0;
   out_2700104100697984823[136] = 0;
   out_2700104100697984823[137] = 0;
   out_2700104100697984823[138] = 0;
   out_2700104100697984823[139] = 0;
   out_2700104100697984823[140] = 0;
   out_2700104100697984823[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2700104100697984823[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2700104100697984823[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2700104100697984823[144] = 0;
   out_2700104100697984823[145] = 0;
   out_2700104100697984823[146] = 0;
   out_2700104100697984823[147] = 0;
   out_2700104100697984823[148] = 0;
   out_2700104100697984823[149] = 0;
   out_2700104100697984823[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2700104100697984823[151] = 0;
   out_2700104100697984823[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2700104100697984823[153] = 0;
   out_2700104100697984823[154] = 1;
   out_2700104100697984823[155] = 0;
   out_2700104100697984823[156] = 0;
   out_2700104100697984823[157] = 0;
   out_2700104100697984823[158] = 0;
   out_2700104100697984823[159] = 0;
   out_2700104100697984823[160] = 0;
   out_2700104100697984823[161] = 0;
   out_2700104100697984823[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2700104100697984823[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2700104100697984823[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2700104100697984823[165] = 0;
   out_2700104100697984823[166] = 0;
   out_2700104100697984823[167] = 0;
   out_2700104100697984823[168] = 0;
   out_2700104100697984823[169] = 0;
   out_2700104100697984823[170] = 0;
   out_2700104100697984823[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2700104100697984823[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2700104100697984823[173] = 0;
   out_2700104100697984823[174] = 0;
   out_2700104100697984823[175] = 0;
   out_2700104100697984823[176] = 1;
   out_2700104100697984823[177] = 0;
   out_2700104100697984823[178] = 0;
   out_2700104100697984823[179] = 0;
   out_2700104100697984823[180] = 0;
   out_2700104100697984823[181] = 0;
   out_2700104100697984823[182] = 0;
   out_2700104100697984823[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2700104100697984823[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2700104100697984823[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2700104100697984823[186] = 0;
   out_2700104100697984823[187] = 0;
   out_2700104100697984823[188] = 0;
   out_2700104100697984823[189] = 0;
   out_2700104100697984823[190] = 0;
   out_2700104100697984823[191] = 0;
   out_2700104100697984823[192] = 0;
   out_2700104100697984823[193] = 0;
   out_2700104100697984823[194] = 0;
   out_2700104100697984823[195] = 0;
   out_2700104100697984823[196] = 0;
   out_2700104100697984823[197] = 0;
   out_2700104100697984823[198] = 1;
   out_2700104100697984823[199] = 0;
   out_2700104100697984823[200] = 0;
   out_2700104100697984823[201] = 0;
   out_2700104100697984823[202] = 0;
   out_2700104100697984823[203] = 0;
   out_2700104100697984823[204] = 0;
   out_2700104100697984823[205] = 0;
   out_2700104100697984823[206] = 0;
   out_2700104100697984823[207] = 0;
   out_2700104100697984823[208] = 0;
   out_2700104100697984823[209] = 0;
   out_2700104100697984823[210] = 0;
   out_2700104100697984823[211] = 0;
   out_2700104100697984823[212] = 0;
   out_2700104100697984823[213] = 0;
   out_2700104100697984823[214] = 0;
   out_2700104100697984823[215] = 0;
   out_2700104100697984823[216] = 0;
   out_2700104100697984823[217] = 0;
   out_2700104100697984823[218] = 0;
   out_2700104100697984823[219] = 0;
   out_2700104100697984823[220] = 1;
   out_2700104100697984823[221] = 0;
   out_2700104100697984823[222] = 0;
   out_2700104100697984823[223] = 0;
   out_2700104100697984823[224] = 0;
   out_2700104100697984823[225] = 0;
   out_2700104100697984823[226] = 0;
   out_2700104100697984823[227] = 0;
   out_2700104100697984823[228] = 0;
   out_2700104100697984823[229] = 0;
   out_2700104100697984823[230] = 0;
   out_2700104100697984823[231] = 0;
   out_2700104100697984823[232] = 0;
   out_2700104100697984823[233] = 0;
   out_2700104100697984823[234] = 0;
   out_2700104100697984823[235] = 0;
   out_2700104100697984823[236] = 0;
   out_2700104100697984823[237] = 0;
   out_2700104100697984823[238] = 0;
   out_2700104100697984823[239] = 0;
   out_2700104100697984823[240] = 0;
   out_2700104100697984823[241] = 0;
   out_2700104100697984823[242] = 1;
   out_2700104100697984823[243] = 0;
   out_2700104100697984823[244] = 0;
   out_2700104100697984823[245] = 0;
   out_2700104100697984823[246] = 0;
   out_2700104100697984823[247] = 0;
   out_2700104100697984823[248] = 0;
   out_2700104100697984823[249] = 0;
   out_2700104100697984823[250] = 0;
   out_2700104100697984823[251] = 0;
   out_2700104100697984823[252] = 0;
   out_2700104100697984823[253] = 0;
   out_2700104100697984823[254] = 0;
   out_2700104100697984823[255] = 0;
   out_2700104100697984823[256] = 0;
   out_2700104100697984823[257] = 0;
   out_2700104100697984823[258] = 0;
   out_2700104100697984823[259] = 0;
   out_2700104100697984823[260] = 0;
   out_2700104100697984823[261] = 0;
   out_2700104100697984823[262] = 0;
   out_2700104100697984823[263] = 0;
   out_2700104100697984823[264] = 1;
   out_2700104100697984823[265] = 0;
   out_2700104100697984823[266] = 0;
   out_2700104100697984823[267] = 0;
   out_2700104100697984823[268] = 0;
   out_2700104100697984823[269] = 0;
   out_2700104100697984823[270] = 0;
   out_2700104100697984823[271] = 0;
   out_2700104100697984823[272] = 0;
   out_2700104100697984823[273] = 0;
   out_2700104100697984823[274] = 0;
   out_2700104100697984823[275] = 0;
   out_2700104100697984823[276] = 0;
   out_2700104100697984823[277] = 0;
   out_2700104100697984823[278] = 0;
   out_2700104100697984823[279] = 0;
   out_2700104100697984823[280] = 0;
   out_2700104100697984823[281] = 0;
   out_2700104100697984823[282] = 0;
   out_2700104100697984823[283] = 0;
   out_2700104100697984823[284] = 0;
   out_2700104100697984823[285] = 0;
   out_2700104100697984823[286] = 1;
   out_2700104100697984823[287] = 0;
   out_2700104100697984823[288] = 0;
   out_2700104100697984823[289] = 0;
   out_2700104100697984823[290] = 0;
   out_2700104100697984823[291] = 0;
   out_2700104100697984823[292] = 0;
   out_2700104100697984823[293] = 0;
   out_2700104100697984823[294] = 0;
   out_2700104100697984823[295] = 0;
   out_2700104100697984823[296] = 0;
   out_2700104100697984823[297] = 0;
   out_2700104100697984823[298] = 0;
   out_2700104100697984823[299] = 0;
   out_2700104100697984823[300] = 0;
   out_2700104100697984823[301] = 0;
   out_2700104100697984823[302] = 0;
   out_2700104100697984823[303] = 0;
   out_2700104100697984823[304] = 0;
   out_2700104100697984823[305] = 0;
   out_2700104100697984823[306] = 0;
   out_2700104100697984823[307] = 0;
   out_2700104100697984823[308] = 1;
   out_2700104100697984823[309] = 0;
   out_2700104100697984823[310] = 0;
   out_2700104100697984823[311] = 0;
   out_2700104100697984823[312] = 0;
   out_2700104100697984823[313] = 0;
   out_2700104100697984823[314] = 0;
   out_2700104100697984823[315] = 0;
   out_2700104100697984823[316] = 0;
   out_2700104100697984823[317] = 0;
   out_2700104100697984823[318] = 0;
   out_2700104100697984823[319] = 0;
   out_2700104100697984823[320] = 0;
   out_2700104100697984823[321] = 0;
   out_2700104100697984823[322] = 0;
   out_2700104100697984823[323] = 0;
   out_2700104100697984823[324] = 0;
   out_2700104100697984823[325] = 0;
   out_2700104100697984823[326] = 0;
   out_2700104100697984823[327] = 0;
   out_2700104100697984823[328] = 0;
   out_2700104100697984823[329] = 0;
   out_2700104100697984823[330] = 1;
   out_2700104100697984823[331] = 0;
   out_2700104100697984823[332] = 0;
   out_2700104100697984823[333] = 0;
   out_2700104100697984823[334] = 0;
   out_2700104100697984823[335] = 0;
   out_2700104100697984823[336] = 0;
   out_2700104100697984823[337] = 0;
   out_2700104100697984823[338] = 0;
   out_2700104100697984823[339] = 0;
   out_2700104100697984823[340] = 0;
   out_2700104100697984823[341] = 0;
   out_2700104100697984823[342] = 0;
   out_2700104100697984823[343] = 0;
   out_2700104100697984823[344] = 0;
   out_2700104100697984823[345] = 0;
   out_2700104100697984823[346] = 0;
   out_2700104100697984823[347] = 0;
   out_2700104100697984823[348] = 0;
   out_2700104100697984823[349] = 0;
   out_2700104100697984823[350] = 0;
   out_2700104100697984823[351] = 0;
   out_2700104100697984823[352] = 1;
   out_2700104100697984823[353] = 0;
   out_2700104100697984823[354] = 0;
   out_2700104100697984823[355] = 0;
   out_2700104100697984823[356] = 0;
   out_2700104100697984823[357] = 0;
   out_2700104100697984823[358] = 0;
   out_2700104100697984823[359] = 0;
   out_2700104100697984823[360] = 0;
   out_2700104100697984823[361] = 0;
   out_2700104100697984823[362] = 0;
   out_2700104100697984823[363] = 0;
   out_2700104100697984823[364] = 0;
   out_2700104100697984823[365] = 0;
   out_2700104100697984823[366] = 0;
   out_2700104100697984823[367] = 0;
   out_2700104100697984823[368] = 0;
   out_2700104100697984823[369] = 0;
   out_2700104100697984823[370] = 0;
   out_2700104100697984823[371] = 0;
   out_2700104100697984823[372] = 0;
   out_2700104100697984823[373] = 0;
   out_2700104100697984823[374] = 1;
   out_2700104100697984823[375] = 0;
   out_2700104100697984823[376] = 0;
   out_2700104100697984823[377] = 0;
   out_2700104100697984823[378] = 0;
   out_2700104100697984823[379] = 0;
   out_2700104100697984823[380] = 0;
   out_2700104100697984823[381] = 0;
   out_2700104100697984823[382] = 0;
   out_2700104100697984823[383] = 0;
   out_2700104100697984823[384] = 0;
   out_2700104100697984823[385] = 0;
   out_2700104100697984823[386] = 0;
   out_2700104100697984823[387] = 0;
   out_2700104100697984823[388] = 0;
   out_2700104100697984823[389] = 0;
   out_2700104100697984823[390] = 0;
   out_2700104100697984823[391] = 0;
   out_2700104100697984823[392] = 0;
   out_2700104100697984823[393] = 0;
   out_2700104100697984823[394] = 0;
   out_2700104100697984823[395] = 0;
   out_2700104100697984823[396] = 1;
   out_2700104100697984823[397] = 0;
   out_2700104100697984823[398] = 0;
   out_2700104100697984823[399] = 0;
   out_2700104100697984823[400] = 0;
   out_2700104100697984823[401] = 0;
   out_2700104100697984823[402] = 0;
   out_2700104100697984823[403] = 0;
   out_2700104100697984823[404] = 0;
   out_2700104100697984823[405] = 0;
   out_2700104100697984823[406] = 0;
   out_2700104100697984823[407] = 0;
   out_2700104100697984823[408] = 0;
   out_2700104100697984823[409] = 0;
   out_2700104100697984823[410] = 0;
   out_2700104100697984823[411] = 0;
   out_2700104100697984823[412] = 0;
   out_2700104100697984823[413] = 0;
   out_2700104100697984823[414] = 0;
   out_2700104100697984823[415] = 0;
   out_2700104100697984823[416] = 0;
   out_2700104100697984823[417] = 0;
   out_2700104100697984823[418] = 1;
   out_2700104100697984823[419] = 0;
   out_2700104100697984823[420] = 0;
   out_2700104100697984823[421] = 0;
   out_2700104100697984823[422] = 0;
   out_2700104100697984823[423] = 0;
   out_2700104100697984823[424] = 0;
   out_2700104100697984823[425] = 0;
   out_2700104100697984823[426] = 0;
   out_2700104100697984823[427] = 0;
   out_2700104100697984823[428] = 0;
   out_2700104100697984823[429] = 0;
   out_2700104100697984823[430] = 0;
   out_2700104100697984823[431] = 0;
   out_2700104100697984823[432] = 0;
   out_2700104100697984823[433] = 0;
   out_2700104100697984823[434] = 0;
   out_2700104100697984823[435] = 0;
   out_2700104100697984823[436] = 0;
   out_2700104100697984823[437] = 0;
   out_2700104100697984823[438] = 0;
   out_2700104100697984823[439] = 0;
   out_2700104100697984823[440] = 1;
}
void h_4(double *state, double *unused, double *out_2244972580460740231) {
   out_2244972580460740231[0] = state[10] + state[13];
   out_2244972580460740231[1] = state[11] + state[14];
   out_2244972580460740231[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_9063920945886927706) {
   out_9063920945886927706[0] = 0;
   out_9063920945886927706[1] = 0;
   out_9063920945886927706[2] = 0;
   out_9063920945886927706[3] = 0;
   out_9063920945886927706[4] = 0;
   out_9063920945886927706[5] = 0;
   out_9063920945886927706[6] = 0;
   out_9063920945886927706[7] = 0;
   out_9063920945886927706[8] = 0;
   out_9063920945886927706[9] = 0;
   out_9063920945886927706[10] = 1;
   out_9063920945886927706[11] = 0;
   out_9063920945886927706[12] = 0;
   out_9063920945886927706[13] = 1;
   out_9063920945886927706[14] = 0;
   out_9063920945886927706[15] = 0;
   out_9063920945886927706[16] = 0;
   out_9063920945886927706[17] = 0;
   out_9063920945886927706[18] = 0;
   out_9063920945886927706[19] = 0;
   out_9063920945886927706[20] = 0;
   out_9063920945886927706[21] = 0;
   out_9063920945886927706[22] = 0;
   out_9063920945886927706[23] = 0;
   out_9063920945886927706[24] = 0;
   out_9063920945886927706[25] = 0;
   out_9063920945886927706[26] = 0;
   out_9063920945886927706[27] = 0;
   out_9063920945886927706[28] = 0;
   out_9063920945886927706[29] = 0;
   out_9063920945886927706[30] = 0;
   out_9063920945886927706[31] = 0;
   out_9063920945886927706[32] = 0;
   out_9063920945886927706[33] = 1;
   out_9063920945886927706[34] = 0;
   out_9063920945886927706[35] = 0;
   out_9063920945886927706[36] = 1;
   out_9063920945886927706[37] = 0;
   out_9063920945886927706[38] = 0;
   out_9063920945886927706[39] = 0;
   out_9063920945886927706[40] = 0;
   out_9063920945886927706[41] = 0;
   out_9063920945886927706[42] = 0;
   out_9063920945886927706[43] = 0;
   out_9063920945886927706[44] = 0;
   out_9063920945886927706[45] = 0;
   out_9063920945886927706[46] = 0;
   out_9063920945886927706[47] = 0;
   out_9063920945886927706[48] = 0;
   out_9063920945886927706[49] = 0;
   out_9063920945886927706[50] = 0;
   out_9063920945886927706[51] = 0;
   out_9063920945886927706[52] = 0;
   out_9063920945886927706[53] = 0;
   out_9063920945886927706[54] = 0;
   out_9063920945886927706[55] = 0;
   out_9063920945886927706[56] = 1;
   out_9063920945886927706[57] = 0;
   out_9063920945886927706[58] = 0;
   out_9063920945886927706[59] = 1;
   out_9063920945886927706[60] = 0;
   out_9063920945886927706[61] = 0;
   out_9063920945886927706[62] = 0;
   out_9063920945886927706[63] = 0;
   out_9063920945886927706[64] = 0;
   out_9063920945886927706[65] = 0;
}
void h_9(double *state, double *unused, double *out_6221957209825685258) {
   out_6221957209825685258[0] = state[10];
   out_6221957209825685258[1] = state[11];
   out_6221957209825685258[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4906753209532150223) {
   out_4906753209532150223[0] = 0;
   out_4906753209532150223[1] = 0;
   out_4906753209532150223[2] = 0;
   out_4906753209532150223[3] = 0;
   out_4906753209532150223[4] = 0;
   out_4906753209532150223[5] = 0;
   out_4906753209532150223[6] = 0;
   out_4906753209532150223[7] = 0;
   out_4906753209532150223[8] = 0;
   out_4906753209532150223[9] = 0;
   out_4906753209532150223[10] = 1;
   out_4906753209532150223[11] = 0;
   out_4906753209532150223[12] = 0;
   out_4906753209532150223[13] = 0;
   out_4906753209532150223[14] = 0;
   out_4906753209532150223[15] = 0;
   out_4906753209532150223[16] = 0;
   out_4906753209532150223[17] = 0;
   out_4906753209532150223[18] = 0;
   out_4906753209532150223[19] = 0;
   out_4906753209532150223[20] = 0;
   out_4906753209532150223[21] = 0;
   out_4906753209532150223[22] = 0;
   out_4906753209532150223[23] = 0;
   out_4906753209532150223[24] = 0;
   out_4906753209532150223[25] = 0;
   out_4906753209532150223[26] = 0;
   out_4906753209532150223[27] = 0;
   out_4906753209532150223[28] = 0;
   out_4906753209532150223[29] = 0;
   out_4906753209532150223[30] = 0;
   out_4906753209532150223[31] = 0;
   out_4906753209532150223[32] = 0;
   out_4906753209532150223[33] = 1;
   out_4906753209532150223[34] = 0;
   out_4906753209532150223[35] = 0;
   out_4906753209532150223[36] = 0;
   out_4906753209532150223[37] = 0;
   out_4906753209532150223[38] = 0;
   out_4906753209532150223[39] = 0;
   out_4906753209532150223[40] = 0;
   out_4906753209532150223[41] = 0;
   out_4906753209532150223[42] = 0;
   out_4906753209532150223[43] = 0;
   out_4906753209532150223[44] = 0;
   out_4906753209532150223[45] = 0;
   out_4906753209532150223[46] = 0;
   out_4906753209532150223[47] = 0;
   out_4906753209532150223[48] = 0;
   out_4906753209532150223[49] = 0;
   out_4906753209532150223[50] = 0;
   out_4906753209532150223[51] = 0;
   out_4906753209532150223[52] = 0;
   out_4906753209532150223[53] = 0;
   out_4906753209532150223[54] = 0;
   out_4906753209532150223[55] = 0;
   out_4906753209532150223[56] = 1;
   out_4906753209532150223[57] = 0;
   out_4906753209532150223[58] = 0;
   out_4906753209532150223[59] = 0;
   out_4906753209532150223[60] = 0;
   out_4906753209532150223[61] = 0;
   out_4906753209532150223[62] = 0;
   out_4906753209532150223[63] = 0;
   out_4906753209532150223[64] = 0;
   out_4906753209532150223[65] = 0;
}
void h_10(double *state, double *unused, double *out_8781689258832014065) {
   out_8781689258832014065[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8781689258832014065[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8781689258832014065[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6132272573217386885) {
   out_6132272573217386885[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6132272573217386885[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6132272573217386885[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6132272573217386885[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6132272573217386885[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6132272573217386885[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6132272573217386885[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6132272573217386885[7] = 0;
   out_6132272573217386885[8] = 0;
   out_6132272573217386885[9] = 0;
   out_6132272573217386885[10] = 0;
   out_6132272573217386885[11] = 0;
   out_6132272573217386885[12] = 0;
   out_6132272573217386885[13] = 0;
   out_6132272573217386885[14] = 0;
   out_6132272573217386885[15] = 0;
   out_6132272573217386885[16] = 1;
   out_6132272573217386885[17] = 0;
   out_6132272573217386885[18] = 0;
   out_6132272573217386885[19] = 1;
   out_6132272573217386885[20] = 0;
   out_6132272573217386885[21] = 0;
   out_6132272573217386885[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6132272573217386885[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6132272573217386885[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6132272573217386885[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6132272573217386885[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6132272573217386885[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6132272573217386885[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6132272573217386885[29] = 0;
   out_6132272573217386885[30] = 0;
   out_6132272573217386885[31] = 0;
   out_6132272573217386885[32] = 0;
   out_6132272573217386885[33] = 0;
   out_6132272573217386885[34] = 0;
   out_6132272573217386885[35] = 0;
   out_6132272573217386885[36] = 0;
   out_6132272573217386885[37] = 0;
   out_6132272573217386885[38] = 0;
   out_6132272573217386885[39] = 1;
   out_6132272573217386885[40] = 0;
   out_6132272573217386885[41] = 0;
   out_6132272573217386885[42] = 1;
   out_6132272573217386885[43] = 0;
   out_6132272573217386885[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6132272573217386885[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6132272573217386885[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6132272573217386885[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6132272573217386885[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6132272573217386885[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6132272573217386885[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6132272573217386885[51] = 0;
   out_6132272573217386885[52] = 0;
   out_6132272573217386885[53] = 0;
   out_6132272573217386885[54] = 0;
   out_6132272573217386885[55] = 0;
   out_6132272573217386885[56] = 0;
   out_6132272573217386885[57] = 0;
   out_6132272573217386885[58] = 0;
   out_6132272573217386885[59] = 0;
   out_6132272573217386885[60] = 0;
   out_6132272573217386885[61] = 0;
   out_6132272573217386885[62] = 1;
   out_6132272573217386885[63] = 0;
   out_6132272573217386885[64] = 0;
   out_6132272573217386885[65] = 1;
}
void h_12(double *state, double *unused, double *out_7773510573876563866) {
   out_7773510573876563866[0] = state[0];
   out_7773510573876563866[1] = state[1];
   out_7773510573876563866[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8761724102775030243) {
   out_8761724102775030243[0] = 1;
   out_8761724102775030243[1] = 0;
   out_8761724102775030243[2] = 0;
   out_8761724102775030243[3] = 0;
   out_8761724102775030243[4] = 0;
   out_8761724102775030243[5] = 0;
   out_8761724102775030243[6] = 0;
   out_8761724102775030243[7] = 0;
   out_8761724102775030243[8] = 0;
   out_8761724102775030243[9] = 0;
   out_8761724102775030243[10] = 0;
   out_8761724102775030243[11] = 0;
   out_8761724102775030243[12] = 0;
   out_8761724102775030243[13] = 0;
   out_8761724102775030243[14] = 0;
   out_8761724102775030243[15] = 0;
   out_8761724102775030243[16] = 0;
   out_8761724102775030243[17] = 0;
   out_8761724102775030243[18] = 0;
   out_8761724102775030243[19] = 0;
   out_8761724102775030243[20] = 0;
   out_8761724102775030243[21] = 0;
   out_8761724102775030243[22] = 0;
   out_8761724102775030243[23] = 1;
   out_8761724102775030243[24] = 0;
   out_8761724102775030243[25] = 0;
   out_8761724102775030243[26] = 0;
   out_8761724102775030243[27] = 0;
   out_8761724102775030243[28] = 0;
   out_8761724102775030243[29] = 0;
   out_8761724102775030243[30] = 0;
   out_8761724102775030243[31] = 0;
   out_8761724102775030243[32] = 0;
   out_8761724102775030243[33] = 0;
   out_8761724102775030243[34] = 0;
   out_8761724102775030243[35] = 0;
   out_8761724102775030243[36] = 0;
   out_8761724102775030243[37] = 0;
   out_8761724102775030243[38] = 0;
   out_8761724102775030243[39] = 0;
   out_8761724102775030243[40] = 0;
   out_8761724102775030243[41] = 0;
   out_8761724102775030243[42] = 0;
   out_8761724102775030243[43] = 0;
   out_8761724102775030243[44] = 0;
   out_8761724102775030243[45] = 0;
   out_8761724102775030243[46] = 1;
   out_8761724102775030243[47] = 0;
   out_8761724102775030243[48] = 0;
   out_8761724102775030243[49] = 0;
   out_8761724102775030243[50] = 0;
   out_8761724102775030243[51] = 0;
   out_8761724102775030243[52] = 0;
   out_8761724102775030243[53] = 0;
   out_8761724102775030243[54] = 0;
   out_8761724102775030243[55] = 0;
   out_8761724102775030243[56] = 0;
   out_8761724102775030243[57] = 0;
   out_8761724102775030243[58] = 0;
   out_8761724102775030243[59] = 0;
   out_8761724102775030243[60] = 0;
   out_8761724102775030243[61] = 0;
   out_8761724102775030243[62] = 0;
   out_8761724102775030243[63] = 0;
   out_8761724102775030243[64] = 0;
   out_8761724102775030243[65] = 0;
}
void h_35(double *state, double *unused, double *out_3802991016272336407) {
   out_3802991016272336407[0] = state[7];
   out_3802991016272336407[1] = state[8];
   out_3802991016272336407[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6016161070450016534) {
   out_6016161070450016534[0] = 0;
   out_6016161070450016534[1] = 0;
   out_6016161070450016534[2] = 0;
   out_6016161070450016534[3] = 0;
   out_6016161070450016534[4] = 0;
   out_6016161070450016534[5] = 0;
   out_6016161070450016534[6] = 0;
   out_6016161070450016534[7] = 1;
   out_6016161070450016534[8] = 0;
   out_6016161070450016534[9] = 0;
   out_6016161070450016534[10] = 0;
   out_6016161070450016534[11] = 0;
   out_6016161070450016534[12] = 0;
   out_6016161070450016534[13] = 0;
   out_6016161070450016534[14] = 0;
   out_6016161070450016534[15] = 0;
   out_6016161070450016534[16] = 0;
   out_6016161070450016534[17] = 0;
   out_6016161070450016534[18] = 0;
   out_6016161070450016534[19] = 0;
   out_6016161070450016534[20] = 0;
   out_6016161070450016534[21] = 0;
   out_6016161070450016534[22] = 0;
   out_6016161070450016534[23] = 0;
   out_6016161070450016534[24] = 0;
   out_6016161070450016534[25] = 0;
   out_6016161070450016534[26] = 0;
   out_6016161070450016534[27] = 0;
   out_6016161070450016534[28] = 0;
   out_6016161070450016534[29] = 0;
   out_6016161070450016534[30] = 1;
   out_6016161070450016534[31] = 0;
   out_6016161070450016534[32] = 0;
   out_6016161070450016534[33] = 0;
   out_6016161070450016534[34] = 0;
   out_6016161070450016534[35] = 0;
   out_6016161070450016534[36] = 0;
   out_6016161070450016534[37] = 0;
   out_6016161070450016534[38] = 0;
   out_6016161070450016534[39] = 0;
   out_6016161070450016534[40] = 0;
   out_6016161070450016534[41] = 0;
   out_6016161070450016534[42] = 0;
   out_6016161070450016534[43] = 0;
   out_6016161070450016534[44] = 0;
   out_6016161070450016534[45] = 0;
   out_6016161070450016534[46] = 0;
   out_6016161070450016534[47] = 0;
   out_6016161070450016534[48] = 0;
   out_6016161070450016534[49] = 0;
   out_6016161070450016534[50] = 0;
   out_6016161070450016534[51] = 0;
   out_6016161070450016534[52] = 0;
   out_6016161070450016534[53] = 1;
   out_6016161070450016534[54] = 0;
   out_6016161070450016534[55] = 0;
   out_6016161070450016534[56] = 0;
   out_6016161070450016534[57] = 0;
   out_6016161070450016534[58] = 0;
   out_6016161070450016534[59] = 0;
   out_6016161070450016534[60] = 0;
   out_6016161070450016534[61] = 0;
   out_6016161070450016534[62] = 0;
   out_6016161070450016534[63] = 0;
   out_6016161070450016534[64] = 0;
   out_6016161070450016534[65] = 0;
}
void h_32(double *state, double *unused, double *out_6542600231176617904) {
   out_6542600231176617904[0] = state[3];
   out_6542600231176617904[1] = state[4];
   out_6542600231176617904[2] = state[5];
   out_6542600231176617904[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5515718499565418726) {
   out_5515718499565418726[0] = 0;
   out_5515718499565418726[1] = 0;
   out_5515718499565418726[2] = 0;
   out_5515718499565418726[3] = 1;
   out_5515718499565418726[4] = 0;
   out_5515718499565418726[5] = 0;
   out_5515718499565418726[6] = 0;
   out_5515718499565418726[7] = 0;
   out_5515718499565418726[8] = 0;
   out_5515718499565418726[9] = 0;
   out_5515718499565418726[10] = 0;
   out_5515718499565418726[11] = 0;
   out_5515718499565418726[12] = 0;
   out_5515718499565418726[13] = 0;
   out_5515718499565418726[14] = 0;
   out_5515718499565418726[15] = 0;
   out_5515718499565418726[16] = 0;
   out_5515718499565418726[17] = 0;
   out_5515718499565418726[18] = 0;
   out_5515718499565418726[19] = 0;
   out_5515718499565418726[20] = 0;
   out_5515718499565418726[21] = 0;
   out_5515718499565418726[22] = 0;
   out_5515718499565418726[23] = 0;
   out_5515718499565418726[24] = 0;
   out_5515718499565418726[25] = 0;
   out_5515718499565418726[26] = 1;
   out_5515718499565418726[27] = 0;
   out_5515718499565418726[28] = 0;
   out_5515718499565418726[29] = 0;
   out_5515718499565418726[30] = 0;
   out_5515718499565418726[31] = 0;
   out_5515718499565418726[32] = 0;
   out_5515718499565418726[33] = 0;
   out_5515718499565418726[34] = 0;
   out_5515718499565418726[35] = 0;
   out_5515718499565418726[36] = 0;
   out_5515718499565418726[37] = 0;
   out_5515718499565418726[38] = 0;
   out_5515718499565418726[39] = 0;
   out_5515718499565418726[40] = 0;
   out_5515718499565418726[41] = 0;
   out_5515718499565418726[42] = 0;
   out_5515718499565418726[43] = 0;
   out_5515718499565418726[44] = 0;
   out_5515718499565418726[45] = 0;
   out_5515718499565418726[46] = 0;
   out_5515718499565418726[47] = 0;
   out_5515718499565418726[48] = 0;
   out_5515718499565418726[49] = 1;
   out_5515718499565418726[50] = 0;
   out_5515718499565418726[51] = 0;
   out_5515718499565418726[52] = 0;
   out_5515718499565418726[53] = 0;
   out_5515718499565418726[54] = 0;
   out_5515718499565418726[55] = 0;
   out_5515718499565418726[56] = 0;
   out_5515718499565418726[57] = 0;
   out_5515718499565418726[58] = 0;
   out_5515718499565418726[59] = 0;
   out_5515718499565418726[60] = 0;
   out_5515718499565418726[61] = 0;
   out_5515718499565418726[62] = 0;
   out_5515718499565418726[63] = 0;
   out_5515718499565418726[64] = 0;
   out_5515718499565418726[65] = 0;
   out_5515718499565418726[66] = 0;
   out_5515718499565418726[67] = 0;
   out_5515718499565418726[68] = 0;
   out_5515718499565418726[69] = 0;
   out_5515718499565418726[70] = 0;
   out_5515718499565418726[71] = 0;
   out_5515718499565418726[72] = 1;
   out_5515718499565418726[73] = 0;
   out_5515718499565418726[74] = 0;
   out_5515718499565418726[75] = 0;
   out_5515718499565418726[76] = 0;
   out_5515718499565418726[77] = 0;
   out_5515718499565418726[78] = 0;
   out_5515718499565418726[79] = 0;
   out_5515718499565418726[80] = 0;
   out_5515718499565418726[81] = 0;
   out_5515718499565418726[82] = 0;
   out_5515718499565418726[83] = 0;
   out_5515718499565418726[84] = 0;
   out_5515718499565418726[85] = 0;
   out_5515718499565418726[86] = 0;
   out_5515718499565418726[87] = 0;
}
void h_13(double *state, double *unused, double *out_7248310467205087467) {
   out_7248310467205087467[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7248310467205087467[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7248310467205087467[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7493082640863699771) {
   out_7493082640863699771[0] = 0;
   out_7493082640863699771[1] = 0;
   out_7493082640863699771[2] = 0;
   out_7493082640863699771[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7493082640863699771[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7493082640863699771[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7493082640863699771[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7493082640863699771[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7493082640863699771[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7493082640863699771[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7493082640863699771[10] = 0;
   out_7493082640863699771[11] = 0;
   out_7493082640863699771[12] = 0;
   out_7493082640863699771[13] = 0;
   out_7493082640863699771[14] = 0;
   out_7493082640863699771[15] = 0;
   out_7493082640863699771[16] = 0;
   out_7493082640863699771[17] = 0;
   out_7493082640863699771[18] = 0;
   out_7493082640863699771[19] = 0;
   out_7493082640863699771[20] = 0;
   out_7493082640863699771[21] = 0;
   out_7493082640863699771[22] = 0;
   out_7493082640863699771[23] = 0;
   out_7493082640863699771[24] = 0;
   out_7493082640863699771[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7493082640863699771[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7493082640863699771[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7493082640863699771[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7493082640863699771[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7493082640863699771[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7493082640863699771[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7493082640863699771[32] = 0;
   out_7493082640863699771[33] = 0;
   out_7493082640863699771[34] = 0;
   out_7493082640863699771[35] = 0;
   out_7493082640863699771[36] = 0;
   out_7493082640863699771[37] = 0;
   out_7493082640863699771[38] = 0;
   out_7493082640863699771[39] = 0;
   out_7493082640863699771[40] = 0;
   out_7493082640863699771[41] = 0;
   out_7493082640863699771[42] = 0;
   out_7493082640863699771[43] = 0;
   out_7493082640863699771[44] = 0;
   out_7493082640863699771[45] = 0;
   out_7493082640863699771[46] = 0;
   out_7493082640863699771[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7493082640863699771[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7493082640863699771[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7493082640863699771[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7493082640863699771[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7493082640863699771[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7493082640863699771[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7493082640863699771[54] = 0;
   out_7493082640863699771[55] = 0;
   out_7493082640863699771[56] = 0;
   out_7493082640863699771[57] = 0;
   out_7493082640863699771[58] = 0;
   out_7493082640863699771[59] = 0;
   out_7493082640863699771[60] = 0;
   out_7493082640863699771[61] = 0;
   out_7493082640863699771[62] = 0;
   out_7493082640863699771[63] = 0;
   out_7493082640863699771[64] = 0;
   out_7493082640863699771[65] = 0;
}
void h_14(double *state, double *unused, double *out_6221957209825685258) {
   out_6221957209825685258[0] = state[10];
   out_6221957209825685258[1] = state[11];
   out_6221957209825685258[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4906753209532150223) {
   out_4906753209532150223[0] = 0;
   out_4906753209532150223[1] = 0;
   out_4906753209532150223[2] = 0;
   out_4906753209532150223[3] = 0;
   out_4906753209532150223[4] = 0;
   out_4906753209532150223[5] = 0;
   out_4906753209532150223[6] = 0;
   out_4906753209532150223[7] = 0;
   out_4906753209532150223[8] = 0;
   out_4906753209532150223[9] = 0;
   out_4906753209532150223[10] = 1;
   out_4906753209532150223[11] = 0;
   out_4906753209532150223[12] = 0;
   out_4906753209532150223[13] = 0;
   out_4906753209532150223[14] = 0;
   out_4906753209532150223[15] = 0;
   out_4906753209532150223[16] = 0;
   out_4906753209532150223[17] = 0;
   out_4906753209532150223[18] = 0;
   out_4906753209532150223[19] = 0;
   out_4906753209532150223[20] = 0;
   out_4906753209532150223[21] = 0;
   out_4906753209532150223[22] = 0;
   out_4906753209532150223[23] = 0;
   out_4906753209532150223[24] = 0;
   out_4906753209532150223[25] = 0;
   out_4906753209532150223[26] = 0;
   out_4906753209532150223[27] = 0;
   out_4906753209532150223[28] = 0;
   out_4906753209532150223[29] = 0;
   out_4906753209532150223[30] = 0;
   out_4906753209532150223[31] = 0;
   out_4906753209532150223[32] = 0;
   out_4906753209532150223[33] = 1;
   out_4906753209532150223[34] = 0;
   out_4906753209532150223[35] = 0;
   out_4906753209532150223[36] = 0;
   out_4906753209532150223[37] = 0;
   out_4906753209532150223[38] = 0;
   out_4906753209532150223[39] = 0;
   out_4906753209532150223[40] = 0;
   out_4906753209532150223[41] = 0;
   out_4906753209532150223[42] = 0;
   out_4906753209532150223[43] = 0;
   out_4906753209532150223[44] = 0;
   out_4906753209532150223[45] = 0;
   out_4906753209532150223[46] = 0;
   out_4906753209532150223[47] = 0;
   out_4906753209532150223[48] = 0;
   out_4906753209532150223[49] = 0;
   out_4906753209532150223[50] = 0;
   out_4906753209532150223[51] = 0;
   out_4906753209532150223[52] = 0;
   out_4906753209532150223[53] = 0;
   out_4906753209532150223[54] = 0;
   out_4906753209532150223[55] = 0;
   out_4906753209532150223[56] = 1;
   out_4906753209532150223[57] = 0;
   out_4906753209532150223[58] = 0;
   out_4906753209532150223[59] = 0;
   out_4906753209532150223[60] = 0;
   out_4906753209532150223[61] = 0;
   out_4906753209532150223[62] = 0;
   out_4906753209532150223[63] = 0;
   out_4906753209532150223[64] = 0;
   out_4906753209532150223[65] = 0;
}
void h_33(double *state, double *unused, double *out_7737232567092818914) {
   out_7737232567092818914[0] = state[16];
   out_7737232567092818914[1] = state[17];
   out_7737232567092818914[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2865604065811158930) {
   out_2865604065811158930[0] = 0;
   out_2865604065811158930[1] = 0;
   out_2865604065811158930[2] = 0;
   out_2865604065811158930[3] = 0;
   out_2865604065811158930[4] = 0;
   out_2865604065811158930[5] = 0;
   out_2865604065811158930[6] = 0;
   out_2865604065811158930[7] = 0;
   out_2865604065811158930[8] = 0;
   out_2865604065811158930[9] = 0;
   out_2865604065811158930[10] = 0;
   out_2865604065811158930[11] = 0;
   out_2865604065811158930[12] = 0;
   out_2865604065811158930[13] = 0;
   out_2865604065811158930[14] = 0;
   out_2865604065811158930[15] = 0;
   out_2865604065811158930[16] = 1;
   out_2865604065811158930[17] = 0;
   out_2865604065811158930[18] = 0;
   out_2865604065811158930[19] = 0;
   out_2865604065811158930[20] = 0;
   out_2865604065811158930[21] = 0;
   out_2865604065811158930[22] = 0;
   out_2865604065811158930[23] = 0;
   out_2865604065811158930[24] = 0;
   out_2865604065811158930[25] = 0;
   out_2865604065811158930[26] = 0;
   out_2865604065811158930[27] = 0;
   out_2865604065811158930[28] = 0;
   out_2865604065811158930[29] = 0;
   out_2865604065811158930[30] = 0;
   out_2865604065811158930[31] = 0;
   out_2865604065811158930[32] = 0;
   out_2865604065811158930[33] = 0;
   out_2865604065811158930[34] = 0;
   out_2865604065811158930[35] = 0;
   out_2865604065811158930[36] = 0;
   out_2865604065811158930[37] = 0;
   out_2865604065811158930[38] = 0;
   out_2865604065811158930[39] = 1;
   out_2865604065811158930[40] = 0;
   out_2865604065811158930[41] = 0;
   out_2865604065811158930[42] = 0;
   out_2865604065811158930[43] = 0;
   out_2865604065811158930[44] = 0;
   out_2865604065811158930[45] = 0;
   out_2865604065811158930[46] = 0;
   out_2865604065811158930[47] = 0;
   out_2865604065811158930[48] = 0;
   out_2865604065811158930[49] = 0;
   out_2865604065811158930[50] = 0;
   out_2865604065811158930[51] = 0;
   out_2865604065811158930[52] = 0;
   out_2865604065811158930[53] = 0;
   out_2865604065811158930[54] = 0;
   out_2865604065811158930[55] = 0;
   out_2865604065811158930[56] = 0;
   out_2865604065811158930[57] = 0;
   out_2865604065811158930[58] = 0;
   out_2865604065811158930[59] = 0;
   out_2865604065811158930[60] = 0;
   out_2865604065811158930[61] = 0;
   out_2865604065811158930[62] = 1;
   out_2865604065811158930[63] = 0;
   out_2865604065811158930[64] = 0;
   out_2865604065811158930[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1737675768873191672) {
  H(in_vec, out_1737675768873191672);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1220197346673272979) {
  err_fun(nom_x, delta_x, out_1220197346673272979);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4602414087323353683) {
  inv_err_fun(nom_x, true_x, out_4602414087323353683);
}
void live_H_mod_fun(double *state, double *out_3696488601833635144) {
  H_mod_fun(state, out_3696488601833635144);
}
void live_f_fun(double *state, double dt, double *out_6895149659757995784) {
  f_fun(state,  dt, out_6895149659757995784);
}
void live_F_fun(double *state, double dt, double *out_2700104100697984823) {
  F_fun(state,  dt, out_2700104100697984823);
}
void live_h_4(double *state, double *unused, double *out_2244972580460740231) {
  h_4(state, unused, out_2244972580460740231);
}
void live_H_4(double *state, double *unused, double *out_9063920945886927706) {
  H_4(state, unused, out_9063920945886927706);
}
void live_h_9(double *state, double *unused, double *out_6221957209825685258) {
  h_9(state, unused, out_6221957209825685258);
}
void live_H_9(double *state, double *unused, double *out_4906753209532150223) {
  H_9(state, unused, out_4906753209532150223);
}
void live_h_10(double *state, double *unused, double *out_8781689258832014065) {
  h_10(state, unused, out_8781689258832014065);
}
void live_H_10(double *state, double *unused, double *out_6132272573217386885) {
  H_10(state, unused, out_6132272573217386885);
}
void live_h_12(double *state, double *unused, double *out_7773510573876563866) {
  h_12(state, unused, out_7773510573876563866);
}
void live_H_12(double *state, double *unused, double *out_8761724102775030243) {
  H_12(state, unused, out_8761724102775030243);
}
void live_h_35(double *state, double *unused, double *out_3802991016272336407) {
  h_35(state, unused, out_3802991016272336407);
}
void live_H_35(double *state, double *unused, double *out_6016161070450016534) {
  H_35(state, unused, out_6016161070450016534);
}
void live_h_32(double *state, double *unused, double *out_6542600231176617904) {
  h_32(state, unused, out_6542600231176617904);
}
void live_H_32(double *state, double *unused, double *out_5515718499565418726) {
  H_32(state, unused, out_5515718499565418726);
}
void live_h_13(double *state, double *unused, double *out_7248310467205087467) {
  h_13(state, unused, out_7248310467205087467);
}
void live_H_13(double *state, double *unused, double *out_7493082640863699771) {
  H_13(state, unused, out_7493082640863699771);
}
void live_h_14(double *state, double *unused, double *out_6221957209825685258) {
  h_14(state, unused, out_6221957209825685258);
}
void live_H_14(double *state, double *unused, double *out_4906753209532150223) {
  H_14(state, unused, out_4906753209532150223);
}
void live_h_33(double *state, double *unused, double *out_7737232567092818914) {
  h_33(state, unused, out_7737232567092818914);
}
void live_H_33(double *state, double *unused, double *out_2865604065811158930) {
  H_33(state, unused, out_2865604065811158930);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
