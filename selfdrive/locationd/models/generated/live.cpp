#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7500353067111488423) {
   out_7500353067111488423[0] = 0;
   out_7500353067111488423[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7500353067111488423[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7500353067111488423[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7500353067111488423[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7500353067111488423[5] = -sin(in_vec[1]);
   out_7500353067111488423[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7500353067111488423[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7500353067111488423[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7500353067111488423[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7500353067111488423[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7500353067111488423[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7500353067111488423[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7500353067111488423[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7500353067111488423[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7500353067111488423[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7500353067111488423[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7500353067111488423[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_766172588434086154) {
   out_766172588434086154[0] = delta_x[0] + nom_x[0];
   out_766172588434086154[1] = delta_x[1] + nom_x[1];
   out_766172588434086154[2] = delta_x[2] + nom_x[2];
   out_766172588434086154[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_766172588434086154[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_766172588434086154[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_766172588434086154[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_766172588434086154[7] = delta_x[6] + nom_x[7];
   out_766172588434086154[8] = delta_x[7] + nom_x[8];
   out_766172588434086154[9] = delta_x[8] + nom_x[9];
   out_766172588434086154[10] = delta_x[9] + nom_x[10];
   out_766172588434086154[11] = delta_x[10] + nom_x[11];
   out_766172588434086154[12] = delta_x[11] + nom_x[12];
   out_766172588434086154[13] = delta_x[12] + nom_x[13];
   out_766172588434086154[14] = delta_x[13] + nom_x[14];
   out_766172588434086154[15] = delta_x[14] + nom_x[15];
   out_766172588434086154[16] = delta_x[15] + nom_x[16];
   out_766172588434086154[17] = delta_x[16] + nom_x[17];
   out_766172588434086154[18] = delta_x[17] + nom_x[18];
   out_766172588434086154[19] = delta_x[18] + nom_x[19];
   out_766172588434086154[20] = delta_x[19] + nom_x[20];
   out_766172588434086154[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1300041075557829446) {
   out_1300041075557829446[0] = -nom_x[0] + true_x[0];
   out_1300041075557829446[1] = -nom_x[1] + true_x[1];
   out_1300041075557829446[2] = -nom_x[2] + true_x[2];
   out_1300041075557829446[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1300041075557829446[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1300041075557829446[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1300041075557829446[6] = -nom_x[7] + true_x[7];
   out_1300041075557829446[7] = -nom_x[8] + true_x[8];
   out_1300041075557829446[8] = -nom_x[9] + true_x[9];
   out_1300041075557829446[9] = -nom_x[10] + true_x[10];
   out_1300041075557829446[10] = -nom_x[11] + true_x[11];
   out_1300041075557829446[11] = -nom_x[12] + true_x[12];
   out_1300041075557829446[12] = -nom_x[13] + true_x[13];
   out_1300041075557829446[13] = -nom_x[14] + true_x[14];
   out_1300041075557829446[14] = -nom_x[15] + true_x[15];
   out_1300041075557829446[15] = -nom_x[16] + true_x[16];
   out_1300041075557829446[16] = -nom_x[17] + true_x[17];
   out_1300041075557829446[17] = -nom_x[18] + true_x[18];
   out_1300041075557829446[18] = -nom_x[19] + true_x[19];
   out_1300041075557829446[19] = -nom_x[20] + true_x[20];
   out_1300041075557829446[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6253763052524624393) {
   out_6253763052524624393[0] = 1.0;
   out_6253763052524624393[1] = 0;
   out_6253763052524624393[2] = 0;
   out_6253763052524624393[3] = 0;
   out_6253763052524624393[4] = 0;
   out_6253763052524624393[5] = 0;
   out_6253763052524624393[6] = 0;
   out_6253763052524624393[7] = 0;
   out_6253763052524624393[8] = 0;
   out_6253763052524624393[9] = 0;
   out_6253763052524624393[10] = 0;
   out_6253763052524624393[11] = 0;
   out_6253763052524624393[12] = 0;
   out_6253763052524624393[13] = 0;
   out_6253763052524624393[14] = 0;
   out_6253763052524624393[15] = 0;
   out_6253763052524624393[16] = 0;
   out_6253763052524624393[17] = 0;
   out_6253763052524624393[18] = 0;
   out_6253763052524624393[19] = 0;
   out_6253763052524624393[20] = 0;
   out_6253763052524624393[21] = 0;
   out_6253763052524624393[22] = 1.0;
   out_6253763052524624393[23] = 0;
   out_6253763052524624393[24] = 0;
   out_6253763052524624393[25] = 0;
   out_6253763052524624393[26] = 0;
   out_6253763052524624393[27] = 0;
   out_6253763052524624393[28] = 0;
   out_6253763052524624393[29] = 0;
   out_6253763052524624393[30] = 0;
   out_6253763052524624393[31] = 0;
   out_6253763052524624393[32] = 0;
   out_6253763052524624393[33] = 0;
   out_6253763052524624393[34] = 0;
   out_6253763052524624393[35] = 0;
   out_6253763052524624393[36] = 0;
   out_6253763052524624393[37] = 0;
   out_6253763052524624393[38] = 0;
   out_6253763052524624393[39] = 0;
   out_6253763052524624393[40] = 0;
   out_6253763052524624393[41] = 0;
   out_6253763052524624393[42] = 0;
   out_6253763052524624393[43] = 0;
   out_6253763052524624393[44] = 1.0;
   out_6253763052524624393[45] = 0;
   out_6253763052524624393[46] = 0;
   out_6253763052524624393[47] = 0;
   out_6253763052524624393[48] = 0;
   out_6253763052524624393[49] = 0;
   out_6253763052524624393[50] = 0;
   out_6253763052524624393[51] = 0;
   out_6253763052524624393[52] = 0;
   out_6253763052524624393[53] = 0;
   out_6253763052524624393[54] = 0;
   out_6253763052524624393[55] = 0;
   out_6253763052524624393[56] = 0;
   out_6253763052524624393[57] = 0;
   out_6253763052524624393[58] = 0;
   out_6253763052524624393[59] = 0;
   out_6253763052524624393[60] = 0;
   out_6253763052524624393[61] = 0;
   out_6253763052524624393[62] = 0;
   out_6253763052524624393[63] = 0;
   out_6253763052524624393[64] = 0;
   out_6253763052524624393[65] = 0;
   out_6253763052524624393[66] = -0.5*state[4];
   out_6253763052524624393[67] = -0.5*state[5];
   out_6253763052524624393[68] = -0.5*state[6];
   out_6253763052524624393[69] = 0;
   out_6253763052524624393[70] = 0;
   out_6253763052524624393[71] = 0;
   out_6253763052524624393[72] = 0;
   out_6253763052524624393[73] = 0;
   out_6253763052524624393[74] = 0;
   out_6253763052524624393[75] = 0;
   out_6253763052524624393[76] = 0;
   out_6253763052524624393[77] = 0;
   out_6253763052524624393[78] = 0;
   out_6253763052524624393[79] = 0;
   out_6253763052524624393[80] = 0;
   out_6253763052524624393[81] = 0;
   out_6253763052524624393[82] = 0;
   out_6253763052524624393[83] = 0;
   out_6253763052524624393[84] = 0;
   out_6253763052524624393[85] = 0;
   out_6253763052524624393[86] = 0;
   out_6253763052524624393[87] = 0.5*state[3];
   out_6253763052524624393[88] = 0.5*state[6];
   out_6253763052524624393[89] = -0.5*state[5];
   out_6253763052524624393[90] = 0;
   out_6253763052524624393[91] = 0;
   out_6253763052524624393[92] = 0;
   out_6253763052524624393[93] = 0;
   out_6253763052524624393[94] = 0;
   out_6253763052524624393[95] = 0;
   out_6253763052524624393[96] = 0;
   out_6253763052524624393[97] = 0;
   out_6253763052524624393[98] = 0;
   out_6253763052524624393[99] = 0;
   out_6253763052524624393[100] = 0;
   out_6253763052524624393[101] = 0;
   out_6253763052524624393[102] = 0;
   out_6253763052524624393[103] = 0;
   out_6253763052524624393[104] = 0;
   out_6253763052524624393[105] = 0;
   out_6253763052524624393[106] = 0;
   out_6253763052524624393[107] = 0;
   out_6253763052524624393[108] = -0.5*state[6];
   out_6253763052524624393[109] = 0.5*state[3];
   out_6253763052524624393[110] = 0.5*state[4];
   out_6253763052524624393[111] = 0;
   out_6253763052524624393[112] = 0;
   out_6253763052524624393[113] = 0;
   out_6253763052524624393[114] = 0;
   out_6253763052524624393[115] = 0;
   out_6253763052524624393[116] = 0;
   out_6253763052524624393[117] = 0;
   out_6253763052524624393[118] = 0;
   out_6253763052524624393[119] = 0;
   out_6253763052524624393[120] = 0;
   out_6253763052524624393[121] = 0;
   out_6253763052524624393[122] = 0;
   out_6253763052524624393[123] = 0;
   out_6253763052524624393[124] = 0;
   out_6253763052524624393[125] = 0;
   out_6253763052524624393[126] = 0;
   out_6253763052524624393[127] = 0;
   out_6253763052524624393[128] = 0;
   out_6253763052524624393[129] = 0.5*state[5];
   out_6253763052524624393[130] = -0.5*state[4];
   out_6253763052524624393[131] = 0.5*state[3];
   out_6253763052524624393[132] = 0;
   out_6253763052524624393[133] = 0;
   out_6253763052524624393[134] = 0;
   out_6253763052524624393[135] = 0;
   out_6253763052524624393[136] = 0;
   out_6253763052524624393[137] = 0;
   out_6253763052524624393[138] = 0;
   out_6253763052524624393[139] = 0;
   out_6253763052524624393[140] = 0;
   out_6253763052524624393[141] = 0;
   out_6253763052524624393[142] = 0;
   out_6253763052524624393[143] = 0;
   out_6253763052524624393[144] = 0;
   out_6253763052524624393[145] = 0;
   out_6253763052524624393[146] = 0;
   out_6253763052524624393[147] = 0;
   out_6253763052524624393[148] = 0;
   out_6253763052524624393[149] = 0;
   out_6253763052524624393[150] = 0;
   out_6253763052524624393[151] = 0;
   out_6253763052524624393[152] = 0;
   out_6253763052524624393[153] = 1.0;
   out_6253763052524624393[154] = 0;
   out_6253763052524624393[155] = 0;
   out_6253763052524624393[156] = 0;
   out_6253763052524624393[157] = 0;
   out_6253763052524624393[158] = 0;
   out_6253763052524624393[159] = 0;
   out_6253763052524624393[160] = 0;
   out_6253763052524624393[161] = 0;
   out_6253763052524624393[162] = 0;
   out_6253763052524624393[163] = 0;
   out_6253763052524624393[164] = 0;
   out_6253763052524624393[165] = 0;
   out_6253763052524624393[166] = 0;
   out_6253763052524624393[167] = 0;
   out_6253763052524624393[168] = 0;
   out_6253763052524624393[169] = 0;
   out_6253763052524624393[170] = 0;
   out_6253763052524624393[171] = 0;
   out_6253763052524624393[172] = 0;
   out_6253763052524624393[173] = 0;
   out_6253763052524624393[174] = 0;
   out_6253763052524624393[175] = 1.0;
   out_6253763052524624393[176] = 0;
   out_6253763052524624393[177] = 0;
   out_6253763052524624393[178] = 0;
   out_6253763052524624393[179] = 0;
   out_6253763052524624393[180] = 0;
   out_6253763052524624393[181] = 0;
   out_6253763052524624393[182] = 0;
   out_6253763052524624393[183] = 0;
   out_6253763052524624393[184] = 0;
   out_6253763052524624393[185] = 0;
   out_6253763052524624393[186] = 0;
   out_6253763052524624393[187] = 0;
   out_6253763052524624393[188] = 0;
   out_6253763052524624393[189] = 0;
   out_6253763052524624393[190] = 0;
   out_6253763052524624393[191] = 0;
   out_6253763052524624393[192] = 0;
   out_6253763052524624393[193] = 0;
   out_6253763052524624393[194] = 0;
   out_6253763052524624393[195] = 0;
   out_6253763052524624393[196] = 0;
   out_6253763052524624393[197] = 1.0;
   out_6253763052524624393[198] = 0;
   out_6253763052524624393[199] = 0;
   out_6253763052524624393[200] = 0;
   out_6253763052524624393[201] = 0;
   out_6253763052524624393[202] = 0;
   out_6253763052524624393[203] = 0;
   out_6253763052524624393[204] = 0;
   out_6253763052524624393[205] = 0;
   out_6253763052524624393[206] = 0;
   out_6253763052524624393[207] = 0;
   out_6253763052524624393[208] = 0;
   out_6253763052524624393[209] = 0;
   out_6253763052524624393[210] = 0;
   out_6253763052524624393[211] = 0;
   out_6253763052524624393[212] = 0;
   out_6253763052524624393[213] = 0;
   out_6253763052524624393[214] = 0;
   out_6253763052524624393[215] = 0;
   out_6253763052524624393[216] = 0;
   out_6253763052524624393[217] = 0;
   out_6253763052524624393[218] = 0;
   out_6253763052524624393[219] = 1.0;
   out_6253763052524624393[220] = 0;
   out_6253763052524624393[221] = 0;
   out_6253763052524624393[222] = 0;
   out_6253763052524624393[223] = 0;
   out_6253763052524624393[224] = 0;
   out_6253763052524624393[225] = 0;
   out_6253763052524624393[226] = 0;
   out_6253763052524624393[227] = 0;
   out_6253763052524624393[228] = 0;
   out_6253763052524624393[229] = 0;
   out_6253763052524624393[230] = 0;
   out_6253763052524624393[231] = 0;
   out_6253763052524624393[232] = 0;
   out_6253763052524624393[233] = 0;
   out_6253763052524624393[234] = 0;
   out_6253763052524624393[235] = 0;
   out_6253763052524624393[236] = 0;
   out_6253763052524624393[237] = 0;
   out_6253763052524624393[238] = 0;
   out_6253763052524624393[239] = 0;
   out_6253763052524624393[240] = 0;
   out_6253763052524624393[241] = 1.0;
   out_6253763052524624393[242] = 0;
   out_6253763052524624393[243] = 0;
   out_6253763052524624393[244] = 0;
   out_6253763052524624393[245] = 0;
   out_6253763052524624393[246] = 0;
   out_6253763052524624393[247] = 0;
   out_6253763052524624393[248] = 0;
   out_6253763052524624393[249] = 0;
   out_6253763052524624393[250] = 0;
   out_6253763052524624393[251] = 0;
   out_6253763052524624393[252] = 0;
   out_6253763052524624393[253] = 0;
   out_6253763052524624393[254] = 0;
   out_6253763052524624393[255] = 0;
   out_6253763052524624393[256] = 0;
   out_6253763052524624393[257] = 0;
   out_6253763052524624393[258] = 0;
   out_6253763052524624393[259] = 0;
   out_6253763052524624393[260] = 0;
   out_6253763052524624393[261] = 0;
   out_6253763052524624393[262] = 0;
   out_6253763052524624393[263] = 1.0;
   out_6253763052524624393[264] = 0;
   out_6253763052524624393[265] = 0;
   out_6253763052524624393[266] = 0;
   out_6253763052524624393[267] = 0;
   out_6253763052524624393[268] = 0;
   out_6253763052524624393[269] = 0;
   out_6253763052524624393[270] = 0;
   out_6253763052524624393[271] = 0;
   out_6253763052524624393[272] = 0;
   out_6253763052524624393[273] = 0;
   out_6253763052524624393[274] = 0;
   out_6253763052524624393[275] = 0;
   out_6253763052524624393[276] = 0;
   out_6253763052524624393[277] = 0;
   out_6253763052524624393[278] = 0;
   out_6253763052524624393[279] = 0;
   out_6253763052524624393[280] = 0;
   out_6253763052524624393[281] = 0;
   out_6253763052524624393[282] = 0;
   out_6253763052524624393[283] = 0;
   out_6253763052524624393[284] = 0;
   out_6253763052524624393[285] = 1.0;
   out_6253763052524624393[286] = 0;
   out_6253763052524624393[287] = 0;
   out_6253763052524624393[288] = 0;
   out_6253763052524624393[289] = 0;
   out_6253763052524624393[290] = 0;
   out_6253763052524624393[291] = 0;
   out_6253763052524624393[292] = 0;
   out_6253763052524624393[293] = 0;
   out_6253763052524624393[294] = 0;
   out_6253763052524624393[295] = 0;
   out_6253763052524624393[296] = 0;
   out_6253763052524624393[297] = 0;
   out_6253763052524624393[298] = 0;
   out_6253763052524624393[299] = 0;
   out_6253763052524624393[300] = 0;
   out_6253763052524624393[301] = 0;
   out_6253763052524624393[302] = 0;
   out_6253763052524624393[303] = 0;
   out_6253763052524624393[304] = 0;
   out_6253763052524624393[305] = 0;
   out_6253763052524624393[306] = 0;
   out_6253763052524624393[307] = 1.0;
   out_6253763052524624393[308] = 0;
   out_6253763052524624393[309] = 0;
   out_6253763052524624393[310] = 0;
   out_6253763052524624393[311] = 0;
   out_6253763052524624393[312] = 0;
   out_6253763052524624393[313] = 0;
   out_6253763052524624393[314] = 0;
   out_6253763052524624393[315] = 0;
   out_6253763052524624393[316] = 0;
   out_6253763052524624393[317] = 0;
   out_6253763052524624393[318] = 0;
   out_6253763052524624393[319] = 0;
   out_6253763052524624393[320] = 0;
   out_6253763052524624393[321] = 0;
   out_6253763052524624393[322] = 0;
   out_6253763052524624393[323] = 0;
   out_6253763052524624393[324] = 0;
   out_6253763052524624393[325] = 0;
   out_6253763052524624393[326] = 0;
   out_6253763052524624393[327] = 0;
   out_6253763052524624393[328] = 0;
   out_6253763052524624393[329] = 1.0;
   out_6253763052524624393[330] = 0;
   out_6253763052524624393[331] = 0;
   out_6253763052524624393[332] = 0;
   out_6253763052524624393[333] = 0;
   out_6253763052524624393[334] = 0;
   out_6253763052524624393[335] = 0;
   out_6253763052524624393[336] = 0;
   out_6253763052524624393[337] = 0;
   out_6253763052524624393[338] = 0;
   out_6253763052524624393[339] = 0;
   out_6253763052524624393[340] = 0;
   out_6253763052524624393[341] = 0;
   out_6253763052524624393[342] = 0;
   out_6253763052524624393[343] = 0;
   out_6253763052524624393[344] = 0;
   out_6253763052524624393[345] = 0;
   out_6253763052524624393[346] = 0;
   out_6253763052524624393[347] = 0;
   out_6253763052524624393[348] = 0;
   out_6253763052524624393[349] = 0;
   out_6253763052524624393[350] = 0;
   out_6253763052524624393[351] = 1.0;
   out_6253763052524624393[352] = 0;
   out_6253763052524624393[353] = 0;
   out_6253763052524624393[354] = 0;
   out_6253763052524624393[355] = 0;
   out_6253763052524624393[356] = 0;
   out_6253763052524624393[357] = 0;
   out_6253763052524624393[358] = 0;
   out_6253763052524624393[359] = 0;
   out_6253763052524624393[360] = 0;
   out_6253763052524624393[361] = 0;
   out_6253763052524624393[362] = 0;
   out_6253763052524624393[363] = 0;
   out_6253763052524624393[364] = 0;
   out_6253763052524624393[365] = 0;
   out_6253763052524624393[366] = 0;
   out_6253763052524624393[367] = 0;
   out_6253763052524624393[368] = 0;
   out_6253763052524624393[369] = 0;
   out_6253763052524624393[370] = 0;
   out_6253763052524624393[371] = 0;
   out_6253763052524624393[372] = 0;
   out_6253763052524624393[373] = 1.0;
   out_6253763052524624393[374] = 0;
   out_6253763052524624393[375] = 0;
   out_6253763052524624393[376] = 0;
   out_6253763052524624393[377] = 0;
   out_6253763052524624393[378] = 0;
   out_6253763052524624393[379] = 0;
   out_6253763052524624393[380] = 0;
   out_6253763052524624393[381] = 0;
   out_6253763052524624393[382] = 0;
   out_6253763052524624393[383] = 0;
   out_6253763052524624393[384] = 0;
   out_6253763052524624393[385] = 0;
   out_6253763052524624393[386] = 0;
   out_6253763052524624393[387] = 0;
   out_6253763052524624393[388] = 0;
   out_6253763052524624393[389] = 0;
   out_6253763052524624393[390] = 0;
   out_6253763052524624393[391] = 0;
   out_6253763052524624393[392] = 0;
   out_6253763052524624393[393] = 0;
   out_6253763052524624393[394] = 0;
   out_6253763052524624393[395] = 1.0;
   out_6253763052524624393[396] = 0;
   out_6253763052524624393[397] = 0;
   out_6253763052524624393[398] = 0;
   out_6253763052524624393[399] = 0;
   out_6253763052524624393[400] = 0;
   out_6253763052524624393[401] = 0;
   out_6253763052524624393[402] = 0;
   out_6253763052524624393[403] = 0;
   out_6253763052524624393[404] = 0;
   out_6253763052524624393[405] = 0;
   out_6253763052524624393[406] = 0;
   out_6253763052524624393[407] = 0;
   out_6253763052524624393[408] = 0;
   out_6253763052524624393[409] = 0;
   out_6253763052524624393[410] = 0;
   out_6253763052524624393[411] = 0;
   out_6253763052524624393[412] = 0;
   out_6253763052524624393[413] = 0;
   out_6253763052524624393[414] = 0;
   out_6253763052524624393[415] = 0;
   out_6253763052524624393[416] = 0;
   out_6253763052524624393[417] = 1.0;
   out_6253763052524624393[418] = 0;
   out_6253763052524624393[419] = 0;
   out_6253763052524624393[420] = 0;
   out_6253763052524624393[421] = 0;
   out_6253763052524624393[422] = 0;
   out_6253763052524624393[423] = 0;
   out_6253763052524624393[424] = 0;
   out_6253763052524624393[425] = 0;
   out_6253763052524624393[426] = 0;
   out_6253763052524624393[427] = 0;
   out_6253763052524624393[428] = 0;
   out_6253763052524624393[429] = 0;
   out_6253763052524624393[430] = 0;
   out_6253763052524624393[431] = 0;
   out_6253763052524624393[432] = 0;
   out_6253763052524624393[433] = 0;
   out_6253763052524624393[434] = 0;
   out_6253763052524624393[435] = 0;
   out_6253763052524624393[436] = 0;
   out_6253763052524624393[437] = 0;
   out_6253763052524624393[438] = 0;
   out_6253763052524624393[439] = 1.0;
   out_6253763052524624393[440] = 0;
   out_6253763052524624393[441] = 0;
   out_6253763052524624393[442] = 0;
   out_6253763052524624393[443] = 0;
   out_6253763052524624393[444] = 0;
   out_6253763052524624393[445] = 0;
   out_6253763052524624393[446] = 0;
   out_6253763052524624393[447] = 0;
   out_6253763052524624393[448] = 0;
   out_6253763052524624393[449] = 0;
   out_6253763052524624393[450] = 0;
   out_6253763052524624393[451] = 0;
   out_6253763052524624393[452] = 0;
   out_6253763052524624393[453] = 0;
   out_6253763052524624393[454] = 0;
   out_6253763052524624393[455] = 0;
   out_6253763052524624393[456] = 0;
   out_6253763052524624393[457] = 0;
   out_6253763052524624393[458] = 0;
   out_6253763052524624393[459] = 0;
   out_6253763052524624393[460] = 0;
   out_6253763052524624393[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1122240391475756889) {
   out_1122240391475756889[0] = dt*state[7] + state[0];
   out_1122240391475756889[1] = dt*state[8] + state[1];
   out_1122240391475756889[2] = dt*state[9] + state[2];
   out_1122240391475756889[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1122240391475756889[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1122240391475756889[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1122240391475756889[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1122240391475756889[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1122240391475756889[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1122240391475756889[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1122240391475756889[10] = state[10];
   out_1122240391475756889[11] = state[11];
   out_1122240391475756889[12] = state[12];
   out_1122240391475756889[13] = state[13];
   out_1122240391475756889[14] = state[14];
   out_1122240391475756889[15] = state[15];
   out_1122240391475756889[16] = state[16];
   out_1122240391475756889[17] = state[17];
   out_1122240391475756889[18] = state[18];
   out_1122240391475756889[19] = state[19];
   out_1122240391475756889[20] = state[20];
   out_1122240391475756889[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4917658642529101547) {
   out_4917658642529101547[0] = 1;
   out_4917658642529101547[1] = 0;
   out_4917658642529101547[2] = 0;
   out_4917658642529101547[3] = 0;
   out_4917658642529101547[4] = 0;
   out_4917658642529101547[5] = 0;
   out_4917658642529101547[6] = dt;
   out_4917658642529101547[7] = 0;
   out_4917658642529101547[8] = 0;
   out_4917658642529101547[9] = 0;
   out_4917658642529101547[10] = 0;
   out_4917658642529101547[11] = 0;
   out_4917658642529101547[12] = 0;
   out_4917658642529101547[13] = 0;
   out_4917658642529101547[14] = 0;
   out_4917658642529101547[15] = 0;
   out_4917658642529101547[16] = 0;
   out_4917658642529101547[17] = 0;
   out_4917658642529101547[18] = 0;
   out_4917658642529101547[19] = 0;
   out_4917658642529101547[20] = 0;
   out_4917658642529101547[21] = 0;
   out_4917658642529101547[22] = 1;
   out_4917658642529101547[23] = 0;
   out_4917658642529101547[24] = 0;
   out_4917658642529101547[25] = 0;
   out_4917658642529101547[26] = 0;
   out_4917658642529101547[27] = 0;
   out_4917658642529101547[28] = dt;
   out_4917658642529101547[29] = 0;
   out_4917658642529101547[30] = 0;
   out_4917658642529101547[31] = 0;
   out_4917658642529101547[32] = 0;
   out_4917658642529101547[33] = 0;
   out_4917658642529101547[34] = 0;
   out_4917658642529101547[35] = 0;
   out_4917658642529101547[36] = 0;
   out_4917658642529101547[37] = 0;
   out_4917658642529101547[38] = 0;
   out_4917658642529101547[39] = 0;
   out_4917658642529101547[40] = 0;
   out_4917658642529101547[41] = 0;
   out_4917658642529101547[42] = 0;
   out_4917658642529101547[43] = 0;
   out_4917658642529101547[44] = 1;
   out_4917658642529101547[45] = 0;
   out_4917658642529101547[46] = 0;
   out_4917658642529101547[47] = 0;
   out_4917658642529101547[48] = 0;
   out_4917658642529101547[49] = 0;
   out_4917658642529101547[50] = dt;
   out_4917658642529101547[51] = 0;
   out_4917658642529101547[52] = 0;
   out_4917658642529101547[53] = 0;
   out_4917658642529101547[54] = 0;
   out_4917658642529101547[55] = 0;
   out_4917658642529101547[56] = 0;
   out_4917658642529101547[57] = 0;
   out_4917658642529101547[58] = 0;
   out_4917658642529101547[59] = 0;
   out_4917658642529101547[60] = 0;
   out_4917658642529101547[61] = 0;
   out_4917658642529101547[62] = 0;
   out_4917658642529101547[63] = 0;
   out_4917658642529101547[64] = 0;
   out_4917658642529101547[65] = 0;
   out_4917658642529101547[66] = 1;
   out_4917658642529101547[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4917658642529101547[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4917658642529101547[69] = 0;
   out_4917658642529101547[70] = 0;
   out_4917658642529101547[71] = 0;
   out_4917658642529101547[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4917658642529101547[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4917658642529101547[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4917658642529101547[75] = 0;
   out_4917658642529101547[76] = 0;
   out_4917658642529101547[77] = 0;
   out_4917658642529101547[78] = 0;
   out_4917658642529101547[79] = 0;
   out_4917658642529101547[80] = 0;
   out_4917658642529101547[81] = 0;
   out_4917658642529101547[82] = 0;
   out_4917658642529101547[83] = 0;
   out_4917658642529101547[84] = 0;
   out_4917658642529101547[85] = 0;
   out_4917658642529101547[86] = 0;
   out_4917658642529101547[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4917658642529101547[88] = 1;
   out_4917658642529101547[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4917658642529101547[90] = 0;
   out_4917658642529101547[91] = 0;
   out_4917658642529101547[92] = 0;
   out_4917658642529101547[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4917658642529101547[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4917658642529101547[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4917658642529101547[96] = 0;
   out_4917658642529101547[97] = 0;
   out_4917658642529101547[98] = 0;
   out_4917658642529101547[99] = 0;
   out_4917658642529101547[100] = 0;
   out_4917658642529101547[101] = 0;
   out_4917658642529101547[102] = 0;
   out_4917658642529101547[103] = 0;
   out_4917658642529101547[104] = 0;
   out_4917658642529101547[105] = 0;
   out_4917658642529101547[106] = 0;
   out_4917658642529101547[107] = 0;
   out_4917658642529101547[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4917658642529101547[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4917658642529101547[110] = 1;
   out_4917658642529101547[111] = 0;
   out_4917658642529101547[112] = 0;
   out_4917658642529101547[113] = 0;
   out_4917658642529101547[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4917658642529101547[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4917658642529101547[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4917658642529101547[117] = 0;
   out_4917658642529101547[118] = 0;
   out_4917658642529101547[119] = 0;
   out_4917658642529101547[120] = 0;
   out_4917658642529101547[121] = 0;
   out_4917658642529101547[122] = 0;
   out_4917658642529101547[123] = 0;
   out_4917658642529101547[124] = 0;
   out_4917658642529101547[125] = 0;
   out_4917658642529101547[126] = 0;
   out_4917658642529101547[127] = 0;
   out_4917658642529101547[128] = 0;
   out_4917658642529101547[129] = 0;
   out_4917658642529101547[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4917658642529101547[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4917658642529101547[132] = 1;
   out_4917658642529101547[133] = 0;
   out_4917658642529101547[134] = 0;
   out_4917658642529101547[135] = 0;
   out_4917658642529101547[136] = 0;
   out_4917658642529101547[137] = 0;
   out_4917658642529101547[138] = 0;
   out_4917658642529101547[139] = 0;
   out_4917658642529101547[140] = 0;
   out_4917658642529101547[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4917658642529101547[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4917658642529101547[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4917658642529101547[144] = 0;
   out_4917658642529101547[145] = 0;
   out_4917658642529101547[146] = 0;
   out_4917658642529101547[147] = 0;
   out_4917658642529101547[148] = 0;
   out_4917658642529101547[149] = 0;
   out_4917658642529101547[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4917658642529101547[151] = 0;
   out_4917658642529101547[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4917658642529101547[153] = 0;
   out_4917658642529101547[154] = 1;
   out_4917658642529101547[155] = 0;
   out_4917658642529101547[156] = 0;
   out_4917658642529101547[157] = 0;
   out_4917658642529101547[158] = 0;
   out_4917658642529101547[159] = 0;
   out_4917658642529101547[160] = 0;
   out_4917658642529101547[161] = 0;
   out_4917658642529101547[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4917658642529101547[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4917658642529101547[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4917658642529101547[165] = 0;
   out_4917658642529101547[166] = 0;
   out_4917658642529101547[167] = 0;
   out_4917658642529101547[168] = 0;
   out_4917658642529101547[169] = 0;
   out_4917658642529101547[170] = 0;
   out_4917658642529101547[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4917658642529101547[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4917658642529101547[173] = 0;
   out_4917658642529101547[174] = 0;
   out_4917658642529101547[175] = 0;
   out_4917658642529101547[176] = 1;
   out_4917658642529101547[177] = 0;
   out_4917658642529101547[178] = 0;
   out_4917658642529101547[179] = 0;
   out_4917658642529101547[180] = 0;
   out_4917658642529101547[181] = 0;
   out_4917658642529101547[182] = 0;
   out_4917658642529101547[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4917658642529101547[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4917658642529101547[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4917658642529101547[186] = 0;
   out_4917658642529101547[187] = 0;
   out_4917658642529101547[188] = 0;
   out_4917658642529101547[189] = 0;
   out_4917658642529101547[190] = 0;
   out_4917658642529101547[191] = 0;
   out_4917658642529101547[192] = 0;
   out_4917658642529101547[193] = 0;
   out_4917658642529101547[194] = 0;
   out_4917658642529101547[195] = 0;
   out_4917658642529101547[196] = 0;
   out_4917658642529101547[197] = 0;
   out_4917658642529101547[198] = 1;
   out_4917658642529101547[199] = 0;
   out_4917658642529101547[200] = 0;
   out_4917658642529101547[201] = 0;
   out_4917658642529101547[202] = 0;
   out_4917658642529101547[203] = 0;
   out_4917658642529101547[204] = 0;
   out_4917658642529101547[205] = 0;
   out_4917658642529101547[206] = 0;
   out_4917658642529101547[207] = 0;
   out_4917658642529101547[208] = 0;
   out_4917658642529101547[209] = 0;
   out_4917658642529101547[210] = 0;
   out_4917658642529101547[211] = 0;
   out_4917658642529101547[212] = 0;
   out_4917658642529101547[213] = 0;
   out_4917658642529101547[214] = 0;
   out_4917658642529101547[215] = 0;
   out_4917658642529101547[216] = 0;
   out_4917658642529101547[217] = 0;
   out_4917658642529101547[218] = 0;
   out_4917658642529101547[219] = 0;
   out_4917658642529101547[220] = 1;
   out_4917658642529101547[221] = 0;
   out_4917658642529101547[222] = 0;
   out_4917658642529101547[223] = 0;
   out_4917658642529101547[224] = 0;
   out_4917658642529101547[225] = 0;
   out_4917658642529101547[226] = 0;
   out_4917658642529101547[227] = 0;
   out_4917658642529101547[228] = 0;
   out_4917658642529101547[229] = 0;
   out_4917658642529101547[230] = 0;
   out_4917658642529101547[231] = 0;
   out_4917658642529101547[232] = 0;
   out_4917658642529101547[233] = 0;
   out_4917658642529101547[234] = 0;
   out_4917658642529101547[235] = 0;
   out_4917658642529101547[236] = 0;
   out_4917658642529101547[237] = 0;
   out_4917658642529101547[238] = 0;
   out_4917658642529101547[239] = 0;
   out_4917658642529101547[240] = 0;
   out_4917658642529101547[241] = 0;
   out_4917658642529101547[242] = 1;
   out_4917658642529101547[243] = 0;
   out_4917658642529101547[244] = 0;
   out_4917658642529101547[245] = 0;
   out_4917658642529101547[246] = 0;
   out_4917658642529101547[247] = 0;
   out_4917658642529101547[248] = 0;
   out_4917658642529101547[249] = 0;
   out_4917658642529101547[250] = 0;
   out_4917658642529101547[251] = 0;
   out_4917658642529101547[252] = 0;
   out_4917658642529101547[253] = 0;
   out_4917658642529101547[254] = 0;
   out_4917658642529101547[255] = 0;
   out_4917658642529101547[256] = 0;
   out_4917658642529101547[257] = 0;
   out_4917658642529101547[258] = 0;
   out_4917658642529101547[259] = 0;
   out_4917658642529101547[260] = 0;
   out_4917658642529101547[261] = 0;
   out_4917658642529101547[262] = 0;
   out_4917658642529101547[263] = 0;
   out_4917658642529101547[264] = 1;
   out_4917658642529101547[265] = 0;
   out_4917658642529101547[266] = 0;
   out_4917658642529101547[267] = 0;
   out_4917658642529101547[268] = 0;
   out_4917658642529101547[269] = 0;
   out_4917658642529101547[270] = 0;
   out_4917658642529101547[271] = 0;
   out_4917658642529101547[272] = 0;
   out_4917658642529101547[273] = 0;
   out_4917658642529101547[274] = 0;
   out_4917658642529101547[275] = 0;
   out_4917658642529101547[276] = 0;
   out_4917658642529101547[277] = 0;
   out_4917658642529101547[278] = 0;
   out_4917658642529101547[279] = 0;
   out_4917658642529101547[280] = 0;
   out_4917658642529101547[281] = 0;
   out_4917658642529101547[282] = 0;
   out_4917658642529101547[283] = 0;
   out_4917658642529101547[284] = 0;
   out_4917658642529101547[285] = 0;
   out_4917658642529101547[286] = 1;
   out_4917658642529101547[287] = 0;
   out_4917658642529101547[288] = 0;
   out_4917658642529101547[289] = 0;
   out_4917658642529101547[290] = 0;
   out_4917658642529101547[291] = 0;
   out_4917658642529101547[292] = 0;
   out_4917658642529101547[293] = 0;
   out_4917658642529101547[294] = 0;
   out_4917658642529101547[295] = 0;
   out_4917658642529101547[296] = 0;
   out_4917658642529101547[297] = 0;
   out_4917658642529101547[298] = 0;
   out_4917658642529101547[299] = 0;
   out_4917658642529101547[300] = 0;
   out_4917658642529101547[301] = 0;
   out_4917658642529101547[302] = 0;
   out_4917658642529101547[303] = 0;
   out_4917658642529101547[304] = 0;
   out_4917658642529101547[305] = 0;
   out_4917658642529101547[306] = 0;
   out_4917658642529101547[307] = 0;
   out_4917658642529101547[308] = 1;
   out_4917658642529101547[309] = 0;
   out_4917658642529101547[310] = 0;
   out_4917658642529101547[311] = 0;
   out_4917658642529101547[312] = 0;
   out_4917658642529101547[313] = 0;
   out_4917658642529101547[314] = 0;
   out_4917658642529101547[315] = 0;
   out_4917658642529101547[316] = 0;
   out_4917658642529101547[317] = 0;
   out_4917658642529101547[318] = 0;
   out_4917658642529101547[319] = 0;
   out_4917658642529101547[320] = 0;
   out_4917658642529101547[321] = 0;
   out_4917658642529101547[322] = 0;
   out_4917658642529101547[323] = 0;
   out_4917658642529101547[324] = 0;
   out_4917658642529101547[325] = 0;
   out_4917658642529101547[326] = 0;
   out_4917658642529101547[327] = 0;
   out_4917658642529101547[328] = 0;
   out_4917658642529101547[329] = 0;
   out_4917658642529101547[330] = 1;
   out_4917658642529101547[331] = 0;
   out_4917658642529101547[332] = 0;
   out_4917658642529101547[333] = 0;
   out_4917658642529101547[334] = 0;
   out_4917658642529101547[335] = 0;
   out_4917658642529101547[336] = 0;
   out_4917658642529101547[337] = 0;
   out_4917658642529101547[338] = 0;
   out_4917658642529101547[339] = 0;
   out_4917658642529101547[340] = 0;
   out_4917658642529101547[341] = 0;
   out_4917658642529101547[342] = 0;
   out_4917658642529101547[343] = 0;
   out_4917658642529101547[344] = 0;
   out_4917658642529101547[345] = 0;
   out_4917658642529101547[346] = 0;
   out_4917658642529101547[347] = 0;
   out_4917658642529101547[348] = 0;
   out_4917658642529101547[349] = 0;
   out_4917658642529101547[350] = 0;
   out_4917658642529101547[351] = 0;
   out_4917658642529101547[352] = 1;
   out_4917658642529101547[353] = 0;
   out_4917658642529101547[354] = 0;
   out_4917658642529101547[355] = 0;
   out_4917658642529101547[356] = 0;
   out_4917658642529101547[357] = 0;
   out_4917658642529101547[358] = 0;
   out_4917658642529101547[359] = 0;
   out_4917658642529101547[360] = 0;
   out_4917658642529101547[361] = 0;
   out_4917658642529101547[362] = 0;
   out_4917658642529101547[363] = 0;
   out_4917658642529101547[364] = 0;
   out_4917658642529101547[365] = 0;
   out_4917658642529101547[366] = 0;
   out_4917658642529101547[367] = 0;
   out_4917658642529101547[368] = 0;
   out_4917658642529101547[369] = 0;
   out_4917658642529101547[370] = 0;
   out_4917658642529101547[371] = 0;
   out_4917658642529101547[372] = 0;
   out_4917658642529101547[373] = 0;
   out_4917658642529101547[374] = 1;
   out_4917658642529101547[375] = 0;
   out_4917658642529101547[376] = 0;
   out_4917658642529101547[377] = 0;
   out_4917658642529101547[378] = 0;
   out_4917658642529101547[379] = 0;
   out_4917658642529101547[380] = 0;
   out_4917658642529101547[381] = 0;
   out_4917658642529101547[382] = 0;
   out_4917658642529101547[383] = 0;
   out_4917658642529101547[384] = 0;
   out_4917658642529101547[385] = 0;
   out_4917658642529101547[386] = 0;
   out_4917658642529101547[387] = 0;
   out_4917658642529101547[388] = 0;
   out_4917658642529101547[389] = 0;
   out_4917658642529101547[390] = 0;
   out_4917658642529101547[391] = 0;
   out_4917658642529101547[392] = 0;
   out_4917658642529101547[393] = 0;
   out_4917658642529101547[394] = 0;
   out_4917658642529101547[395] = 0;
   out_4917658642529101547[396] = 1;
   out_4917658642529101547[397] = 0;
   out_4917658642529101547[398] = 0;
   out_4917658642529101547[399] = 0;
   out_4917658642529101547[400] = 0;
   out_4917658642529101547[401] = 0;
   out_4917658642529101547[402] = 0;
   out_4917658642529101547[403] = 0;
   out_4917658642529101547[404] = 0;
   out_4917658642529101547[405] = 0;
   out_4917658642529101547[406] = 0;
   out_4917658642529101547[407] = 0;
   out_4917658642529101547[408] = 0;
   out_4917658642529101547[409] = 0;
   out_4917658642529101547[410] = 0;
   out_4917658642529101547[411] = 0;
   out_4917658642529101547[412] = 0;
   out_4917658642529101547[413] = 0;
   out_4917658642529101547[414] = 0;
   out_4917658642529101547[415] = 0;
   out_4917658642529101547[416] = 0;
   out_4917658642529101547[417] = 0;
   out_4917658642529101547[418] = 1;
   out_4917658642529101547[419] = 0;
   out_4917658642529101547[420] = 0;
   out_4917658642529101547[421] = 0;
   out_4917658642529101547[422] = 0;
   out_4917658642529101547[423] = 0;
   out_4917658642529101547[424] = 0;
   out_4917658642529101547[425] = 0;
   out_4917658642529101547[426] = 0;
   out_4917658642529101547[427] = 0;
   out_4917658642529101547[428] = 0;
   out_4917658642529101547[429] = 0;
   out_4917658642529101547[430] = 0;
   out_4917658642529101547[431] = 0;
   out_4917658642529101547[432] = 0;
   out_4917658642529101547[433] = 0;
   out_4917658642529101547[434] = 0;
   out_4917658642529101547[435] = 0;
   out_4917658642529101547[436] = 0;
   out_4917658642529101547[437] = 0;
   out_4917658642529101547[438] = 0;
   out_4917658642529101547[439] = 0;
   out_4917658642529101547[440] = 1;
}
void h_4(double *state, double *unused, double *out_4834206895910826861) {
   out_4834206895910826861[0] = state[10] + state[13];
   out_4834206895910826861[1] = state[11] + state[14];
   out_4834206895910826861[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1049374308257679367) {
   out_1049374308257679367[0] = 0;
   out_1049374308257679367[1] = 0;
   out_1049374308257679367[2] = 0;
   out_1049374308257679367[3] = 0;
   out_1049374308257679367[4] = 0;
   out_1049374308257679367[5] = 0;
   out_1049374308257679367[6] = 0;
   out_1049374308257679367[7] = 0;
   out_1049374308257679367[8] = 0;
   out_1049374308257679367[9] = 0;
   out_1049374308257679367[10] = 1;
   out_1049374308257679367[11] = 0;
   out_1049374308257679367[12] = 0;
   out_1049374308257679367[13] = 1;
   out_1049374308257679367[14] = 0;
   out_1049374308257679367[15] = 0;
   out_1049374308257679367[16] = 0;
   out_1049374308257679367[17] = 0;
   out_1049374308257679367[18] = 0;
   out_1049374308257679367[19] = 0;
   out_1049374308257679367[20] = 0;
   out_1049374308257679367[21] = 0;
   out_1049374308257679367[22] = 0;
   out_1049374308257679367[23] = 0;
   out_1049374308257679367[24] = 0;
   out_1049374308257679367[25] = 0;
   out_1049374308257679367[26] = 0;
   out_1049374308257679367[27] = 0;
   out_1049374308257679367[28] = 0;
   out_1049374308257679367[29] = 0;
   out_1049374308257679367[30] = 0;
   out_1049374308257679367[31] = 0;
   out_1049374308257679367[32] = 0;
   out_1049374308257679367[33] = 1;
   out_1049374308257679367[34] = 0;
   out_1049374308257679367[35] = 0;
   out_1049374308257679367[36] = 1;
   out_1049374308257679367[37] = 0;
   out_1049374308257679367[38] = 0;
   out_1049374308257679367[39] = 0;
   out_1049374308257679367[40] = 0;
   out_1049374308257679367[41] = 0;
   out_1049374308257679367[42] = 0;
   out_1049374308257679367[43] = 0;
   out_1049374308257679367[44] = 0;
   out_1049374308257679367[45] = 0;
   out_1049374308257679367[46] = 0;
   out_1049374308257679367[47] = 0;
   out_1049374308257679367[48] = 0;
   out_1049374308257679367[49] = 0;
   out_1049374308257679367[50] = 0;
   out_1049374308257679367[51] = 0;
   out_1049374308257679367[52] = 0;
   out_1049374308257679367[53] = 0;
   out_1049374308257679367[54] = 0;
   out_1049374308257679367[55] = 0;
   out_1049374308257679367[56] = 1;
   out_1049374308257679367[57] = 0;
   out_1049374308257679367[58] = 0;
   out_1049374308257679367[59] = 1;
   out_1049374308257679367[60] = 0;
   out_1049374308257679367[61] = 0;
   out_1049374308257679367[62] = 0;
   out_1049374308257679367[63] = 0;
   out_1049374308257679367[64] = 0;
   out_1049374308257679367[65] = 0;
}
void h_9(double *state, double *unused, double *out_884527150099786354) {
   out_884527150099786354[0] = state[10];
   out_884527150099786354[1] = state[11];
   out_884527150099786354[2] = state[12];
}
void H_9(double *state, double *unused, double *out_808184661628088722) {
   out_808184661628088722[0] = 0;
   out_808184661628088722[1] = 0;
   out_808184661628088722[2] = 0;
   out_808184661628088722[3] = 0;
   out_808184661628088722[4] = 0;
   out_808184661628088722[5] = 0;
   out_808184661628088722[6] = 0;
   out_808184661628088722[7] = 0;
   out_808184661628088722[8] = 0;
   out_808184661628088722[9] = 0;
   out_808184661628088722[10] = 1;
   out_808184661628088722[11] = 0;
   out_808184661628088722[12] = 0;
   out_808184661628088722[13] = 0;
   out_808184661628088722[14] = 0;
   out_808184661628088722[15] = 0;
   out_808184661628088722[16] = 0;
   out_808184661628088722[17] = 0;
   out_808184661628088722[18] = 0;
   out_808184661628088722[19] = 0;
   out_808184661628088722[20] = 0;
   out_808184661628088722[21] = 0;
   out_808184661628088722[22] = 0;
   out_808184661628088722[23] = 0;
   out_808184661628088722[24] = 0;
   out_808184661628088722[25] = 0;
   out_808184661628088722[26] = 0;
   out_808184661628088722[27] = 0;
   out_808184661628088722[28] = 0;
   out_808184661628088722[29] = 0;
   out_808184661628088722[30] = 0;
   out_808184661628088722[31] = 0;
   out_808184661628088722[32] = 0;
   out_808184661628088722[33] = 1;
   out_808184661628088722[34] = 0;
   out_808184661628088722[35] = 0;
   out_808184661628088722[36] = 0;
   out_808184661628088722[37] = 0;
   out_808184661628088722[38] = 0;
   out_808184661628088722[39] = 0;
   out_808184661628088722[40] = 0;
   out_808184661628088722[41] = 0;
   out_808184661628088722[42] = 0;
   out_808184661628088722[43] = 0;
   out_808184661628088722[44] = 0;
   out_808184661628088722[45] = 0;
   out_808184661628088722[46] = 0;
   out_808184661628088722[47] = 0;
   out_808184661628088722[48] = 0;
   out_808184661628088722[49] = 0;
   out_808184661628088722[50] = 0;
   out_808184661628088722[51] = 0;
   out_808184661628088722[52] = 0;
   out_808184661628088722[53] = 0;
   out_808184661628088722[54] = 0;
   out_808184661628088722[55] = 0;
   out_808184661628088722[56] = 1;
   out_808184661628088722[57] = 0;
   out_808184661628088722[58] = 0;
   out_808184661628088722[59] = 0;
   out_808184661628088722[60] = 0;
   out_808184661628088722[61] = 0;
   out_808184661628088722[62] = 0;
   out_808184661628088722[63] = 0;
   out_808184661628088722[64] = 0;
   out_808184661628088722[65] = 0;
}
void h_10(double *state, double *unused, double *out_7349985989310522663) {
   out_7349985989310522663[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7349985989310522663[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7349985989310522663[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3470071247623489746) {
   out_3470071247623489746[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3470071247623489746[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3470071247623489746[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3470071247623489746[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3470071247623489746[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3470071247623489746[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3470071247623489746[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3470071247623489746[7] = 0;
   out_3470071247623489746[8] = 0;
   out_3470071247623489746[9] = 0;
   out_3470071247623489746[10] = 0;
   out_3470071247623489746[11] = 0;
   out_3470071247623489746[12] = 0;
   out_3470071247623489746[13] = 0;
   out_3470071247623489746[14] = 0;
   out_3470071247623489746[15] = 0;
   out_3470071247623489746[16] = 1;
   out_3470071247623489746[17] = 0;
   out_3470071247623489746[18] = 0;
   out_3470071247623489746[19] = 1;
   out_3470071247623489746[20] = 0;
   out_3470071247623489746[21] = 0;
   out_3470071247623489746[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3470071247623489746[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3470071247623489746[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3470071247623489746[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3470071247623489746[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3470071247623489746[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3470071247623489746[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3470071247623489746[29] = 0;
   out_3470071247623489746[30] = 0;
   out_3470071247623489746[31] = 0;
   out_3470071247623489746[32] = 0;
   out_3470071247623489746[33] = 0;
   out_3470071247623489746[34] = 0;
   out_3470071247623489746[35] = 0;
   out_3470071247623489746[36] = 0;
   out_3470071247623489746[37] = 0;
   out_3470071247623489746[38] = 0;
   out_3470071247623489746[39] = 1;
   out_3470071247623489746[40] = 0;
   out_3470071247623489746[41] = 0;
   out_3470071247623489746[42] = 1;
   out_3470071247623489746[43] = 0;
   out_3470071247623489746[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3470071247623489746[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3470071247623489746[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3470071247623489746[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3470071247623489746[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3470071247623489746[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3470071247623489746[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3470071247623489746[51] = 0;
   out_3470071247623489746[52] = 0;
   out_3470071247623489746[53] = 0;
   out_3470071247623489746[54] = 0;
   out_3470071247623489746[55] = 0;
   out_3470071247623489746[56] = 0;
   out_3470071247623489746[57] = 0;
   out_3470071247623489746[58] = 0;
   out_3470071247623489746[59] = 0;
   out_3470071247623489746[60] = 0;
   out_3470071247623489746[61] = 0;
   out_3470071247623489746[62] = 1;
   out_3470071247623489746[63] = 0;
   out_3470071247623489746[64] = 0;
   out_3470071247623489746[65] = 1;
}
void h_12(double *state, double *unused, double *out_3200280810746522172) {
   out_3200280810746522172[0] = state[0];
   out_3200280810746522172[1] = state[1];
   out_3200280810746522172[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3970082099774282428) {
   out_3970082099774282428[0] = 1;
   out_3970082099774282428[1] = 0;
   out_3970082099774282428[2] = 0;
   out_3970082099774282428[3] = 0;
   out_3970082099774282428[4] = 0;
   out_3970082099774282428[5] = 0;
   out_3970082099774282428[6] = 0;
   out_3970082099774282428[7] = 0;
   out_3970082099774282428[8] = 0;
   out_3970082099774282428[9] = 0;
   out_3970082099774282428[10] = 0;
   out_3970082099774282428[11] = 0;
   out_3970082099774282428[12] = 0;
   out_3970082099774282428[13] = 0;
   out_3970082099774282428[14] = 0;
   out_3970082099774282428[15] = 0;
   out_3970082099774282428[16] = 0;
   out_3970082099774282428[17] = 0;
   out_3970082099774282428[18] = 0;
   out_3970082099774282428[19] = 0;
   out_3970082099774282428[20] = 0;
   out_3970082099774282428[21] = 0;
   out_3970082099774282428[22] = 0;
   out_3970082099774282428[23] = 1;
   out_3970082099774282428[24] = 0;
   out_3970082099774282428[25] = 0;
   out_3970082099774282428[26] = 0;
   out_3970082099774282428[27] = 0;
   out_3970082099774282428[28] = 0;
   out_3970082099774282428[29] = 0;
   out_3970082099774282428[30] = 0;
   out_3970082099774282428[31] = 0;
   out_3970082099774282428[32] = 0;
   out_3970082099774282428[33] = 0;
   out_3970082099774282428[34] = 0;
   out_3970082099774282428[35] = 0;
   out_3970082099774282428[36] = 0;
   out_3970082099774282428[37] = 0;
   out_3970082099774282428[38] = 0;
   out_3970082099774282428[39] = 0;
   out_3970082099774282428[40] = 0;
   out_3970082099774282428[41] = 0;
   out_3970082099774282428[42] = 0;
   out_3970082099774282428[43] = 0;
   out_3970082099774282428[44] = 0;
   out_3970082099774282428[45] = 0;
   out_3970082099774282428[46] = 1;
   out_3970082099774282428[47] = 0;
   out_3970082099774282428[48] = 0;
   out_3970082099774282428[49] = 0;
   out_3970082099774282428[50] = 0;
   out_3970082099774282428[51] = 0;
   out_3970082099774282428[52] = 0;
   out_3970082099774282428[53] = 0;
   out_3970082099774282428[54] = 0;
   out_3970082099774282428[55] = 0;
   out_3970082099774282428[56] = 0;
   out_3970082099774282428[57] = 0;
   out_3970082099774282428[58] = 0;
   out_3970082099774282428[59] = 0;
   out_3970082099774282428[60] = 0;
   out_3970082099774282428[61] = 0;
   out_3970082099774282428[62] = 0;
   out_3970082099774282428[63] = 0;
   out_3970082099774282428[64] = 0;
   out_3970082099774282428[65] = 0;
}
void h_35(double *state, double *unused, double *out_3387869530151147510) {
   out_3387869530151147510[0] = state[7];
   out_3387869530151147510[1] = state[8];
   out_3387869530151147510[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6715645132099296137) {
   out_6715645132099296137[0] = 0;
   out_6715645132099296137[1] = 0;
   out_6715645132099296137[2] = 0;
   out_6715645132099296137[3] = 0;
   out_6715645132099296137[4] = 0;
   out_6715645132099296137[5] = 0;
   out_6715645132099296137[6] = 0;
   out_6715645132099296137[7] = 1;
   out_6715645132099296137[8] = 0;
   out_6715645132099296137[9] = 0;
   out_6715645132099296137[10] = 0;
   out_6715645132099296137[11] = 0;
   out_6715645132099296137[12] = 0;
   out_6715645132099296137[13] = 0;
   out_6715645132099296137[14] = 0;
   out_6715645132099296137[15] = 0;
   out_6715645132099296137[16] = 0;
   out_6715645132099296137[17] = 0;
   out_6715645132099296137[18] = 0;
   out_6715645132099296137[19] = 0;
   out_6715645132099296137[20] = 0;
   out_6715645132099296137[21] = 0;
   out_6715645132099296137[22] = 0;
   out_6715645132099296137[23] = 0;
   out_6715645132099296137[24] = 0;
   out_6715645132099296137[25] = 0;
   out_6715645132099296137[26] = 0;
   out_6715645132099296137[27] = 0;
   out_6715645132099296137[28] = 0;
   out_6715645132099296137[29] = 0;
   out_6715645132099296137[30] = 1;
   out_6715645132099296137[31] = 0;
   out_6715645132099296137[32] = 0;
   out_6715645132099296137[33] = 0;
   out_6715645132099296137[34] = 0;
   out_6715645132099296137[35] = 0;
   out_6715645132099296137[36] = 0;
   out_6715645132099296137[37] = 0;
   out_6715645132099296137[38] = 0;
   out_6715645132099296137[39] = 0;
   out_6715645132099296137[40] = 0;
   out_6715645132099296137[41] = 0;
   out_6715645132099296137[42] = 0;
   out_6715645132099296137[43] = 0;
   out_6715645132099296137[44] = 0;
   out_6715645132099296137[45] = 0;
   out_6715645132099296137[46] = 0;
   out_6715645132099296137[47] = 0;
   out_6715645132099296137[48] = 0;
   out_6715645132099296137[49] = 0;
   out_6715645132099296137[50] = 0;
   out_6715645132099296137[51] = 0;
   out_6715645132099296137[52] = 0;
   out_6715645132099296137[53] = 1;
   out_6715645132099296137[54] = 0;
   out_6715645132099296137[55] = 0;
   out_6715645132099296137[56] = 0;
   out_6715645132099296137[57] = 0;
   out_6715645132099296137[58] = 0;
   out_6715645132099296137[59] = 0;
   out_6715645132099296137[60] = 0;
   out_6715645132099296137[61] = 0;
   out_6715645132099296137[62] = 0;
   out_6715645132099296137[63] = 0;
   out_6715645132099296137[64] = 0;
   out_6715645132099296137[65] = 0;
}
void h_32(double *state, double *unused, double *out_3922442096717896800) {
   out_3922442096717896800[0] = state[3];
   out_3922442096717896800[1] = state[4];
   out_3922442096717896800[2] = state[5];
   out_3922442096717896800[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6403023437211851109) {
   out_6403023437211851109[0] = 0;
   out_6403023437211851109[1] = 0;
   out_6403023437211851109[2] = 0;
   out_6403023437211851109[3] = 1;
   out_6403023437211851109[4] = 0;
   out_6403023437211851109[5] = 0;
   out_6403023437211851109[6] = 0;
   out_6403023437211851109[7] = 0;
   out_6403023437211851109[8] = 0;
   out_6403023437211851109[9] = 0;
   out_6403023437211851109[10] = 0;
   out_6403023437211851109[11] = 0;
   out_6403023437211851109[12] = 0;
   out_6403023437211851109[13] = 0;
   out_6403023437211851109[14] = 0;
   out_6403023437211851109[15] = 0;
   out_6403023437211851109[16] = 0;
   out_6403023437211851109[17] = 0;
   out_6403023437211851109[18] = 0;
   out_6403023437211851109[19] = 0;
   out_6403023437211851109[20] = 0;
   out_6403023437211851109[21] = 0;
   out_6403023437211851109[22] = 0;
   out_6403023437211851109[23] = 0;
   out_6403023437211851109[24] = 0;
   out_6403023437211851109[25] = 0;
   out_6403023437211851109[26] = 1;
   out_6403023437211851109[27] = 0;
   out_6403023437211851109[28] = 0;
   out_6403023437211851109[29] = 0;
   out_6403023437211851109[30] = 0;
   out_6403023437211851109[31] = 0;
   out_6403023437211851109[32] = 0;
   out_6403023437211851109[33] = 0;
   out_6403023437211851109[34] = 0;
   out_6403023437211851109[35] = 0;
   out_6403023437211851109[36] = 0;
   out_6403023437211851109[37] = 0;
   out_6403023437211851109[38] = 0;
   out_6403023437211851109[39] = 0;
   out_6403023437211851109[40] = 0;
   out_6403023437211851109[41] = 0;
   out_6403023437211851109[42] = 0;
   out_6403023437211851109[43] = 0;
   out_6403023437211851109[44] = 0;
   out_6403023437211851109[45] = 0;
   out_6403023437211851109[46] = 0;
   out_6403023437211851109[47] = 0;
   out_6403023437211851109[48] = 0;
   out_6403023437211851109[49] = 1;
   out_6403023437211851109[50] = 0;
   out_6403023437211851109[51] = 0;
   out_6403023437211851109[52] = 0;
   out_6403023437211851109[53] = 0;
   out_6403023437211851109[54] = 0;
   out_6403023437211851109[55] = 0;
   out_6403023437211851109[56] = 0;
   out_6403023437211851109[57] = 0;
   out_6403023437211851109[58] = 0;
   out_6403023437211851109[59] = 0;
   out_6403023437211851109[60] = 0;
   out_6403023437211851109[61] = 0;
   out_6403023437211851109[62] = 0;
   out_6403023437211851109[63] = 0;
   out_6403023437211851109[64] = 0;
   out_6403023437211851109[65] = 0;
   out_6403023437211851109[66] = 0;
   out_6403023437211851109[67] = 0;
   out_6403023437211851109[68] = 0;
   out_6403023437211851109[69] = 0;
   out_6403023437211851109[70] = 0;
   out_6403023437211851109[71] = 0;
   out_6403023437211851109[72] = 1;
   out_6403023437211851109[73] = 0;
   out_6403023437211851109[74] = 0;
   out_6403023437211851109[75] = 0;
   out_6403023437211851109[76] = 0;
   out_6403023437211851109[77] = 0;
   out_6403023437211851109[78] = 0;
   out_6403023437211851109[79] = 0;
   out_6403023437211851109[80] = 0;
   out_6403023437211851109[81] = 0;
   out_6403023437211851109[82] = 0;
   out_6403023437211851109[83] = 0;
   out_6403023437211851109[84] = 0;
   out_6403023437211851109[85] = 0;
   out_6403023437211851109[86] = 0;
   out_6403023437211851109[87] = 0;
}
void h_13(double *state, double *unused, double *out_742738544544814837) {
   out_742738544544814837[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_742738544544814837[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_742738544544814837[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5819643715718069551) {
   out_5819643715718069551[0] = 0;
   out_5819643715718069551[1] = 0;
   out_5819643715718069551[2] = 0;
   out_5819643715718069551[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5819643715718069551[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5819643715718069551[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5819643715718069551[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5819643715718069551[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5819643715718069551[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5819643715718069551[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5819643715718069551[10] = 0;
   out_5819643715718069551[11] = 0;
   out_5819643715718069551[12] = 0;
   out_5819643715718069551[13] = 0;
   out_5819643715718069551[14] = 0;
   out_5819643715718069551[15] = 0;
   out_5819643715718069551[16] = 0;
   out_5819643715718069551[17] = 0;
   out_5819643715718069551[18] = 0;
   out_5819643715718069551[19] = 0;
   out_5819643715718069551[20] = 0;
   out_5819643715718069551[21] = 0;
   out_5819643715718069551[22] = 0;
   out_5819643715718069551[23] = 0;
   out_5819643715718069551[24] = 0;
   out_5819643715718069551[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5819643715718069551[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5819643715718069551[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5819643715718069551[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5819643715718069551[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5819643715718069551[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5819643715718069551[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5819643715718069551[32] = 0;
   out_5819643715718069551[33] = 0;
   out_5819643715718069551[34] = 0;
   out_5819643715718069551[35] = 0;
   out_5819643715718069551[36] = 0;
   out_5819643715718069551[37] = 0;
   out_5819643715718069551[38] = 0;
   out_5819643715718069551[39] = 0;
   out_5819643715718069551[40] = 0;
   out_5819643715718069551[41] = 0;
   out_5819643715718069551[42] = 0;
   out_5819643715718069551[43] = 0;
   out_5819643715718069551[44] = 0;
   out_5819643715718069551[45] = 0;
   out_5819643715718069551[46] = 0;
   out_5819643715718069551[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5819643715718069551[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5819643715718069551[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5819643715718069551[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5819643715718069551[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5819643715718069551[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5819643715718069551[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5819643715718069551[54] = 0;
   out_5819643715718069551[55] = 0;
   out_5819643715718069551[56] = 0;
   out_5819643715718069551[57] = 0;
   out_5819643715718069551[58] = 0;
   out_5819643715718069551[59] = 0;
   out_5819643715718069551[60] = 0;
   out_5819643715718069551[61] = 0;
   out_5819643715718069551[62] = 0;
   out_5819643715718069551[63] = 0;
   out_5819643715718069551[64] = 0;
   out_5819643715718069551[65] = 0;
}
void h_14(double *state, double *unused, double *out_884527150099786354) {
   out_884527150099786354[0] = state[10];
   out_884527150099786354[1] = state[11];
   out_884527150099786354[2] = state[12];
}
void H_14(double *state, double *unused, double *out_808184661628088722) {
   out_808184661628088722[0] = 0;
   out_808184661628088722[1] = 0;
   out_808184661628088722[2] = 0;
   out_808184661628088722[3] = 0;
   out_808184661628088722[4] = 0;
   out_808184661628088722[5] = 0;
   out_808184661628088722[6] = 0;
   out_808184661628088722[7] = 0;
   out_808184661628088722[8] = 0;
   out_808184661628088722[9] = 0;
   out_808184661628088722[10] = 1;
   out_808184661628088722[11] = 0;
   out_808184661628088722[12] = 0;
   out_808184661628088722[13] = 0;
   out_808184661628088722[14] = 0;
   out_808184661628088722[15] = 0;
   out_808184661628088722[16] = 0;
   out_808184661628088722[17] = 0;
   out_808184661628088722[18] = 0;
   out_808184661628088722[19] = 0;
   out_808184661628088722[20] = 0;
   out_808184661628088722[21] = 0;
   out_808184661628088722[22] = 0;
   out_808184661628088722[23] = 0;
   out_808184661628088722[24] = 0;
   out_808184661628088722[25] = 0;
   out_808184661628088722[26] = 0;
   out_808184661628088722[27] = 0;
   out_808184661628088722[28] = 0;
   out_808184661628088722[29] = 0;
   out_808184661628088722[30] = 0;
   out_808184661628088722[31] = 0;
   out_808184661628088722[32] = 0;
   out_808184661628088722[33] = 1;
   out_808184661628088722[34] = 0;
   out_808184661628088722[35] = 0;
   out_808184661628088722[36] = 0;
   out_808184661628088722[37] = 0;
   out_808184661628088722[38] = 0;
   out_808184661628088722[39] = 0;
   out_808184661628088722[40] = 0;
   out_808184661628088722[41] = 0;
   out_808184661628088722[42] = 0;
   out_808184661628088722[43] = 0;
   out_808184661628088722[44] = 0;
   out_808184661628088722[45] = 0;
   out_808184661628088722[46] = 0;
   out_808184661628088722[47] = 0;
   out_808184661628088722[48] = 0;
   out_808184661628088722[49] = 0;
   out_808184661628088722[50] = 0;
   out_808184661628088722[51] = 0;
   out_808184661628088722[52] = 0;
   out_808184661628088722[53] = 0;
   out_808184661628088722[54] = 0;
   out_808184661628088722[55] = 0;
   out_808184661628088722[56] = 1;
   out_808184661628088722[57] = 0;
   out_808184661628088722[58] = 0;
   out_808184661628088722[59] = 0;
   out_808184661628088722[60] = 0;
   out_808184661628088722[61] = 0;
   out_808184661628088722[62] = 0;
   out_808184661628088722[63] = 0;
   out_808184661628088722[64] = 0;
   out_808184661628088722[65] = 0;
}
void h_33(double *state, double *unused, double *out_1140698226418861938) {
   out_1140698226418861938[0] = state[16];
   out_1140698226418861938[1] = state[17];
   out_1140698226418861938[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8580541936971397875) {
   out_8580541936971397875[0] = 0;
   out_8580541936971397875[1] = 0;
   out_8580541936971397875[2] = 0;
   out_8580541936971397875[3] = 0;
   out_8580541936971397875[4] = 0;
   out_8580541936971397875[5] = 0;
   out_8580541936971397875[6] = 0;
   out_8580541936971397875[7] = 0;
   out_8580541936971397875[8] = 0;
   out_8580541936971397875[9] = 0;
   out_8580541936971397875[10] = 0;
   out_8580541936971397875[11] = 0;
   out_8580541936971397875[12] = 0;
   out_8580541936971397875[13] = 0;
   out_8580541936971397875[14] = 0;
   out_8580541936971397875[15] = 0;
   out_8580541936971397875[16] = 1;
   out_8580541936971397875[17] = 0;
   out_8580541936971397875[18] = 0;
   out_8580541936971397875[19] = 0;
   out_8580541936971397875[20] = 0;
   out_8580541936971397875[21] = 0;
   out_8580541936971397875[22] = 0;
   out_8580541936971397875[23] = 0;
   out_8580541936971397875[24] = 0;
   out_8580541936971397875[25] = 0;
   out_8580541936971397875[26] = 0;
   out_8580541936971397875[27] = 0;
   out_8580541936971397875[28] = 0;
   out_8580541936971397875[29] = 0;
   out_8580541936971397875[30] = 0;
   out_8580541936971397875[31] = 0;
   out_8580541936971397875[32] = 0;
   out_8580541936971397875[33] = 0;
   out_8580541936971397875[34] = 0;
   out_8580541936971397875[35] = 0;
   out_8580541936971397875[36] = 0;
   out_8580541936971397875[37] = 0;
   out_8580541936971397875[38] = 0;
   out_8580541936971397875[39] = 1;
   out_8580541936971397875[40] = 0;
   out_8580541936971397875[41] = 0;
   out_8580541936971397875[42] = 0;
   out_8580541936971397875[43] = 0;
   out_8580541936971397875[44] = 0;
   out_8580541936971397875[45] = 0;
   out_8580541936971397875[46] = 0;
   out_8580541936971397875[47] = 0;
   out_8580541936971397875[48] = 0;
   out_8580541936971397875[49] = 0;
   out_8580541936971397875[50] = 0;
   out_8580541936971397875[51] = 0;
   out_8580541936971397875[52] = 0;
   out_8580541936971397875[53] = 0;
   out_8580541936971397875[54] = 0;
   out_8580541936971397875[55] = 0;
   out_8580541936971397875[56] = 0;
   out_8580541936971397875[57] = 0;
   out_8580541936971397875[58] = 0;
   out_8580541936971397875[59] = 0;
   out_8580541936971397875[60] = 0;
   out_8580541936971397875[61] = 0;
   out_8580541936971397875[62] = 1;
   out_8580541936971397875[63] = 0;
   out_8580541936971397875[64] = 0;
   out_8580541936971397875[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7500353067111488423) {
  H(in_vec, out_7500353067111488423);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_766172588434086154) {
  err_fun(nom_x, delta_x, out_766172588434086154);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1300041075557829446) {
  inv_err_fun(nom_x, true_x, out_1300041075557829446);
}
void live_H_mod_fun(double *state, double *out_6253763052524624393) {
  H_mod_fun(state, out_6253763052524624393);
}
void live_f_fun(double *state, double dt, double *out_1122240391475756889) {
  f_fun(state,  dt, out_1122240391475756889);
}
void live_F_fun(double *state, double dt, double *out_4917658642529101547) {
  F_fun(state,  dt, out_4917658642529101547);
}
void live_h_4(double *state, double *unused, double *out_4834206895910826861) {
  h_4(state, unused, out_4834206895910826861);
}
void live_H_4(double *state, double *unused, double *out_1049374308257679367) {
  H_4(state, unused, out_1049374308257679367);
}
void live_h_9(double *state, double *unused, double *out_884527150099786354) {
  h_9(state, unused, out_884527150099786354);
}
void live_H_9(double *state, double *unused, double *out_808184661628088722) {
  H_9(state, unused, out_808184661628088722);
}
void live_h_10(double *state, double *unused, double *out_7349985989310522663) {
  h_10(state, unused, out_7349985989310522663);
}
void live_H_10(double *state, double *unused, double *out_3470071247623489746) {
  H_10(state, unused, out_3470071247623489746);
}
void live_h_12(double *state, double *unused, double *out_3200280810746522172) {
  h_12(state, unused, out_3200280810746522172);
}
void live_H_12(double *state, double *unused, double *out_3970082099774282428) {
  H_12(state, unused, out_3970082099774282428);
}
void live_h_35(double *state, double *unused, double *out_3387869530151147510) {
  h_35(state, unused, out_3387869530151147510);
}
void live_H_35(double *state, double *unused, double *out_6715645132099296137) {
  H_35(state, unused, out_6715645132099296137);
}
void live_h_32(double *state, double *unused, double *out_3922442096717896800) {
  h_32(state, unused, out_3922442096717896800);
}
void live_H_32(double *state, double *unused, double *out_6403023437211851109) {
  H_32(state, unused, out_6403023437211851109);
}
void live_h_13(double *state, double *unused, double *out_742738544544814837) {
  h_13(state, unused, out_742738544544814837);
}
void live_H_13(double *state, double *unused, double *out_5819643715718069551) {
  H_13(state, unused, out_5819643715718069551);
}
void live_h_14(double *state, double *unused, double *out_884527150099786354) {
  h_14(state, unused, out_884527150099786354);
}
void live_H_14(double *state, double *unused, double *out_808184661628088722) {
  H_14(state, unused, out_808184661628088722);
}
void live_h_33(double *state, double *unused, double *out_1140698226418861938) {
  h_33(state, unused, out_1140698226418861938);
}
void live_H_33(double *state, double *unused, double *out_8580541936971397875) {
  H_33(state, unused, out_8580541936971397875);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
