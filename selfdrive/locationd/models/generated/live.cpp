#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6574843044755662276) {
   out_6574843044755662276[0] = 0;
   out_6574843044755662276[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6574843044755662276[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6574843044755662276[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6574843044755662276[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6574843044755662276[5] = -sin(in_vec[1]);
   out_6574843044755662276[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6574843044755662276[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6574843044755662276[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6574843044755662276[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6574843044755662276[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6574843044755662276[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6574843044755662276[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6574843044755662276[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6574843044755662276[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6574843044755662276[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6574843044755662276[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6574843044755662276[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1575979086870887545) {
   out_1575979086870887545[0] = delta_x[0] + nom_x[0];
   out_1575979086870887545[1] = delta_x[1] + nom_x[1];
   out_1575979086870887545[2] = delta_x[2] + nom_x[2];
   out_1575979086870887545[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1575979086870887545[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1575979086870887545[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1575979086870887545[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1575979086870887545[7] = delta_x[6] + nom_x[7];
   out_1575979086870887545[8] = delta_x[7] + nom_x[8];
   out_1575979086870887545[9] = delta_x[8] + nom_x[9];
   out_1575979086870887545[10] = delta_x[9] + nom_x[10];
   out_1575979086870887545[11] = delta_x[10] + nom_x[11];
   out_1575979086870887545[12] = delta_x[11] + nom_x[12];
   out_1575979086870887545[13] = delta_x[12] + nom_x[13];
   out_1575979086870887545[14] = delta_x[13] + nom_x[14];
   out_1575979086870887545[15] = delta_x[14] + nom_x[15];
   out_1575979086870887545[16] = delta_x[15] + nom_x[16];
   out_1575979086870887545[17] = delta_x[16] + nom_x[17];
   out_1575979086870887545[18] = delta_x[17] + nom_x[18];
   out_1575979086870887545[19] = delta_x[18] + nom_x[19];
   out_1575979086870887545[20] = delta_x[19] + nom_x[20];
   out_1575979086870887545[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6506776409850105096) {
   out_6506776409850105096[0] = -nom_x[0] + true_x[0];
   out_6506776409850105096[1] = -nom_x[1] + true_x[1];
   out_6506776409850105096[2] = -nom_x[2] + true_x[2];
   out_6506776409850105096[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6506776409850105096[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6506776409850105096[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6506776409850105096[6] = -nom_x[7] + true_x[7];
   out_6506776409850105096[7] = -nom_x[8] + true_x[8];
   out_6506776409850105096[8] = -nom_x[9] + true_x[9];
   out_6506776409850105096[9] = -nom_x[10] + true_x[10];
   out_6506776409850105096[10] = -nom_x[11] + true_x[11];
   out_6506776409850105096[11] = -nom_x[12] + true_x[12];
   out_6506776409850105096[12] = -nom_x[13] + true_x[13];
   out_6506776409850105096[13] = -nom_x[14] + true_x[14];
   out_6506776409850105096[14] = -nom_x[15] + true_x[15];
   out_6506776409850105096[15] = -nom_x[16] + true_x[16];
   out_6506776409850105096[16] = -nom_x[17] + true_x[17];
   out_6506776409850105096[17] = -nom_x[18] + true_x[18];
   out_6506776409850105096[18] = -nom_x[19] + true_x[19];
   out_6506776409850105096[19] = -nom_x[20] + true_x[20];
   out_6506776409850105096[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5856833465841616276) {
   out_5856833465841616276[0] = 1.0;
   out_5856833465841616276[1] = 0;
   out_5856833465841616276[2] = 0;
   out_5856833465841616276[3] = 0;
   out_5856833465841616276[4] = 0;
   out_5856833465841616276[5] = 0;
   out_5856833465841616276[6] = 0;
   out_5856833465841616276[7] = 0;
   out_5856833465841616276[8] = 0;
   out_5856833465841616276[9] = 0;
   out_5856833465841616276[10] = 0;
   out_5856833465841616276[11] = 0;
   out_5856833465841616276[12] = 0;
   out_5856833465841616276[13] = 0;
   out_5856833465841616276[14] = 0;
   out_5856833465841616276[15] = 0;
   out_5856833465841616276[16] = 0;
   out_5856833465841616276[17] = 0;
   out_5856833465841616276[18] = 0;
   out_5856833465841616276[19] = 0;
   out_5856833465841616276[20] = 0;
   out_5856833465841616276[21] = 0;
   out_5856833465841616276[22] = 1.0;
   out_5856833465841616276[23] = 0;
   out_5856833465841616276[24] = 0;
   out_5856833465841616276[25] = 0;
   out_5856833465841616276[26] = 0;
   out_5856833465841616276[27] = 0;
   out_5856833465841616276[28] = 0;
   out_5856833465841616276[29] = 0;
   out_5856833465841616276[30] = 0;
   out_5856833465841616276[31] = 0;
   out_5856833465841616276[32] = 0;
   out_5856833465841616276[33] = 0;
   out_5856833465841616276[34] = 0;
   out_5856833465841616276[35] = 0;
   out_5856833465841616276[36] = 0;
   out_5856833465841616276[37] = 0;
   out_5856833465841616276[38] = 0;
   out_5856833465841616276[39] = 0;
   out_5856833465841616276[40] = 0;
   out_5856833465841616276[41] = 0;
   out_5856833465841616276[42] = 0;
   out_5856833465841616276[43] = 0;
   out_5856833465841616276[44] = 1.0;
   out_5856833465841616276[45] = 0;
   out_5856833465841616276[46] = 0;
   out_5856833465841616276[47] = 0;
   out_5856833465841616276[48] = 0;
   out_5856833465841616276[49] = 0;
   out_5856833465841616276[50] = 0;
   out_5856833465841616276[51] = 0;
   out_5856833465841616276[52] = 0;
   out_5856833465841616276[53] = 0;
   out_5856833465841616276[54] = 0;
   out_5856833465841616276[55] = 0;
   out_5856833465841616276[56] = 0;
   out_5856833465841616276[57] = 0;
   out_5856833465841616276[58] = 0;
   out_5856833465841616276[59] = 0;
   out_5856833465841616276[60] = 0;
   out_5856833465841616276[61] = 0;
   out_5856833465841616276[62] = 0;
   out_5856833465841616276[63] = 0;
   out_5856833465841616276[64] = 0;
   out_5856833465841616276[65] = 0;
   out_5856833465841616276[66] = -0.5*state[4];
   out_5856833465841616276[67] = -0.5*state[5];
   out_5856833465841616276[68] = -0.5*state[6];
   out_5856833465841616276[69] = 0;
   out_5856833465841616276[70] = 0;
   out_5856833465841616276[71] = 0;
   out_5856833465841616276[72] = 0;
   out_5856833465841616276[73] = 0;
   out_5856833465841616276[74] = 0;
   out_5856833465841616276[75] = 0;
   out_5856833465841616276[76] = 0;
   out_5856833465841616276[77] = 0;
   out_5856833465841616276[78] = 0;
   out_5856833465841616276[79] = 0;
   out_5856833465841616276[80] = 0;
   out_5856833465841616276[81] = 0;
   out_5856833465841616276[82] = 0;
   out_5856833465841616276[83] = 0;
   out_5856833465841616276[84] = 0;
   out_5856833465841616276[85] = 0;
   out_5856833465841616276[86] = 0;
   out_5856833465841616276[87] = 0.5*state[3];
   out_5856833465841616276[88] = 0.5*state[6];
   out_5856833465841616276[89] = -0.5*state[5];
   out_5856833465841616276[90] = 0;
   out_5856833465841616276[91] = 0;
   out_5856833465841616276[92] = 0;
   out_5856833465841616276[93] = 0;
   out_5856833465841616276[94] = 0;
   out_5856833465841616276[95] = 0;
   out_5856833465841616276[96] = 0;
   out_5856833465841616276[97] = 0;
   out_5856833465841616276[98] = 0;
   out_5856833465841616276[99] = 0;
   out_5856833465841616276[100] = 0;
   out_5856833465841616276[101] = 0;
   out_5856833465841616276[102] = 0;
   out_5856833465841616276[103] = 0;
   out_5856833465841616276[104] = 0;
   out_5856833465841616276[105] = 0;
   out_5856833465841616276[106] = 0;
   out_5856833465841616276[107] = 0;
   out_5856833465841616276[108] = -0.5*state[6];
   out_5856833465841616276[109] = 0.5*state[3];
   out_5856833465841616276[110] = 0.5*state[4];
   out_5856833465841616276[111] = 0;
   out_5856833465841616276[112] = 0;
   out_5856833465841616276[113] = 0;
   out_5856833465841616276[114] = 0;
   out_5856833465841616276[115] = 0;
   out_5856833465841616276[116] = 0;
   out_5856833465841616276[117] = 0;
   out_5856833465841616276[118] = 0;
   out_5856833465841616276[119] = 0;
   out_5856833465841616276[120] = 0;
   out_5856833465841616276[121] = 0;
   out_5856833465841616276[122] = 0;
   out_5856833465841616276[123] = 0;
   out_5856833465841616276[124] = 0;
   out_5856833465841616276[125] = 0;
   out_5856833465841616276[126] = 0;
   out_5856833465841616276[127] = 0;
   out_5856833465841616276[128] = 0;
   out_5856833465841616276[129] = 0.5*state[5];
   out_5856833465841616276[130] = -0.5*state[4];
   out_5856833465841616276[131] = 0.5*state[3];
   out_5856833465841616276[132] = 0;
   out_5856833465841616276[133] = 0;
   out_5856833465841616276[134] = 0;
   out_5856833465841616276[135] = 0;
   out_5856833465841616276[136] = 0;
   out_5856833465841616276[137] = 0;
   out_5856833465841616276[138] = 0;
   out_5856833465841616276[139] = 0;
   out_5856833465841616276[140] = 0;
   out_5856833465841616276[141] = 0;
   out_5856833465841616276[142] = 0;
   out_5856833465841616276[143] = 0;
   out_5856833465841616276[144] = 0;
   out_5856833465841616276[145] = 0;
   out_5856833465841616276[146] = 0;
   out_5856833465841616276[147] = 0;
   out_5856833465841616276[148] = 0;
   out_5856833465841616276[149] = 0;
   out_5856833465841616276[150] = 0;
   out_5856833465841616276[151] = 0;
   out_5856833465841616276[152] = 0;
   out_5856833465841616276[153] = 1.0;
   out_5856833465841616276[154] = 0;
   out_5856833465841616276[155] = 0;
   out_5856833465841616276[156] = 0;
   out_5856833465841616276[157] = 0;
   out_5856833465841616276[158] = 0;
   out_5856833465841616276[159] = 0;
   out_5856833465841616276[160] = 0;
   out_5856833465841616276[161] = 0;
   out_5856833465841616276[162] = 0;
   out_5856833465841616276[163] = 0;
   out_5856833465841616276[164] = 0;
   out_5856833465841616276[165] = 0;
   out_5856833465841616276[166] = 0;
   out_5856833465841616276[167] = 0;
   out_5856833465841616276[168] = 0;
   out_5856833465841616276[169] = 0;
   out_5856833465841616276[170] = 0;
   out_5856833465841616276[171] = 0;
   out_5856833465841616276[172] = 0;
   out_5856833465841616276[173] = 0;
   out_5856833465841616276[174] = 0;
   out_5856833465841616276[175] = 1.0;
   out_5856833465841616276[176] = 0;
   out_5856833465841616276[177] = 0;
   out_5856833465841616276[178] = 0;
   out_5856833465841616276[179] = 0;
   out_5856833465841616276[180] = 0;
   out_5856833465841616276[181] = 0;
   out_5856833465841616276[182] = 0;
   out_5856833465841616276[183] = 0;
   out_5856833465841616276[184] = 0;
   out_5856833465841616276[185] = 0;
   out_5856833465841616276[186] = 0;
   out_5856833465841616276[187] = 0;
   out_5856833465841616276[188] = 0;
   out_5856833465841616276[189] = 0;
   out_5856833465841616276[190] = 0;
   out_5856833465841616276[191] = 0;
   out_5856833465841616276[192] = 0;
   out_5856833465841616276[193] = 0;
   out_5856833465841616276[194] = 0;
   out_5856833465841616276[195] = 0;
   out_5856833465841616276[196] = 0;
   out_5856833465841616276[197] = 1.0;
   out_5856833465841616276[198] = 0;
   out_5856833465841616276[199] = 0;
   out_5856833465841616276[200] = 0;
   out_5856833465841616276[201] = 0;
   out_5856833465841616276[202] = 0;
   out_5856833465841616276[203] = 0;
   out_5856833465841616276[204] = 0;
   out_5856833465841616276[205] = 0;
   out_5856833465841616276[206] = 0;
   out_5856833465841616276[207] = 0;
   out_5856833465841616276[208] = 0;
   out_5856833465841616276[209] = 0;
   out_5856833465841616276[210] = 0;
   out_5856833465841616276[211] = 0;
   out_5856833465841616276[212] = 0;
   out_5856833465841616276[213] = 0;
   out_5856833465841616276[214] = 0;
   out_5856833465841616276[215] = 0;
   out_5856833465841616276[216] = 0;
   out_5856833465841616276[217] = 0;
   out_5856833465841616276[218] = 0;
   out_5856833465841616276[219] = 1.0;
   out_5856833465841616276[220] = 0;
   out_5856833465841616276[221] = 0;
   out_5856833465841616276[222] = 0;
   out_5856833465841616276[223] = 0;
   out_5856833465841616276[224] = 0;
   out_5856833465841616276[225] = 0;
   out_5856833465841616276[226] = 0;
   out_5856833465841616276[227] = 0;
   out_5856833465841616276[228] = 0;
   out_5856833465841616276[229] = 0;
   out_5856833465841616276[230] = 0;
   out_5856833465841616276[231] = 0;
   out_5856833465841616276[232] = 0;
   out_5856833465841616276[233] = 0;
   out_5856833465841616276[234] = 0;
   out_5856833465841616276[235] = 0;
   out_5856833465841616276[236] = 0;
   out_5856833465841616276[237] = 0;
   out_5856833465841616276[238] = 0;
   out_5856833465841616276[239] = 0;
   out_5856833465841616276[240] = 0;
   out_5856833465841616276[241] = 1.0;
   out_5856833465841616276[242] = 0;
   out_5856833465841616276[243] = 0;
   out_5856833465841616276[244] = 0;
   out_5856833465841616276[245] = 0;
   out_5856833465841616276[246] = 0;
   out_5856833465841616276[247] = 0;
   out_5856833465841616276[248] = 0;
   out_5856833465841616276[249] = 0;
   out_5856833465841616276[250] = 0;
   out_5856833465841616276[251] = 0;
   out_5856833465841616276[252] = 0;
   out_5856833465841616276[253] = 0;
   out_5856833465841616276[254] = 0;
   out_5856833465841616276[255] = 0;
   out_5856833465841616276[256] = 0;
   out_5856833465841616276[257] = 0;
   out_5856833465841616276[258] = 0;
   out_5856833465841616276[259] = 0;
   out_5856833465841616276[260] = 0;
   out_5856833465841616276[261] = 0;
   out_5856833465841616276[262] = 0;
   out_5856833465841616276[263] = 1.0;
   out_5856833465841616276[264] = 0;
   out_5856833465841616276[265] = 0;
   out_5856833465841616276[266] = 0;
   out_5856833465841616276[267] = 0;
   out_5856833465841616276[268] = 0;
   out_5856833465841616276[269] = 0;
   out_5856833465841616276[270] = 0;
   out_5856833465841616276[271] = 0;
   out_5856833465841616276[272] = 0;
   out_5856833465841616276[273] = 0;
   out_5856833465841616276[274] = 0;
   out_5856833465841616276[275] = 0;
   out_5856833465841616276[276] = 0;
   out_5856833465841616276[277] = 0;
   out_5856833465841616276[278] = 0;
   out_5856833465841616276[279] = 0;
   out_5856833465841616276[280] = 0;
   out_5856833465841616276[281] = 0;
   out_5856833465841616276[282] = 0;
   out_5856833465841616276[283] = 0;
   out_5856833465841616276[284] = 0;
   out_5856833465841616276[285] = 1.0;
   out_5856833465841616276[286] = 0;
   out_5856833465841616276[287] = 0;
   out_5856833465841616276[288] = 0;
   out_5856833465841616276[289] = 0;
   out_5856833465841616276[290] = 0;
   out_5856833465841616276[291] = 0;
   out_5856833465841616276[292] = 0;
   out_5856833465841616276[293] = 0;
   out_5856833465841616276[294] = 0;
   out_5856833465841616276[295] = 0;
   out_5856833465841616276[296] = 0;
   out_5856833465841616276[297] = 0;
   out_5856833465841616276[298] = 0;
   out_5856833465841616276[299] = 0;
   out_5856833465841616276[300] = 0;
   out_5856833465841616276[301] = 0;
   out_5856833465841616276[302] = 0;
   out_5856833465841616276[303] = 0;
   out_5856833465841616276[304] = 0;
   out_5856833465841616276[305] = 0;
   out_5856833465841616276[306] = 0;
   out_5856833465841616276[307] = 1.0;
   out_5856833465841616276[308] = 0;
   out_5856833465841616276[309] = 0;
   out_5856833465841616276[310] = 0;
   out_5856833465841616276[311] = 0;
   out_5856833465841616276[312] = 0;
   out_5856833465841616276[313] = 0;
   out_5856833465841616276[314] = 0;
   out_5856833465841616276[315] = 0;
   out_5856833465841616276[316] = 0;
   out_5856833465841616276[317] = 0;
   out_5856833465841616276[318] = 0;
   out_5856833465841616276[319] = 0;
   out_5856833465841616276[320] = 0;
   out_5856833465841616276[321] = 0;
   out_5856833465841616276[322] = 0;
   out_5856833465841616276[323] = 0;
   out_5856833465841616276[324] = 0;
   out_5856833465841616276[325] = 0;
   out_5856833465841616276[326] = 0;
   out_5856833465841616276[327] = 0;
   out_5856833465841616276[328] = 0;
   out_5856833465841616276[329] = 1.0;
   out_5856833465841616276[330] = 0;
   out_5856833465841616276[331] = 0;
   out_5856833465841616276[332] = 0;
   out_5856833465841616276[333] = 0;
   out_5856833465841616276[334] = 0;
   out_5856833465841616276[335] = 0;
   out_5856833465841616276[336] = 0;
   out_5856833465841616276[337] = 0;
   out_5856833465841616276[338] = 0;
   out_5856833465841616276[339] = 0;
   out_5856833465841616276[340] = 0;
   out_5856833465841616276[341] = 0;
   out_5856833465841616276[342] = 0;
   out_5856833465841616276[343] = 0;
   out_5856833465841616276[344] = 0;
   out_5856833465841616276[345] = 0;
   out_5856833465841616276[346] = 0;
   out_5856833465841616276[347] = 0;
   out_5856833465841616276[348] = 0;
   out_5856833465841616276[349] = 0;
   out_5856833465841616276[350] = 0;
   out_5856833465841616276[351] = 1.0;
   out_5856833465841616276[352] = 0;
   out_5856833465841616276[353] = 0;
   out_5856833465841616276[354] = 0;
   out_5856833465841616276[355] = 0;
   out_5856833465841616276[356] = 0;
   out_5856833465841616276[357] = 0;
   out_5856833465841616276[358] = 0;
   out_5856833465841616276[359] = 0;
   out_5856833465841616276[360] = 0;
   out_5856833465841616276[361] = 0;
   out_5856833465841616276[362] = 0;
   out_5856833465841616276[363] = 0;
   out_5856833465841616276[364] = 0;
   out_5856833465841616276[365] = 0;
   out_5856833465841616276[366] = 0;
   out_5856833465841616276[367] = 0;
   out_5856833465841616276[368] = 0;
   out_5856833465841616276[369] = 0;
   out_5856833465841616276[370] = 0;
   out_5856833465841616276[371] = 0;
   out_5856833465841616276[372] = 0;
   out_5856833465841616276[373] = 1.0;
   out_5856833465841616276[374] = 0;
   out_5856833465841616276[375] = 0;
   out_5856833465841616276[376] = 0;
   out_5856833465841616276[377] = 0;
   out_5856833465841616276[378] = 0;
   out_5856833465841616276[379] = 0;
   out_5856833465841616276[380] = 0;
   out_5856833465841616276[381] = 0;
   out_5856833465841616276[382] = 0;
   out_5856833465841616276[383] = 0;
   out_5856833465841616276[384] = 0;
   out_5856833465841616276[385] = 0;
   out_5856833465841616276[386] = 0;
   out_5856833465841616276[387] = 0;
   out_5856833465841616276[388] = 0;
   out_5856833465841616276[389] = 0;
   out_5856833465841616276[390] = 0;
   out_5856833465841616276[391] = 0;
   out_5856833465841616276[392] = 0;
   out_5856833465841616276[393] = 0;
   out_5856833465841616276[394] = 0;
   out_5856833465841616276[395] = 1.0;
   out_5856833465841616276[396] = 0;
   out_5856833465841616276[397] = 0;
   out_5856833465841616276[398] = 0;
   out_5856833465841616276[399] = 0;
   out_5856833465841616276[400] = 0;
   out_5856833465841616276[401] = 0;
   out_5856833465841616276[402] = 0;
   out_5856833465841616276[403] = 0;
   out_5856833465841616276[404] = 0;
   out_5856833465841616276[405] = 0;
   out_5856833465841616276[406] = 0;
   out_5856833465841616276[407] = 0;
   out_5856833465841616276[408] = 0;
   out_5856833465841616276[409] = 0;
   out_5856833465841616276[410] = 0;
   out_5856833465841616276[411] = 0;
   out_5856833465841616276[412] = 0;
   out_5856833465841616276[413] = 0;
   out_5856833465841616276[414] = 0;
   out_5856833465841616276[415] = 0;
   out_5856833465841616276[416] = 0;
   out_5856833465841616276[417] = 1.0;
   out_5856833465841616276[418] = 0;
   out_5856833465841616276[419] = 0;
   out_5856833465841616276[420] = 0;
   out_5856833465841616276[421] = 0;
   out_5856833465841616276[422] = 0;
   out_5856833465841616276[423] = 0;
   out_5856833465841616276[424] = 0;
   out_5856833465841616276[425] = 0;
   out_5856833465841616276[426] = 0;
   out_5856833465841616276[427] = 0;
   out_5856833465841616276[428] = 0;
   out_5856833465841616276[429] = 0;
   out_5856833465841616276[430] = 0;
   out_5856833465841616276[431] = 0;
   out_5856833465841616276[432] = 0;
   out_5856833465841616276[433] = 0;
   out_5856833465841616276[434] = 0;
   out_5856833465841616276[435] = 0;
   out_5856833465841616276[436] = 0;
   out_5856833465841616276[437] = 0;
   out_5856833465841616276[438] = 0;
   out_5856833465841616276[439] = 1.0;
   out_5856833465841616276[440] = 0;
   out_5856833465841616276[441] = 0;
   out_5856833465841616276[442] = 0;
   out_5856833465841616276[443] = 0;
   out_5856833465841616276[444] = 0;
   out_5856833465841616276[445] = 0;
   out_5856833465841616276[446] = 0;
   out_5856833465841616276[447] = 0;
   out_5856833465841616276[448] = 0;
   out_5856833465841616276[449] = 0;
   out_5856833465841616276[450] = 0;
   out_5856833465841616276[451] = 0;
   out_5856833465841616276[452] = 0;
   out_5856833465841616276[453] = 0;
   out_5856833465841616276[454] = 0;
   out_5856833465841616276[455] = 0;
   out_5856833465841616276[456] = 0;
   out_5856833465841616276[457] = 0;
   out_5856833465841616276[458] = 0;
   out_5856833465841616276[459] = 0;
   out_5856833465841616276[460] = 0;
   out_5856833465841616276[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2159418628523068413) {
   out_2159418628523068413[0] = dt*state[7] + state[0];
   out_2159418628523068413[1] = dt*state[8] + state[1];
   out_2159418628523068413[2] = dt*state[9] + state[2];
   out_2159418628523068413[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2159418628523068413[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2159418628523068413[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2159418628523068413[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2159418628523068413[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2159418628523068413[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2159418628523068413[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2159418628523068413[10] = state[10];
   out_2159418628523068413[11] = state[11];
   out_2159418628523068413[12] = state[12];
   out_2159418628523068413[13] = state[13];
   out_2159418628523068413[14] = state[14];
   out_2159418628523068413[15] = state[15];
   out_2159418628523068413[16] = state[16];
   out_2159418628523068413[17] = state[17];
   out_2159418628523068413[18] = state[18];
   out_2159418628523068413[19] = state[19];
   out_2159418628523068413[20] = state[20];
   out_2159418628523068413[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6328431180555769297) {
   out_6328431180555769297[0] = 1;
   out_6328431180555769297[1] = 0;
   out_6328431180555769297[2] = 0;
   out_6328431180555769297[3] = 0;
   out_6328431180555769297[4] = 0;
   out_6328431180555769297[5] = 0;
   out_6328431180555769297[6] = dt;
   out_6328431180555769297[7] = 0;
   out_6328431180555769297[8] = 0;
   out_6328431180555769297[9] = 0;
   out_6328431180555769297[10] = 0;
   out_6328431180555769297[11] = 0;
   out_6328431180555769297[12] = 0;
   out_6328431180555769297[13] = 0;
   out_6328431180555769297[14] = 0;
   out_6328431180555769297[15] = 0;
   out_6328431180555769297[16] = 0;
   out_6328431180555769297[17] = 0;
   out_6328431180555769297[18] = 0;
   out_6328431180555769297[19] = 0;
   out_6328431180555769297[20] = 0;
   out_6328431180555769297[21] = 0;
   out_6328431180555769297[22] = 1;
   out_6328431180555769297[23] = 0;
   out_6328431180555769297[24] = 0;
   out_6328431180555769297[25] = 0;
   out_6328431180555769297[26] = 0;
   out_6328431180555769297[27] = 0;
   out_6328431180555769297[28] = dt;
   out_6328431180555769297[29] = 0;
   out_6328431180555769297[30] = 0;
   out_6328431180555769297[31] = 0;
   out_6328431180555769297[32] = 0;
   out_6328431180555769297[33] = 0;
   out_6328431180555769297[34] = 0;
   out_6328431180555769297[35] = 0;
   out_6328431180555769297[36] = 0;
   out_6328431180555769297[37] = 0;
   out_6328431180555769297[38] = 0;
   out_6328431180555769297[39] = 0;
   out_6328431180555769297[40] = 0;
   out_6328431180555769297[41] = 0;
   out_6328431180555769297[42] = 0;
   out_6328431180555769297[43] = 0;
   out_6328431180555769297[44] = 1;
   out_6328431180555769297[45] = 0;
   out_6328431180555769297[46] = 0;
   out_6328431180555769297[47] = 0;
   out_6328431180555769297[48] = 0;
   out_6328431180555769297[49] = 0;
   out_6328431180555769297[50] = dt;
   out_6328431180555769297[51] = 0;
   out_6328431180555769297[52] = 0;
   out_6328431180555769297[53] = 0;
   out_6328431180555769297[54] = 0;
   out_6328431180555769297[55] = 0;
   out_6328431180555769297[56] = 0;
   out_6328431180555769297[57] = 0;
   out_6328431180555769297[58] = 0;
   out_6328431180555769297[59] = 0;
   out_6328431180555769297[60] = 0;
   out_6328431180555769297[61] = 0;
   out_6328431180555769297[62] = 0;
   out_6328431180555769297[63] = 0;
   out_6328431180555769297[64] = 0;
   out_6328431180555769297[65] = 0;
   out_6328431180555769297[66] = 1;
   out_6328431180555769297[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6328431180555769297[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6328431180555769297[69] = 0;
   out_6328431180555769297[70] = 0;
   out_6328431180555769297[71] = 0;
   out_6328431180555769297[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6328431180555769297[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6328431180555769297[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6328431180555769297[75] = 0;
   out_6328431180555769297[76] = 0;
   out_6328431180555769297[77] = 0;
   out_6328431180555769297[78] = 0;
   out_6328431180555769297[79] = 0;
   out_6328431180555769297[80] = 0;
   out_6328431180555769297[81] = 0;
   out_6328431180555769297[82] = 0;
   out_6328431180555769297[83] = 0;
   out_6328431180555769297[84] = 0;
   out_6328431180555769297[85] = 0;
   out_6328431180555769297[86] = 0;
   out_6328431180555769297[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6328431180555769297[88] = 1;
   out_6328431180555769297[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6328431180555769297[90] = 0;
   out_6328431180555769297[91] = 0;
   out_6328431180555769297[92] = 0;
   out_6328431180555769297[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6328431180555769297[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6328431180555769297[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6328431180555769297[96] = 0;
   out_6328431180555769297[97] = 0;
   out_6328431180555769297[98] = 0;
   out_6328431180555769297[99] = 0;
   out_6328431180555769297[100] = 0;
   out_6328431180555769297[101] = 0;
   out_6328431180555769297[102] = 0;
   out_6328431180555769297[103] = 0;
   out_6328431180555769297[104] = 0;
   out_6328431180555769297[105] = 0;
   out_6328431180555769297[106] = 0;
   out_6328431180555769297[107] = 0;
   out_6328431180555769297[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6328431180555769297[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6328431180555769297[110] = 1;
   out_6328431180555769297[111] = 0;
   out_6328431180555769297[112] = 0;
   out_6328431180555769297[113] = 0;
   out_6328431180555769297[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6328431180555769297[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6328431180555769297[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6328431180555769297[117] = 0;
   out_6328431180555769297[118] = 0;
   out_6328431180555769297[119] = 0;
   out_6328431180555769297[120] = 0;
   out_6328431180555769297[121] = 0;
   out_6328431180555769297[122] = 0;
   out_6328431180555769297[123] = 0;
   out_6328431180555769297[124] = 0;
   out_6328431180555769297[125] = 0;
   out_6328431180555769297[126] = 0;
   out_6328431180555769297[127] = 0;
   out_6328431180555769297[128] = 0;
   out_6328431180555769297[129] = 0;
   out_6328431180555769297[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6328431180555769297[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6328431180555769297[132] = 1;
   out_6328431180555769297[133] = 0;
   out_6328431180555769297[134] = 0;
   out_6328431180555769297[135] = 0;
   out_6328431180555769297[136] = 0;
   out_6328431180555769297[137] = 0;
   out_6328431180555769297[138] = 0;
   out_6328431180555769297[139] = 0;
   out_6328431180555769297[140] = 0;
   out_6328431180555769297[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6328431180555769297[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6328431180555769297[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6328431180555769297[144] = 0;
   out_6328431180555769297[145] = 0;
   out_6328431180555769297[146] = 0;
   out_6328431180555769297[147] = 0;
   out_6328431180555769297[148] = 0;
   out_6328431180555769297[149] = 0;
   out_6328431180555769297[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6328431180555769297[151] = 0;
   out_6328431180555769297[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6328431180555769297[153] = 0;
   out_6328431180555769297[154] = 1;
   out_6328431180555769297[155] = 0;
   out_6328431180555769297[156] = 0;
   out_6328431180555769297[157] = 0;
   out_6328431180555769297[158] = 0;
   out_6328431180555769297[159] = 0;
   out_6328431180555769297[160] = 0;
   out_6328431180555769297[161] = 0;
   out_6328431180555769297[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6328431180555769297[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6328431180555769297[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6328431180555769297[165] = 0;
   out_6328431180555769297[166] = 0;
   out_6328431180555769297[167] = 0;
   out_6328431180555769297[168] = 0;
   out_6328431180555769297[169] = 0;
   out_6328431180555769297[170] = 0;
   out_6328431180555769297[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6328431180555769297[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6328431180555769297[173] = 0;
   out_6328431180555769297[174] = 0;
   out_6328431180555769297[175] = 0;
   out_6328431180555769297[176] = 1;
   out_6328431180555769297[177] = 0;
   out_6328431180555769297[178] = 0;
   out_6328431180555769297[179] = 0;
   out_6328431180555769297[180] = 0;
   out_6328431180555769297[181] = 0;
   out_6328431180555769297[182] = 0;
   out_6328431180555769297[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6328431180555769297[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6328431180555769297[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6328431180555769297[186] = 0;
   out_6328431180555769297[187] = 0;
   out_6328431180555769297[188] = 0;
   out_6328431180555769297[189] = 0;
   out_6328431180555769297[190] = 0;
   out_6328431180555769297[191] = 0;
   out_6328431180555769297[192] = 0;
   out_6328431180555769297[193] = 0;
   out_6328431180555769297[194] = 0;
   out_6328431180555769297[195] = 0;
   out_6328431180555769297[196] = 0;
   out_6328431180555769297[197] = 0;
   out_6328431180555769297[198] = 1;
   out_6328431180555769297[199] = 0;
   out_6328431180555769297[200] = 0;
   out_6328431180555769297[201] = 0;
   out_6328431180555769297[202] = 0;
   out_6328431180555769297[203] = 0;
   out_6328431180555769297[204] = 0;
   out_6328431180555769297[205] = 0;
   out_6328431180555769297[206] = 0;
   out_6328431180555769297[207] = 0;
   out_6328431180555769297[208] = 0;
   out_6328431180555769297[209] = 0;
   out_6328431180555769297[210] = 0;
   out_6328431180555769297[211] = 0;
   out_6328431180555769297[212] = 0;
   out_6328431180555769297[213] = 0;
   out_6328431180555769297[214] = 0;
   out_6328431180555769297[215] = 0;
   out_6328431180555769297[216] = 0;
   out_6328431180555769297[217] = 0;
   out_6328431180555769297[218] = 0;
   out_6328431180555769297[219] = 0;
   out_6328431180555769297[220] = 1;
   out_6328431180555769297[221] = 0;
   out_6328431180555769297[222] = 0;
   out_6328431180555769297[223] = 0;
   out_6328431180555769297[224] = 0;
   out_6328431180555769297[225] = 0;
   out_6328431180555769297[226] = 0;
   out_6328431180555769297[227] = 0;
   out_6328431180555769297[228] = 0;
   out_6328431180555769297[229] = 0;
   out_6328431180555769297[230] = 0;
   out_6328431180555769297[231] = 0;
   out_6328431180555769297[232] = 0;
   out_6328431180555769297[233] = 0;
   out_6328431180555769297[234] = 0;
   out_6328431180555769297[235] = 0;
   out_6328431180555769297[236] = 0;
   out_6328431180555769297[237] = 0;
   out_6328431180555769297[238] = 0;
   out_6328431180555769297[239] = 0;
   out_6328431180555769297[240] = 0;
   out_6328431180555769297[241] = 0;
   out_6328431180555769297[242] = 1;
   out_6328431180555769297[243] = 0;
   out_6328431180555769297[244] = 0;
   out_6328431180555769297[245] = 0;
   out_6328431180555769297[246] = 0;
   out_6328431180555769297[247] = 0;
   out_6328431180555769297[248] = 0;
   out_6328431180555769297[249] = 0;
   out_6328431180555769297[250] = 0;
   out_6328431180555769297[251] = 0;
   out_6328431180555769297[252] = 0;
   out_6328431180555769297[253] = 0;
   out_6328431180555769297[254] = 0;
   out_6328431180555769297[255] = 0;
   out_6328431180555769297[256] = 0;
   out_6328431180555769297[257] = 0;
   out_6328431180555769297[258] = 0;
   out_6328431180555769297[259] = 0;
   out_6328431180555769297[260] = 0;
   out_6328431180555769297[261] = 0;
   out_6328431180555769297[262] = 0;
   out_6328431180555769297[263] = 0;
   out_6328431180555769297[264] = 1;
   out_6328431180555769297[265] = 0;
   out_6328431180555769297[266] = 0;
   out_6328431180555769297[267] = 0;
   out_6328431180555769297[268] = 0;
   out_6328431180555769297[269] = 0;
   out_6328431180555769297[270] = 0;
   out_6328431180555769297[271] = 0;
   out_6328431180555769297[272] = 0;
   out_6328431180555769297[273] = 0;
   out_6328431180555769297[274] = 0;
   out_6328431180555769297[275] = 0;
   out_6328431180555769297[276] = 0;
   out_6328431180555769297[277] = 0;
   out_6328431180555769297[278] = 0;
   out_6328431180555769297[279] = 0;
   out_6328431180555769297[280] = 0;
   out_6328431180555769297[281] = 0;
   out_6328431180555769297[282] = 0;
   out_6328431180555769297[283] = 0;
   out_6328431180555769297[284] = 0;
   out_6328431180555769297[285] = 0;
   out_6328431180555769297[286] = 1;
   out_6328431180555769297[287] = 0;
   out_6328431180555769297[288] = 0;
   out_6328431180555769297[289] = 0;
   out_6328431180555769297[290] = 0;
   out_6328431180555769297[291] = 0;
   out_6328431180555769297[292] = 0;
   out_6328431180555769297[293] = 0;
   out_6328431180555769297[294] = 0;
   out_6328431180555769297[295] = 0;
   out_6328431180555769297[296] = 0;
   out_6328431180555769297[297] = 0;
   out_6328431180555769297[298] = 0;
   out_6328431180555769297[299] = 0;
   out_6328431180555769297[300] = 0;
   out_6328431180555769297[301] = 0;
   out_6328431180555769297[302] = 0;
   out_6328431180555769297[303] = 0;
   out_6328431180555769297[304] = 0;
   out_6328431180555769297[305] = 0;
   out_6328431180555769297[306] = 0;
   out_6328431180555769297[307] = 0;
   out_6328431180555769297[308] = 1;
   out_6328431180555769297[309] = 0;
   out_6328431180555769297[310] = 0;
   out_6328431180555769297[311] = 0;
   out_6328431180555769297[312] = 0;
   out_6328431180555769297[313] = 0;
   out_6328431180555769297[314] = 0;
   out_6328431180555769297[315] = 0;
   out_6328431180555769297[316] = 0;
   out_6328431180555769297[317] = 0;
   out_6328431180555769297[318] = 0;
   out_6328431180555769297[319] = 0;
   out_6328431180555769297[320] = 0;
   out_6328431180555769297[321] = 0;
   out_6328431180555769297[322] = 0;
   out_6328431180555769297[323] = 0;
   out_6328431180555769297[324] = 0;
   out_6328431180555769297[325] = 0;
   out_6328431180555769297[326] = 0;
   out_6328431180555769297[327] = 0;
   out_6328431180555769297[328] = 0;
   out_6328431180555769297[329] = 0;
   out_6328431180555769297[330] = 1;
   out_6328431180555769297[331] = 0;
   out_6328431180555769297[332] = 0;
   out_6328431180555769297[333] = 0;
   out_6328431180555769297[334] = 0;
   out_6328431180555769297[335] = 0;
   out_6328431180555769297[336] = 0;
   out_6328431180555769297[337] = 0;
   out_6328431180555769297[338] = 0;
   out_6328431180555769297[339] = 0;
   out_6328431180555769297[340] = 0;
   out_6328431180555769297[341] = 0;
   out_6328431180555769297[342] = 0;
   out_6328431180555769297[343] = 0;
   out_6328431180555769297[344] = 0;
   out_6328431180555769297[345] = 0;
   out_6328431180555769297[346] = 0;
   out_6328431180555769297[347] = 0;
   out_6328431180555769297[348] = 0;
   out_6328431180555769297[349] = 0;
   out_6328431180555769297[350] = 0;
   out_6328431180555769297[351] = 0;
   out_6328431180555769297[352] = 1;
   out_6328431180555769297[353] = 0;
   out_6328431180555769297[354] = 0;
   out_6328431180555769297[355] = 0;
   out_6328431180555769297[356] = 0;
   out_6328431180555769297[357] = 0;
   out_6328431180555769297[358] = 0;
   out_6328431180555769297[359] = 0;
   out_6328431180555769297[360] = 0;
   out_6328431180555769297[361] = 0;
   out_6328431180555769297[362] = 0;
   out_6328431180555769297[363] = 0;
   out_6328431180555769297[364] = 0;
   out_6328431180555769297[365] = 0;
   out_6328431180555769297[366] = 0;
   out_6328431180555769297[367] = 0;
   out_6328431180555769297[368] = 0;
   out_6328431180555769297[369] = 0;
   out_6328431180555769297[370] = 0;
   out_6328431180555769297[371] = 0;
   out_6328431180555769297[372] = 0;
   out_6328431180555769297[373] = 0;
   out_6328431180555769297[374] = 1;
   out_6328431180555769297[375] = 0;
   out_6328431180555769297[376] = 0;
   out_6328431180555769297[377] = 0;
   out_6328431180555769297[378] = 0;
   out_6328431180555769297[379] = 0;
   out_6328431180555769297[380] = 0;
   out_6328431180555769297[381] = 0;
   out_6328431180555769297[382] = 0;
   out_6328431180555769297[383] = 0;
   out_6328431180555769297[384] = 0;
   out_6328431180555769297[385] = 0;
   out_6328431180555769297[386] = 0;
   out_6328431180555769297[387] = 0;
   out_6328431180555769297[388] = 0;
   out_6328431180555769297[389] = 0;
   out_6328431180555769297[390] = 0;
   out_6328431180555769297[391] = 0;
   out_6328431180555769297[392] = 0;
   out_6328431180555769297[393] = 0;
   out_6328431180555769297[394] = 0;
   out_6328431180555769297[395] = 0;
   out_6328431180555769297[396] = 1;
   out_6328431180555769297[397] = 0;
   out_6328431180555769297[398] = 0;
   out_6328431180555769297[399] = 0;
   out_6328431180555769297[400] = 0;
   out_6328431180555769297[401] = 0;
   out_6328431180555769297[402] = 0;
   out_6328431180555769297[403] = 0;
   out_6328431180555769297[404] = 0;
   out_6328431180555769297[405] = 0;
   out_6328431180555769297[406] = 0;
   out_6328431180555769297[407] = 0;
   out_6328431180555769297[408] = 0;
   out_6328431180555769297[409] = 0;
   out_6328431180555769297[410] = 0;
   out_6328431180555769297[411] = 0;
   out_6328431180555769297[412] = 0;
   out_6328431180555769297[413] = 0;
   out_6328431180555769297[414] = 0;
   out_6328431180555769297[415] = 0;
   out_6328431180555769297[416] = 0;
   out_6328431180555769297[417] = 0;
   out_6328431180555769297[418] = 1;
   out_6328431180555769297[419] = 0;
   out_6328431180555769297[420] = 0;
   out_6328431180555769297[421] = 0;
   out_6328431180555769297[422] = 0;
   out_6328431180555769297[423] = 0;
   out_6328431180555769297[424] = 0;
   out_6328431180555769297[425] = 0;
   out_6328431180555769297[426] = 0;
   out_6328431180555769297[427] = 0;
   out_6328431180555769297[428] = 0;
   out_6328431180555769297[429] = 0;
   out_6328431180555769297[430] = 0;
   out_6328431180555769297[431] = 0;
   out_6328431180555769297[432] = 0;
   out_6328431180555769297[433] = 0;
   out_6328431180555769297[434] = 0;
   out_6328431180555769297[435] = 0;
   out_6328431180555769297[436] = 0;
   out_6328431180555769297[437] = 0;
   out_6328431180555769297[438] = 0;
   out_6328431180555769297[439] = 0;
   out_6328431180555769297[440] = 1;
}
void h_4(double *state, double *unused, double *out_28415465931567147) {
   out_28415465931567147[0] = state[10] + state[13];
   out_28415465931567147[1] = state[11] + state[14];
   out_28415465931567147[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7924499476379241845) {
   out_7924499476379241845[0] = 0;
   out_7924499476379241845[1] = 0;
   out_7924499476379241845[2] = 0;
   out_7924499476379241845[3] = 0;
   out_7924499476379241845[4] = 0;
   out_7924499476379241845[5] = 0;
   out_7924499476379241845[6] = 0;
   out_7924499476379241845[7] = 0;
   out_7924499476379241845[8] = 0;
   out_7924499476379241845[9] = 0;
   out_7924499476379241845[10] = 1;
   out_7924499476379241845[11] = 0;
   out_7924499476379241845[12] = 0;
   out_7924499476379241845[13] = 1;
   out_7924499476379241845[14] = 0;
   out_7924499476379241845[15] = 0;
   out_7924499476379241845[16] = 0;
   out_7924499476379241845[17] = 0;
   out_7924499476379241845[18] = 0;
   out_7924499476379241845[19] = 0;
   out_7924499476379241845[20] = 0;
   out_7924499476379241845[21] = 0;
   out_7924499476379241845[22] = 0;
   out_7924499476379241845[23] = 0;
   out_7924499476379241845[24] = 0;
   out_7924499476379241845[25] = 0;
   out_7924499476379241845[26] = 0;
   out_7924499476379241845[27] = 0;
   out_7924499476379241845[28] = 0;
   out_7924499476379241845[29] = 0;
   out_7924499476379241845[30] = 0;
   out_7924499476379241845[31] = 0;
   out_7924499476379241845[32] = 0;
   out_7924499476379241845[33] = 1;
   out_7924499476379241845[34] = 0;
   out_7924499476379241845[35] = 0;
   out_7924499476379241845[36] = 1;
   out_7924499476379241845[37] = 0;
   out_7924499476379241845[38] = 0;
   out_7924499476379241845[39] = 0;
   out_7924499476379241845[40] = 0;
   out_7924499476379241845[41] = 0;
   out_7924499476379241845[42] = 0;
   out_7924499476379241845[43] = 0;
   out_7924499476379241845[44] = 0;
   out_7924499476379241845[45] = 0;
   out_7924499476379241845[46] = 0;
   out_7924499476379241845[47] = 0;
   out_7924499476379241845[48] = 0;
   out_7924499476379241845[49] = 0;
   out_7924499476379241845[50] = 0;
   out_7924499476379241845[51] = 0;
   out_7924499476379241845[52] = 0;
   out_7924499476379241845[53] = 0;
   out_7924499476379241845[54] = 0;
   out_7924499476379241845[55] = 0;
   out_7924499476379241845[56] = 1;
   out_7924499476379241845[57] = 0;
   out_7924499476379241845[58] = 0;
   out_7924499476379241845[59] = 1;
   out_7924499476379241845[60] = 0;
   out_7924499476379241845[61] = 0;
   out_7924499476379241845[62] = 0;
   out_7924499476379241845[63] = 0;
   out_7924499476379241845[64] = 0;
   out_7924499476379241845[65] = 0;
}
void h_9(double *state, double *unused, double *out_7591785345487952686) {
   out_7591785345487952686[0] = state[10];
   out_7591785345487952686[1] = state[11];
   out_7591785345487952686[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7683309829749651200) {
   out_7683309829749651200[0] = 0;
   out_7683309829749651200[1] = 0;
   out_7683309829749651200[2] = 0;
   out_7683309829749651200[3] = 0;
   out_7683309829749651200[4] = 0;
   out_7683309829749651200[5] = 0;
   out_7683309829749651200[6] = 0;
   out_7683309829749651200[7] = 0;
   out_7683309829749651200[8] = 0;
   out_7683309829749651200[9] = 0;
   out_7683309829749651200[10] = 1;
   out_7683309829749651200[11] = 0;
   out_7683309829749651200[12] = 0;
   out_7683309829749651200[13] = 0;
   out_7683309829749651200[14] = 0;
   out_7683309829749651200[15] = 0;
   out_7683309829749651200[16] = 0;
   out_7683309829749651200[17] = 0;
   out_7683309829749651200[18] = 0;
   out_7683309829749651200[19] = 0;
   out_7683309829749651200[20] = 0;
   out_7683309829749651200[21] = 0;
   out_7683309829749651200[22] = 0;
   out_7683309829749651200[23] = 0;
   out_7683309829749651200[24] = 0;
   out_7683309829749651200[25] = 0;
   out_7683309829749651200[26] = 0;
   out_7683309829749651200[27] = 0;
   out_7683309829749651200[28] = 0;
   out_7683309829749651200[29] = 0;
   out_7683309829749651200[30] = 0;
   out_7683309829749651200[31] = 0;
   out_7683309829749651200[32] = 0;
   out_7683309829749651200[33] = 1;
   out_7683309829749651200[34] = 0;
   out_7683309829749651200[35] = 0;
   out_7683309829749651200[36] = 0;
   out_7683309829749651200[37] = 0;
   out_7683309829749651200[38] = 0;
   out_7683309829749651200[39] = 0;
   out_7683309829749651200[40] = 0;
   out_7683309829749651200[41] = 0;
   out_7683309829749651200[42] = 0;
   out_7683309829749651200[43] = 0;
   out_7683309829749651200[44] = 0;
   out_7683309829749651200[45] = 0;
   out_7683309829749651200[46] = 0;
   out_7683309829749651200[47] = 0;
   out_7683309829749651200[48] = 0;
   out_7683309829749651200[49] = 0;
   out_7683309829749651200[50] = 0;
   out_7683309829749651200[51] = 0;
   out_7683309829749651200[52] = 0;
   out_7683309829749651200[53] = 0;
   out_7683309829749651200[54] = 0;
   out_7683309829749651200[55] = 0;
   out_7683309829749651200[56] = 1;
   out_7683309829749651200[57] = 0;
   out_7683309829749651200[58] = 0;
   out_7683309829749651200[59] = 0;
   out_7683309829749651200[60] = 0;
   out_7683309829749651200[61] = 0;
   out_7683309829749651200[62] = 0;
   out_7683309829749651200[63] = 0;
   out_7683309829749651200[64] = 0;
   out_7683309829749651200[65] = 0;
}
void h_10(double *state, double *unused, double *out_77538467729374005) {
   out_77538467729374005[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_77538467729374005[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_77538467729374005[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2161526107976246779) {
   out_2161526107976246779[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2161526107976246779[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2161526107976246779[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2161526107976246779[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2161526107976246779[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2161526107976246779[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2161526107976246779[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2161526107976246779[7] = 0;
   out_2161526107976246779[8] = 0;
   out_2161526107976246779[9] = 0;
   out_2161526107976246779[10] = 0;
   out_2161526107976246779[11] = 0;
   out_2161526107976246779[12] = 0;
   out_2161526107976246779[13] = 0;
   out_2161526107976246779[14] = 0;
   out_2161526107976246779[15] = 0;
   out_2161526107976246779[16] = 1;
   out_2161526107976246779[17] = 0;
   out_2161526107976246779[18] = 0;
   out_2161526107976246779[19] = 1;
   out_2161526107976246779[20] = 0;
   out_2161526107976246779[21] = 0;
   out_2161526107976246779[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2161526107976246779[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2161526107976246779[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2161526107976246779[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2161526107976246779[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2161526107976246779[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2161526107976246779[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2161526107976246779[29] = 0;
   out_2161526107976246779[30] = 0;
   out_2161526107976246779[31] = 0;
   out_2161526107976246779[32] = 0;
   out_2161526107976246779[33] = 0;
   out_2161526107976246779[34] = 0;
   out_2161526107976246779[35] = 0;
   out_2161526107976246779[36] = 0;
   out_2161526107976246779[37] = 0;
   out_2161526107976246779[38] = 0;
   out_2161526107976246779[39] = 1;
   out_2161526107976246779[40] = 0;
   out_2161526107976246779[41] = 0;
   out_2161526107976246779[42] = 1;
   out_2161526107976246779[43] = 0;
   out_2161526107976246779[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2161526107976246779[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2161526107976246779[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2161526107976246779[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2161526107976246779[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2161526107976246779[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2161526107976246779[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2161526107976246779[51] = 0;
   out_2161526107976246779[52] = 0;
   out_2161526107976246779[53] = 0;
   out_2161526107976246779[54] = 0;
   out_2161526107976246779[55] = 0;
   out_2161526107976246779[56] = 0;
   out_2161526107976246779[57] = 0;
   out_2161526107976246779[58] = 0;
   out_2161526107976246779[59] = 0;
   out_2161526107976246779[60] = 0;
   out_2161526107976246779[61] = 0;
   out_2161526107976246779[62] = 1;
   out_2161526107976246779[63] = 0;
   out_2161526107976246779[64] = 0;
   out_2161526107976246779[65] = 1;
}
void h_12(double *state, double *unused, double *out_5140514060197600805) {
   out_5140514060197600805[0] = state[0];
   out_5140514060197600805[1] = state[1];
   out_5140514060197600805[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2905043068347280050) {
   out_2905043068347280050[0] = 1;
   out_2905043068347280050[1] = 0;
   out_2905043068347280050[2] = 0;
   out_2905043068347280050[3] = 0;
   out_2905043068347280050[4] = 0;
   out_2905043068347280050[5] = 0;
   out_2905043068347280050[6] = 0;
   out_2905043068347280050[7] = 0;
   out_2905043068347280050[8] = 0;
   out_2905043068347280050[9] = 0;
   out_2905043068347280050[10] = 0;
   out_2905043068347280050[11] = 0;
   out_2905043068347280050[12] = 0;
   out_2905043068347280050[13] = 0;
   out_2905043068347280050[14] = 0;
   out_2905043068347280050[15] = 0;
   out_2905043068347280050[16] = 0;
   out_2905043068347280050[17] = 0;
   out_2905043068347280050[18] = 0;
   out_2905043068347280050[19] = 0;
   out_2905043068347280050[20] = 0;
   out_2905043068347280050[21] = 0;
   out_2905043068347280050[22] = 0;
   out_2905043068347280050[23] = 1;
   out_2905043068347280050[24] = 0;
   out_2905043068347280050[25] = 0;
   out_2905043068347280050[26] = 0;
   out_2905043068347280050[27] = 0;
   out_2905043068347280050[28] = 0;
   out_2905043068347280050[29] = 0;
   out_2905043068347280050[30] = 0;
   out_2905043068347280050[31] = 0;
   out_2905043068347280050[32] = 0;
   out_2905043068347280050[33] = 0;
   out_2905043068347280050[34] = 0;
   out_2905043068347280050[35] = 0;
   out_2905043068347280050[36] = 0;
   out_2905043068347280050[37] = 0;
   out_2905043068347280050[38] = 0;
   out_2905043068347280050[39] = 0;
   out_2905043068347280050[40] = 0;
   out_2905043068347280050[41] = 0;
   out_2905043068347280050[42] = 0;
   out_2905043068347280050[43] = 0;
   out_2905043068347280050[44] = 0;
   out_2905043068347280050[45] = 0;
   out_2905043068347280050[46] = 1;
   out_2905043068347280050[47] = 0;
   out_2905043068347280050[48] = 0;
   out_2905043068347280050[49] = 0;
   out_2905043068347280050[50] = 0;
   out_2905043068347280050[51] = 0;
   out_2905043068347280050[52] = 0;
   out_2905043068347280050[53] = 0;
   out_2905043068347280050[54] = 0;
   out_2905043068347280050[55] = 0;
   out_2905043068347280050[56] = 0;
   out_2905043068347280050[57] = 0;
   out_2905043068347280050[58] = 0;
   out_2905043068347280050[59] = 0;
   out_2905043068347280050[60] = 0;
   out_2905043068347280050[61] = 0;
   out_2905043068347280050[62] = 0;
   out_2905043068347280050[63] = 0;
   out_2905043068347280050[64] = 0;
   out_2905043068347280050[65] = 0;
}
void h_35(double *state, double *unused, double *out_5096424971374996650) {
   out_5096424971374996650[0] = state[7];
   out_5096424971374996650[1] = state[8];
   out_5096424971374996650[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4557837419006634469) {
   out_4557837419006634469[0] = 0;
   out_4557837419006634469[1] = 0;
   out_4557837419006634469[2] = 0;
   out_4557837419006634469[3] = 0;
   out_4557837419006634469[4] = 0;
   out_4557837419006634469[5] = 0;
   out_4557837419006634469[6] = 0;
   out_4557837419006634469[7] = 1;
   out_4557837419006634469[8] = 0;
   out_4557837419006634469[9] = 0;
   out_4557837419006634469[10] = 0;
   out_4557837419006634469[11] = 0;
   out_4557837419006634469[12] = 0;
   out_4557837419006634469[13] = 0;
   out_4557837419006634469[14] = 0;
   out_4557837419006634469[15] = 0;
   out_4557837419006634469[16] = 0;
   out_4557837419006634469[17] = 0;
   out_4557837419006634469[18] = 0;
   out_4557837419006634469[19] = 0;
   out_4557837419006634469[20] = 0;
   out_4557837419006634469[21] = 0;
   out_4557837419006634469[22] = 0;
   out_4557837419006634469[23] = 0;
   out_4557837419006634469[24] = 0;
   out_4557837419006634469[25] = 0;
   out_4557837419006634469[26] = 0;
   out_4557837419006634469[27] = 0;
   out_4557837419006634469[28] = 0;
   out_4557837419006634469[29] = 0;
   out_4557837419006634469[30] = 1;
   out_4557837419006634469[31] = 0;
   out_4557837419006634469[32] = 0;
   out_4557837419006634469[33] = 0;
   out_4557837419006634469[34] = 0;
   out_4557837419006634469[35] = 0;
   out_4557837419006634469[36] = 0;
   out_4557837419006634469[37] = 0;
   out_4557837419006634469[38] = 0;
   out_4557837419006634469[39] = 0;
   out_4557837419006634469[40] = 0;
   out_4557837419006634469[41] = 0;
   out_4557837419006634469[42] = 0;
   out_4557837419006634469[43] = 0;
   out_4557837419006634469[44] = 0;
   out_4557837419006634469[45] = 0;
   out_4557837419006634469[46] = 0;
   out_4557837419006634469[47] = 0;
   out_4557837419006634469[48] = 0;
   out_4557837419006634469[49] = 0;
   out_4557837419006634469[50] = 0;
   out_4557837419006634469[51] = 0;
   out_4557837419006634469[52] = 0;
   out_4557837419006634469[53] = 1;
   out_4557837419006634469[54] = 0;
   out_4557837419006634469[55] = 0;
   out_4557837419006634469[56] = 0;
   out_4557837419006634469[57] = 0;
   out_4557837419006634469[58] = 0;
   out_4557837419006634469[59] = 0;
   out_4557837419006634469[60] = 0;
   out_4557837419006634469[61] = 0;
   out_4557837419006634469[62] = 0;
   out_4557837419006634469[63] = 0;
   out_4557837419006634469[64] = 0;
   out_4557837419006634469[65] = 0;
}
void h_32(double *state, double *unused, double *out_7250233404591987997) {
   out_7250233404591987997[0] = state[3];
   out_7250233404591987997[1] = state[4];
   out_7250233404591987997[2] = state[5];
   out_7250233404591987997[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1243466953200978089) {
   out_1243466953200978089[0] = 0;
   out_1243466953200978089[1] = 0;
   out_1243466953200978089[2] = 0;
   out_1243466953200978089[3] = 1;
   out_1243466953200978089[4] = 0;
   out_1243466953200978089[5] = 0;
   out_1243466953200978089[6] = 0;
   out_1243466953200978089[7] = 0;
   out_1243466953200978089[8] = 0;
   out_1243466953200978089[9] = 0;
   out_1243466953200978089[10] = 0;
   out_1243466953200978089[11] = 0;
   out_1243466953200978089[12] = 0;
   out_1243466953200978089[13] = 0;
   out_1243466953200978089[14] = 0;
   out_1243466953200978089[15] = 0;
   out_1243466953200978089[16] = 0;
   out_1243466953200978089[17] = 0;
   out_1243466953200978089[18] = 0;
   out_1243466953200978089[19] = 0;
   out_1243466953200978089[20] = 0;
   out_1243466953200978089[21] = 0;
   out_1243466953200978089[22] = 0;
   out_1243466953200978089[23] = 0;
   out_1243466953200978089[24] = 0;
   out_1243466953200978089[25] = 0;
   out_1243466953200978089[26] = 1;
   out_1243466953200978089[27] = 0;
   out_1243466953200978089[28] = 0;
   out_1243466953200978089[29] = 0;
   out_1243466953200978089[30] = 0;
   out_1243466953200978089[31] = 0;
   out_1243466953200978089[32] = 0;
   out_1243466953200978089[33] = 0;
   out_1243466953200978089[34] = 0;
   out_1243466953200978089[35] = 0;
   out_1243466953200978089[36] = 0;
   out_1243466953200978089[37] = 0;
   out_1243466953200978089[38] = 0;
   out_1243466953200978089[39] = 0;
   out_1243466953200978089[40] = 0;
   out_1243466953200978089[41] = 0;
   out_1243466953200978089[42] = 0;
   out_1243466953200978089[43] = 0;
   out_1243466953200978089[44] = 0;
   out_1243466953200978089[45] = 0;
   out_1243466953200978089[46] = 0;
   out_1243466953200978089[47] = 0;
   out_1243466953200978089[48] = 0;
   out_1243466953200978089[49] = 1;
   out_1243466953200978089[50] = 0;
   out_1243466953200978089[51] = 0;
   out_1243466953200978089[52] = 0;
   out_1243466953200978089[53] = 0;
   out_1243466953200978089[54] = 0;
   out_1243466953200978089[55] = 0;
   out_1243466953200978089[56] = 0;
   out_1243466953200978089[57] = 0;
   out_1243466953200978089[58] = 0;
   out_1243466953200978089[59] = 0;
   out_1243466953200978089[60] = 0;
   out_1243466953200978089[61] = 0;
   out_1243466953200978089[62] = 0;
   out_1243466953200978089[63] = 0;
   out_1243466953200978089[64] = 0;
   out_1243466953200978089[65] = 0;
   out_1243466953200978089[66] = 0;
   out_1243466953200978089[67] = 0;
   out_1243466953200978089[68] = 0;
   out_1243466953200978089[69] = 0;
   out_1243466953200978089[70] = 0;
   out_1243466953200978089[71] = 0;
   out_1243466953200978089[72] = 1;
   out_1243466953200978089[73] = 0;
   out_1243466953200978089[74] = 0;
   out_1243466953200978089[75] = 0;
   out_1243466953200978089[76] = 0;
   out_1243466953200978089[77] = 0;
   out_1243466953200978089[78] = 0;
   out_1243466953200978089[79] = 0;
   out_1243466953200978089[80] = 0;
   out_1243466953200978089[81] = 0;
   out_1243466953200978089[82] = 0;
   out_1243466953200978089[83] = 0;
   out_1243466953200978089[84] = 0;
   out_1243466953200978089[85] = 0;
   out_1243466953200978089[86] = 0;
   out_1243466953200978089[87] = 0;
}
void h_13(double *state, double *unused, double *out_3309697738183265489) {
   out_3309697738183265489[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3309697738183265489[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3309697738183265489[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6233964999209152223) {
   out_6233964999209152223[0] = 0;
   out_6233964999209152223[1] = 0;
   out_6233964999209152223[2] = 0;
   out_6233964999209152223[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6233964999209152223[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6233964999209152223[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6233964999209152223[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6233964999209152223[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6233964999209152223[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6233964999209152223[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6233964999209152223[10] = 0;
   out_6233964999209152223[11] = 0;
   out_6233964999209152223[12] = 0;
   out_6233964999209152223[13] = 0;
   out_6233964999209152223[14] = 0;
   out_6233964999209152223[15] = 0;
   out_6233964999209152223[16] = 0;
   out_6233964999209152223[17] = 0;
   out_6233964999209152223[18] = 0;
   out_6233964999209152223[19] = 0;
   out_6233964999209152223[20] = 0;
   out_6233964999209152223[21] = 0;
   out_6233964999209152223[22] = 0;
   out_6233964999209152223[23] = 0;
   out_6233964999209152223[24] = 0;
   out_6233964999209152223[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6233964999209152223[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6233964999209152223[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6233964999209152223[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6233964999209152223[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6233964999209152223[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6233964999209152223[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6233964999209152223[32] = 0;
   out_6233964999209152223[33] = 0;
   out_6233964999209152223[34] = 0;
   out_6233964999209152223[35] = 0;
   out_6233964999209152223[36] = 0;
   out_6233964999209152223[37] = 0;
   out_6233964999209152223[38] = 0;
   out_6233964999209152223[39] = 0;
   out_6233964999209152223[40] = 0;
   out_6233964999209152223[41] = 0;
   out_6233964999209152223[42] = 0;
   out_6233964999209152223[43] = 0;
   out_6233964999209152223[44] = 0;
   out_6233964999209152223[45] = 0;
   out_6233964999209152223[46] = 0;
   out_6233964999209152223[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6233964999209152223[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6233964999209152223[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6233964999209152223[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6233964999209152223[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6233964999209152223[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6233964999209152223[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6233964999209152223[54] = 0;
   out_6233964999209152223[55] = 0;
   out_6233964999209152223[56] = 0;
   out_6233964999209152223[57] = 0;
   out_6233964999209152223[58] = 0;
   out_6233964999209152223[59] = 0;
   out_6233964999209152223[60] = 0;
   out_6233964999209152223[61] = 0;
   out_6233964999209152223[62] = 0;
   out_6233964999209152223[63] = 0;
   out_6233964999209152223[64] = 0;
   out_6233964999209152223[65] = 0;
}
void h_14(double *state, double *unused, double *out_7591785345487952686) {
   out_7591785345487952686[0] = state[10];
   out_7591785345487952686[1] = state[11];
   out_7591785345487952686[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7683309829749651200) {
   out_7683309829749651200[0] = 0;
   out_7683309829749651200[1] = 0;
   out_7683309829749651200[2] = 0;
   out_7683309829749651200[3] = 0;
   out_7683309829749651200[4] = 0;
   out_7683309829749651200[5] = 0;
   out_7683309829749651200[6] = 0;
   out_7683309829749651200[7] = 0;
   out_7683309829749651200[8] = 0;
   out_7683309829749651200[9] = 0;
   out_7683309829749651200[10] = 1;
   out_7683309829749651200[11] = 0;
   out_7683309829749651200[12] = 0;
   out_7683309829749651200[13] = 0;
   out_7683309829749651200[14] = 0;
   out_7683309829749651200[15] = 0;
   out_7683309829749651200[16] = 0;
   out_7683309829749651200[17] = 0;
   out_7683309829749651200[18] = 0;
   out_7683309829749651200[19] = 0;
   out_7683309829749651200[20] = 0;
   out_7683309829749651200[21] = 0;
   out_7683309829749651200[22] = 0;
   out_7683309829749651200[23] = 0;
   out_7683309829749651200[24] = 0;
   out_7683309829749651200[25] = 0;
   out_7683309829749651200[26] = 0;
   out_7683309829749651200[27] = 0;
   out_7683309829749651200[28] = 0;
   out_7683309829749651200[29] = 0;
   out_7683309829749651200[30] = 0;
   out_7683309829749651200[31] = 0;
   out_7683309829749651200[32] = 0;
   out_7683309829749651200[33] = 1;
   out_7683309829749651200[34] = 0;
   out_7683309829749651200[35] = 0;
   out_7683309829749651200[36] = 0;
   out_7683309829749651200[37] = 0;
   out_7683309829749651200[38] = 0;
   out_7683309829749651200[39] = 0;
   out_7683309829749651200[40] = 0;
   out_7683309829749651200[41] = 0;
   out_7683309829749651200[42] = 0;
   out_7683309829749651200[43] = 0;
   out_7683309829749651200[44] = 0;
   out_7683309829749651200[45] = 0;
   out_7683309829749651200[46] = 0;
   out_7683309829749651200[47] = 0;
   out_7683309829749651200[48] = 0;
   out_7683309829749651200[49] = 0;
   out_7683309829749651200[50] = 0;
   out_7683309829749651200[51] = 0;
   out_7683309829749651200[52] = 0;
   out_7683309829749651200[53] = 0;
   out_7683309829749651200[54] = 0;
   out_7683309829749651200[55] = 0;
   out_7683309829749651200[56] = 1;
   out_7683309829749651200[57] = 0;
   out_7683309829749651200[58] = 0;
   out_7683309829749651200[59] = 0;
   out_7683309829749651200[60] = 0;
   out_7683309829749651200[61] = 0;
   out_7683309829749651200[62] = 0;
   out_7683309829749651200[63] = 0;
   out_7683309829749651200[64] = 0;
   out_7683309829749651200[65] = 0;
}
void h_33(double *state, double *unused, double *out_1052640795815345304) {
   out_1052640795815345304[0] = state[16];
   out_1052640795815345304[1] = state[17];
   out_1052640795815345304[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1407280414367776865) {
   out_1407280414367776865[0] = 0;
   out_1407280414367776865[1] = 0;
   out_1407280414367776865[2] = 0;
   out_1407280414367776865[3] = 0;
   out_1407280414367776865[4] = 0;
   out_1407280414367776865[5] = 0;
   out_1407280414367776865[6] = 0;
   out_1407280414367776865[7] = 0;
   out_1407280414367776865[8] = 0;
   out_1407280414367776865[9] = 0;
   out_1407280414367776865[10] = 0;
   out_1407280414367776865[11] = 0;
   out_1407280414367776865[12] = 0;
   out_1407280414367776865[13] = 0;
   out_1407280414367776865[14] = 0;
   out_1407280414367776865[15] = 0;
   out_1407280414367776865[16] = 1;
   out_1407280414367776865[17] = 0;
   out_1407280414367776865[18] = 0;
   out_1407280414367776865[19] = 0;
   out_1407280414367776865[20] = 0;
   out_1407280414367776865[21] = 0;
   out_1407280414367776865[22] = 0;
   out_1407280414367776865[23] = 0;
   out_1407280414367776865[24] = 0;
   out_1407280414367776865[25] = 0;
   out_1407280414367776865[26] = 0;
   out_1407280414367776865[27] = 0;
   out_1407280414367776865[28] = 0;
   out_1407280414367776865[29] = 0;
   out_1407280414367776865[30] = 0;
   out_1407280414367776865[31] = 0;
   out_1407280414367776865[32] = 0;
   out_1407280414367776865[33] = 0;
   out_1407280414367776865[34] = 0;
   out_1407280414367776865[35] = 0;
   out_1407280414367776865[36] = 0;
   out_1407280414367776865[37] = 0;
   out_1407280414367776865[38] = 0;
   out_1407280414367776865[39] = 1;
   out_1407280414367776865[40] = 0;
   out_1407280414367776865[41] = 0;
   out_1407280414367776865[42] = 0;
   out_1407280414367776865[43] = 0;
   out_1407280414367776865[44] = 0;
   out_1407280414367776865[45] = 0;
   out_1407280414367776865[46] = 0;
   out_1407280414367776865[47] = 0;
   out_1407280414367776865[48] = 0;
   out_1407280414367776865[49] = 0;
   out_1407280414367776865[50] = 0;
   out_1407280414367776865[51] = 0;
   out_1407280414367776865[52] = 0;
   out_1407280414367776865[53] = 0;
   out_1407280414367776865[54] = 0;
   out_1407280414367776865[55] = 0;
   out_1407280414367776865[56] = 0;
   out_1407280414367776865[57] = 0;
   out_1407280414367776865[58] = 0;
   out_1407280414367776865[59] = 0;
   out_1407280414367776865[60] = 0;
   out_1407280414367776865[61] = 0;
   out_1407280414367776865[62] = 1;
   out_1407280414367776865[63] = 0;
   out_1407280414367776865[64] = 0;
   out_1407280414367776865[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6574843044755662276) {
  H(in_vec, out_6574843044755662276);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1575979086870887545) {
  err_fun(nom_x, delta_x, out_1575979086870887545);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6506776409850105096) {
  inv_err_fun(nom_x, true_x, out_6506776409850105096);
}
void live_H_mod_fun(double *state, double *out_5856833465841616276) {
  H_mod_fun(state, out_5856833465841616276);
}
void live_f_fun(double *state, double dt, double *out_2159418628523068413) {
  f_fun(state,  dt, out_2159418628523068413);
}
void live_F_fun(double *state, double dt, double *out_6328431180555769297) {
  F_fun(state,  dt, out_6328431180555769297);
}
void live_h_4(double *state, double *unused, double *out_28415465931567147) {
  h_4(state, unused, out_28415465931567147);
}
void live_H_4(double *state, double *unused, double *out_7924499476379241845) {
  H_4(state, unused, out_7924499476379241845);
}
void live_h_9(double *state, double *unused, double *out_7591785345487952686) {
  h_9(state, unused, out_7591785345487952686);
}
void live_H_9(double *state, double *unused, double *out_7683309829749651200) {
  H_9(state, unused, out_7683309829749651200);
}
void live_h_10(double *state, double *unused, double *out_77538467729374005) {
  h_10(state, unused, out_77538467729374005);
}
void live_H_10(double *state, double *unused, double *out_2161526107976246779) {
  H_10(state, unused, out_2161526107976246779);
}
void live_h_12(double *state, double *unused, double *out_5140514060197600805) {
  h_12(state, unused, out_5140514060197600805);
}
void live_H_12(double *state, double *unused, double *out_2905043068347280050) {
  H_12(state, unused, out_2905043068347280050);
}
void live_h_35(double *state, double *unused, double *out_5096424971374996650) {
  h_35(state, unused, out_5096424971374996650);
}
void live_H_35(double *state, double *unused, double *out_4557837419006634469) {
  H_35(state, unused, out_4557837419006634469);
}
void live_h_32(double *state, double *unused, double *out_7250233404591987997) {
  h_32(state, unused, out_7250233404591987997);
}
void live_H_32(double *state, double *unused, double *out_1243466953200978089) {
  H_32(state, unused, out_1243466953200978089);
}
void live_h_13(double *state, double *unused, double *out_3309697738183265489) {
  h_13(state, unused, out_3309697738183265489);
}
void live_H_13(double *state, double *unused, double *out_6233964999209152223) {
  H_13(state, unused, out_6233964999209152223);
}
void live_h_14(double *state, double *unused, double *out_7591785345487952686) {
  h_14(state, unused, out_7591785345487952686);
}
void live_H_14(double *state, double *unused, double *out_7683309829749651200) {
  H_14(state, unused, out_7683309829749651200);
}
void live_h_33(double *state, double *unused, double *out_1052640795815345304) {
  h_33(state, unused, out_1052640795815345304);
}
void live_H_33(double *state, double *unused, double *out_1407280414367776865) {
  H_33(state, unused, out_1407280414367776865);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
