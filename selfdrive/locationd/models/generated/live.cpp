#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5015465238650468081) {
   out_5015465238650468081[0] = 0;
   out_5015465238650468081[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5015465238650468081[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5015465238650468081[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5015465238650468081[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5015465238650468081[5] = -sin(in_vec[1]);
   out_5015465238650468081[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5015465238650468081[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5015465238650468081[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5015465238650468081[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5015465238650468081[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5015465238650468081[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5015465238650468081[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5015465238650468081[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5015465238650468081[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5015465238650468081[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5015465238650468081[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5015465238650468081[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5824433810176356910) {
   out_5824433810176356910[0] = delta_x[0] + nom_x[0];
   out_5824433810176356910[1] = delta_x[1] + nom_x[1];
   out_5824433810176356910[2] = delta_x[2] + nom_x[2];
   out_5824433810176356910[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5824433810176356910[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5824433810176356910[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5824433810176356910[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5824433810176356910[7] = delta_x[6] + nom_x[7];
   out_5824433810176356910[8] = delta_x[7] + nom_x[8];
   out_5824433810176356910[9] = delta_x[8] + nom_x[9];
   out_5824433810176356910[10] = delta_x[9] + nom_x[10];
   out_5824433810176356910[11] = delta_x[10] + nom_x[11];
   out_5824433810176356910[12] = delta_x[11] + nom_x[12];
   out_5824433810176356910[13] = delta_x[12] + nom_x[13];
   out_5824433810176356910[14] = delta_x[13] + nom_x[14];
   out_5824433810176356910[15] = delta_x[14] + nom_x[15];
   out_5824433810176356910[16] = delta_x[15] + nom_x[16];
   out_5824433810176356910[17] = delta_x[16] + nom_x[17];
   out_5824433810176356910[18] = delta_x[17] + nom_x[18];
   out_5824433810176356910[19] = delta_x[18] + nom_x[19];
   out_5824433810176356910[20] = delta_x[19] + nom_x[20];
   out_5824433810176356910[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4059851042701556511) {
   out_4059851042701556511[0] = -nom_x[0] + true_x[0];
   out_4059851042701556511[1] = -nom_x[1] + true_x[1];
   out_4059851042701556511[2] = -nom_x[2] + true_x[2];
   out_4059851042701556511[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4059851042701556511[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4059851042701556511[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4059851042701556511[6] = -nom_x[7] + true_x[7];
   out_4059851042701556511[7] = -nom_x[8] + true_x[8];
   out_4059851042701556511[8] = -nom_x[9] + true_x[9];
   out_4059851042701556511[9] = -nom_x[10] + true_x[10];
   out_4059851042701556511[10] = -nom_x[11] + true_x[11];
   out_4059851042701556511[11] = -nom_x[12] + true_x[12];
   out_4059851042701556511[12] = -nom_x[13] + true_x[13];
   out_4059851042701556511[13] = -nom_x[14] + true_x[14];
   out_4059851042701556511[14] = -nom_x[15] + true_x[15];
   out_4059851042701556511[15] = -nom_x[16] + true_x[16];
   out_4059851042701556511[16] = -nom_x[17] + true_x[17];
   out_4059851042701556511[17] = -nom_x[18] + true_x[18];
   out_4059851042701556511[18] = -nom_x[19] + true_x[19];
   out_4059851042701556511[19] = -nom_x[20] + true_x[20];
   out_4059851042701556511[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4710545414619891339) {
   out_4710545414619891339[0] = 1.0;
   out_4710545414619891339[1] = 0;
   out_4710545414619891339[2] = 0;
   out_4710545414619891339[3] = 0;
   out_4710545414619891339[4] = 0;
   out_4710545414619891339[5] = 0;
   out_4710545414619891339[6] = 0;
   out_4710545414619891339[7] = 0;
   out_4710545414619891339[8] = 0;
   out_4710545414619891339[9] = 0;
   out_4710545414619891339[10] = 0;
   out_4710545414619891339[11] = 0;
   out_4710545414619891339[12] = 0;
   out_4710545414619891339[13] = 0;
   out_4710545414619891339[14] = 0;
   out_4710545414619891339[15] = 0;
   out_4710545414619891339[16] = 0;
   out_4710545414619891339[17] = 0;
   out_4710545414619891339[18] = 0;
   out_4710545414619891339[19] = 0;
   out_4710545414619891339[20] = 0;
   out_4710545414619891339[21] = 0;
   out_4710545414619891339[22] = 1.0;
   out_4710545414619891339[23] = 0;
   out_4710545414619891339[24] = 0;
   out_4710545414619891339[25] = 0;
   out_4710545414619891339[26] = 0;
   out_4710545414619891339[27] = 0;
   out_4710545414619891339[28] = 0;
   out_4710545414619891339[29] = 0;
   out_4710545414619891339[30] = 0;
   out_4710545414619891339[31] = 0;
   out_4710545414619891339[32] = 0;
   out_4710545414619891339[33] = 0;
   out_4710545414619891339[34] = 0;
   out_4710545414619891339[35] = 0;
   out_4710545414619891339[36] = 0;
   out_4710545414619891339[37] = 0;
   out_4710545414619891339[38] = 0;
   out_4710545414619891339[39] = 0;
   out_4710545414619891339[40] = 0;
   out_4710545414619891339[41] = 0;
   out_4710545414619891339[42] = 0;
   out_4710545414619891339[43] = 0;
   out_4710545414619891339[44] = 1.0;
   out_4710545414619891339[45] = 0;
   out_4710545414619891339[46] = 0;
   out_4710545414619891339[47] = 0;
   out_4710545414619891339[48] = 0;
   out_4710545414619891339[49] = 0;
   out_4710545414619891339[50] = 0;
   out_4710545414619891339[51] = 0;
   out_4710545414619891339[52] = 0;
   out_4710545414619891339[53] = 0;
   out_4710545414619891339[54] = 0;
   out_4710545414619891339[55] = 0;
   out_4710545414619891339[56] = 0;
   out_4710545414619891339[57] = 0;
   out_4710545414619891339[58] = 0;
   out_4710545414619891339[59] = 0;
   out_4710545414619891339[60] = 0;
   out_4710545414619891339[61] = 0;
   out_4710545414619891339[62] = 0;
   out_4710545414619891339[63] = 0;
   out_4710545414619891339[64] = 0;
   out_4710545414619891339[65] = 0;
   out_4710545414619891339[66] = -0.5*state[4];
   out_4710545414619891339[67] = -0.5*state[5];
   out_4710545414619891339[68] = -0.5*state[6];
   out_4710545414619891339[69] = 0;
   out_4710545414619891339[70] = 0;
   out_4710545414619891339[71] = 0;
   out_4710545414619891339[72] = 0;
   out_4710545414619891339[73] = 0;
   out_4710545414619891339[74] = 0;
   out_4710545414619891339[75] = 0;
   out_4710545414619891339[76] = 0;
   out_4710545414619891339[77] = 0;
   out_4710545414619891339[78] = 0;
   out_4710545414619891339[79] = 0;
   out_4710545414619891339[80] = 0;
   out_4710545414619891339[81] = 0;
   out_4710545414619891339[82] = 0;
   out_4710545414619891339[83] = 0;
   out_4710545414619891339[84] = 0;
   out_4710545414619891339[85] = 0;
   out_4710545414619891339[86] = 0;
   out_4710545414619891339[87] = 0.5*state[3];
   out_4710545414619891339[88] = 0.5*state[6];
   out_4710545414619891339[89] = -0.5*state[5];
   out_4710545414619891339[90] = 0;
   out_4710545414619891339[91] = 0;
   out_4710545414619891339[92] = 0;
   out_4710545414619891339[93] = 0;
   out_4710545414619891339[94] = 0;
   out_4710545414619891339[95] = 0;
   out_4710545414619891339[96] = 0;
   out_4710545414619891339[97] = 0;
   out_4710545414619891339[98] = 0;
   out_4710545414619891339[99] = 0;
   out_4710545414619891339[100] = 0;
   out_4710545414619891339[101] = 0;
   out_4710545414619891339[102] = 0;
   out_4710545414619891339[103] = 0;
   out_4710545414619891339[104] = 0;
   out_4710545414619891339[105] = 0;
   out_4710545414619891339[106] = 0;
   out_4710545414619891339[107] = 0;
   out_4710545414619891339[108] = -0.5*state[6];
   out_4710545414619891339[109] = 0.5*state[3];
   out_4710545414619891339[110] = 0.5*state[4];
   out_4710545414619891339[111] = 0;
   out_4710545414619891339[112] = 0;
   out_4710545414619891339[113] = 0;
   out_4710545414619891339[114] = 0;
   out_4710545414619891339[115] = 0;
   out_4710545414619891339[116] = 0;
   out_4710545414619891339[117] = 0;
   out_4710545414619891339[118] = 0;
   out_4710545414619891339[119] = 0;
   out_4710545414619891339[120] = 0;
   out_4710545414619891339[121] = 0;
   out_4710545414619891339[122] = 0;
   out_4710545414619891339[123] = 0;
   out_4710545414619891339[124] = 0;
   out_4710545414619891339[125] = 0;
   out_4710545414619891339[126] = 0;
   out_4710545414619891339[127] = 0;
   out_4710545414619891339[128] = 0;
   out_4710545414619891339[129] = 0.5*state[5];
   out_4710545414619891339[130] = -0.5*state[4];
   out_4710545414619891339[131] = 0.5*state[3];
   out_4710545414619891339[132] = 0;
   out_4710545414619891339[133] = 0;
   out_4710545414619891339[134] = 0;
   out_4710545414619891339[135] = 0;
   out_4710545414619891339[136] = 0;
   out_4710545414619891339[137] = 0;
   out_4710545414619891339[138] = 0;
   out_4710545414619891339[139] = 0;
   out_4710545414619891339[140] = 0;
   out_4710545414619891339[141] = 0;
   out_4710545414619891339[142] = 0;
   out_4710545414619891339[143] = 0;
   out_4710545414619891339[144] = 0;
   out_4710545414619891339[145] = 0;
   out_4710545414619891339[146] = 0;
   out_4710545414619891339[147] = 0;
   out_4710545414619891339[148] = 0;
   out_4710545414619891339[149] = 0;
   out_4710545414619891339[150] = 0;
   out_4710545414619891339[151] = 0;
   out_4710545414619891339[152] = 0;
   out_4710545414619891339[153] = 1.0;
   out_4710545414619891339[154] = 0;
   out_4710545414619891339[155] = 0;
   out_4710545414619891339[156] = 0;
   out_4710545414619891339[157] = 0;
   out_4710545414619891339[158] = 0;
   out_4710545414619891339[159] = 0;
   out_4710545414619891339[160] = 0;
   out_4710545414619891339[161] = 0;
   out_4710545414619891339[162] = 0;
   out_4710545414619891339[163] = 0;
   out_4710545414619891339[164] = 0;
   out_4710545414619891339[165] = 0;
   out_4710545414619891339[166] = 0;
   out_4710545414619891339[167] = 0;
   out_4710545414619891339[168] = 0;
   out_4710545414619891339[169] = 0;
   out_4710545414619891339[170] = 0;
   out_4710545414619891339[171] = 0;
   out_4710545414619891339[172] = 0;
   out_4710545414619891339[173] = 0;
   out_4710545414619891339[174] = 0;
   out_4710545414619891339[175] = 1.0;
   out_4710545414619891339[176] = 0;
   out_4710545414619891339[177] = 0;
   out_4710545414619891339[178] = 0;
   out_4710545414619891339[179] = 0;
   out_4710545414619891339[180] = 0;
   out_4710545414619891339[181] = 0;
   out_4710545414619891339[182] = 0;
   out_4710545414619891339[183] = 0;
   out_4710545414619891339[184] = 0;
   out_4710545414619891339[185] = 0;
   out_4710545414619891339[186] = 0;
   out_4710545414619891339[187] = 0;
   out_4710545414619891339[188] = 0;
   out_4710545414619891339[189] = 0;
   out_4710545414619891339[190] = 0;
   out_4710545414619891339[191] = 0;
   out_4710545414619891339[192] = 0;
   out_4710545414619891339[193] = 0;
   out_4710545414619891339[194] = 0;
   out_4710545414619891339[195] = 0;
   out_4710545414619891339[196] = 0;
   out_4710545414619891339[197] = 1.0;
   out_4710545414619891339[198] = 0;
   out_4710545414619891339[199] = 0;
   out_4710545414619891339[200] = 0;
   out_4710545414619891339[201] = 0;
   out_4710545414619891339[202] = 0;
   out_4710545414619891339[203] = 0;
   out_4710545414619891339[204] = 0;
   out_4710545414619891339[205] = 0;
   out_4710545414619891339[206] = 0;
   out_4710545414619891339[207] = 0;
   out_4710545414619891339[208] = 0;
   out_4710545414619891339[209] = 0;
   out_4710545414619891339[210] = 0;
   out_4710545414619891339[211] = 0;
   out_4710545414619891339[212] = 0;
   out_4710545414619891339[213] = 0;
   out_4710545414619891339[214] = 0;
   out_4710545414619891339[215] = 0;
   out_4710545414619891339[216] = 0;
   out_4710545414619891339[217] = 0;
   out_4710545414619891339[218] = 0;
   out_4710545414619891339[219] = 1.0;
   out_4710545414619891339[220] = 0;
   out_4710545414619891339[221] = 0;
   out_4710545414619891339[222] = 0;
   out_4710545414619891339[223] = 0;
   out_4710545414619891339[224] = 0;
   out_4710545414619891339[225] = 0;
   out_4710545414619891339[226] = 0;
   out_4710545414619891339[227] = 0;
   out_4710545414619891339[228] = 0;
   out_4710545414619891339[229] = 0;
   out_4710545414619891339[230] = 0;
   out_4710545414619891339[231] = 0;
   out_4710545414619891339[232] = 0;
   out_4710545414619891339[233] = 0;
   out_4710545414619891339[234] = 0;
   out_4710545414619891339[235] = 0;
   out_4710545414619891339[236] = 0;
   out_4710545414619891339[237] = 0;
   out_4710545414619891339[238] = 0;
   out_4710545414619891339[239] = 0;
   out_4710545414619891339[240] = 0;
   out_4710545414619891339[241] = 1.0;
   out_4710545414619891339[242] = 0;
   out_4710545414619891339[243] = 0;
   out_4710545414619891339[244] = 0;
   out_4710545414619891339[245] = 0;
   out_4710545414619891339[246] = 0;
   out_4710545414619891339[247] = 0;
   out_4710545414619891339[248] = 0;
   out_4710545414619891339[249] = 0;
   out_4710545414619891339[250] = 0;
   out_4710545414619891339[251] = 0;
   out_4710545414619891339[252] = 0;
   out_4710545414619891339[253] = 0;
   out_4710545414619891339[254] = 0;
   out_4710545414619891339[255] = 0;
   out_4710545414619891339[256] = 0;
   out_4710545414619891339[257] = 0;
   out_4710545414619891339[258] = 0;
   out_4710545414619891339[259] = 0;
   out_4710545414619891339[260] = 0;
   out_4710545414619891339[261] = 0;
   out_4710545414619891339[262] = 0;
   out_4710545414619891339[263] = 1.0;
   out_4710545414619891339[264] = 0;
   out_4710545414619891339[265] = 0;
   out_4710545414619891339[266] = 0;
   out_4710545414619891339[267] = 0;
   out_4710545414619891339[268] = 0;
   out_4710545414619891339[269] = 0;
   out_4710545414619891339[270] = 0;
   out_4710545414619891339[271] = 0;
   out_4710545414619891339[272] = 0;
   out_4710545414619891339[273] = 0;
   out_4710545414619891339[274] = 0;
   out_4710545414619891339[275] = 0;
   out_4710545414619891339[276] = 0;
   out_4710545414619891339[277] = 0;
   out_4710545414619891339[278] = 0;
   out_4710545414619891339[279] = 0;
   out_4710545414619891339[280] = 0;
   out_4710545414619891339[281] = 0;
   out_4710545414619891339[282] = 0;
   out_4710545414619891339[283] = 0;
   out_4710545414619891339[284] = 0;
   out_4710545414619891339[285] = 1.0;
   out_4710545414619891339[286] = 0;
   out_4710545414619891339[287] = 0;
   out_4710545414619891339[288] = 0;
   out_4710545414619891339[289] = 0;
   out_4710545414619891339[290] = 0;
   out_4710545414619891339[291] = 0;
   out_4710545414619891339[292] = 0;
   out_4710545414619891339[293] = 0;
   out_4710545414619891339[294] = 0;
   out_4710545414619891339[295] = 0;
   out_4710545414619891339[296] = 0;
   out_4710545414619891339[297] = 0;
   out_4710545414619891339[298] = 0;
   out_4710545414619891339[299] = 0;
   out_4710545414619891339[300] = 0;
   out_4710545414619891339[301] = 0;
   out_4710545414619891339[302] = 0;
   out_4710545414619891339[303] = 0;
   out_4710545414619891339[304] = 0;
   out_4710545414619891339[305] = 0;
   out_4710545414619891339[306] = 0;
   out_4710545414619891339[307] = 1.0;
   out_4710545414619891339[308] = 0;
   out_4710545414619891339[309] = 0;
   out_4710545414619891339[310] = 0;
   out_4710545414619891339[311] = 0;
   out_4710545414619891339[312] = 0;
   out_4710545414619891339[313] = 0;
   out_4710545414619891339[314] = 0;
   out_4710545414619891339[315] = 0;
   out_4710545414619891339[316] = 0;
   out_4710545414619891339[317] = 0;
   out_4710545414619891339[318] = 0;
   out_4710545414619891339[319] = 0;
   out_4710545414619891339[320] = 0;
   out_4710545414619891339[321] = 0;
   out_4710545414619891339[322] = 0;
   out_4710545414619891339[323] = 0;
   out_4710545414619891339[324] = 0;
   out_4710545414619891339[325] = 0;
   out_4710545414619891339[326] = 0;
   out_4710545414619891339[327] = 0;
   out_4710545414619891339[328] = 0;
   out_4710545414619891339[329] = 1.0;
   out_4710545414619891339[330] = 0;
   out_4710545414619891339[331] = 0;
   out_4710545414619891339[332] = 0;
   out_4710545414619891339[333] = 0;
   out_4710545414619891339[334] = 0;
   out_4710545414619891339[335] = 0;
   out_4710545414619891339[336] = 0;
   out_4710545414619891339[337] = 0;
   out_4710545414619891339[338] = 0;
   out_4710545414619891339[339] = 0;
   out_4710545414619891339[340] = 0;
   out_4710545414619891339[341] = 0;
   out_4710545414619891339[342] = 0;
   out_4710545414619891339[343] = 0;
   out_4710545414619891339[344] = 0;
   out_4710545414619891339[345] = 0;
   out_4710545414619891339[346] = 0;
   out_4710545414619891339[347] = 0;
   out_4710545414619891339[348] = 0;
   out_4710545414619891339[349] = 0;
   out_4710545414619891339[350] = 0;
   out_4710545414619891339[351] = 1.0;
   out_4710545414619891339[352] = 0;
   out_4710545414619891339[353] = 0;
   out_4710545414619891339[354] = 0;
   out_4710545414619891339[355] = 0;
   out_4710545414619891339[356] = 0;
   out_4710545414619891339[357] = 0;
   out_4710545414619891339[358] = 0;
   out_4710545414619891339[359] = 0;
   out_4710545414619891339[360] = 0;
   out_4710545414619891339[361] = 0;
   out_4710545414619891339[362] = 0;
   out_4710545414619891339[363] = 0;
   out_4710545414619891339[364] = 0;
   out_4710545414619891339[365] = 0;
   out_4710545414619891339[366] = 0;
   out_4710545414619891339[367] = 0;
   out_4710545414619891339[368] = 0;
   out_4710545414619891339[369] = 0;
   out_4710545414619891339[370] = 0;
   out_4710545414619891339[371] = 0;
   out_4710545414619891339[372] = 0;
   out_4710545414619891339[373] = 1.0;
   out_4710545414619891339[374] = 0;
   out_4710545414619891339[375] = 0;
   out_4710545414619891339[376] = 0;
   out_4710545414619891339[377] = 0;
   out_4710545414619891339[378] = 0;
   out_4710545414619891339[379] = 0;
   out_4710545414619891339[380] = 0;
   out_4710545414619891339[381] = 0;
   out_4710545414619891339[382] = 0;
   out_4710545414619891339[383] = 0;
   out_4710545414619891339[384] = 0;
   out_4710545414619891339[385] = 0;
   out_4710545414619891339[386] = 0;
   out_4710545414619891339[387] = 0;
   out_4710545414619891339[388] = 0;
   out_4710545414619891339[389] = 0;
   out_4710545414619891339[390] = 0;
   out_4710545414619891339[391] = 0;
   out_4710545414619891339[392] = 0;
   out_4710545414619891339[393] = 0;
   out_4710545414619891339[394] = 0;
   out_4710545414619891339[395] = 1.0;
   out_4710545414619891339[396] = 0;
   out_4710545414619891339[397] = 0;
   out_4710545414619891339[398] = 0;
   out_4710545414619891339[399] = 0;
   out_4710545414619891339[400] = 0;
   out_4710545414619891339[401] = 0;
   out_4710545414619891339[402] = 0;
   out_4710545414619891339[403] = 0;
   out_4710545414619891339[404] = 0;
   out_4710545414619891339[405] = 0;
   out_4710545414619891339[406] = 0;
   out_4710545414619891339[407] = 0;
   out_4710545414619891339[408] = 0;
   out_4710545414619891339[409] = 0;
   out_4710545414619891339[410] = 0;
   out_4710545414619891339[411] = 0;
   out_4710545414619891339[412] = 0;
   out_4710545414619891339[413] = 0;
   out_4710545414619891339[414] = 0;
   out_4710545414619891339[415] = 0;
   out_4710545414619891339[416] = 0;
   out_4710545414619891339[417] = 1.0;
   out_4710545414619891339[418] = 0;
   out_4710545414619891339[419] = 0;
   out_4710545414619891339[420] = 0;
   out_4710545414619891339[421] = 0;
   out_4710545414619891339[422] = 0;
   out_4710545414619891339[423] = 0;
   out_4710545414619891339[424] = 0;
   out_4710545414619891339[425] = 0;
   out_4710545414619891339[426] = 0;
   out_4710545414619891339[427] = 0;
   out_4710545414619891339[428] = 0;
   out_4710545414619891339[429] = 0;
   out_4710545414619891339[430] = 0;
   out_4710545414619891339[431] = 0;
   out_4710545414619891339[432] = 0;
   out_4710545414619891339[433] = 0;
   out_4710545414619891339[434] = 0;
   out_4710545414619891339[435] = 0;
   out_4710545414619891339[436] = 0;
   out_4710545414619891339[437] = 0;
   out_4710545414619891339[438] = 0;
   out_4710545414619891339[439] = 1.0;
   out_4710545414619891339[440] = 0;
   out_4710545414619891339[441] = 0;
   out_4710545414619891339[442] = 0;
   out_4710545414619891339[443] = 0;
   out_4710545414619891339[444] = 0;
   out_4710545414619891339[445] = 0;
   out_4710545414619891339[446] = 0;
   out_4710545414619891339[447] = 0;
   out_4710545414619891339[448] = 0;
   out_4710545414619891339[449] = 0;
   out_4710545414619891339[450] = 0;
   out_4710545414619891339[451] = 0;
   out_4710545414619891339[452] = 0;
   out_4710545414619891339[453] = 0;
   out_4710545414619891339[454] = 0;
   out_4710545414619891339[455] = 0;
   out_4710545414619891339[456] = 0;
   out_4710545414619891339[457] = 0;
   out_4710545414619891339[458] = 0;
   out_4710545414619891339[459] = 0;
   out_4710545414619891339[460] = 0;
   out_4710545414619891339[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8662695085446243012) {
   out_8662695085446243012[0] = dt*state[7] + state[0];
   out_8662695085446243012[1] = dt*state[8] + state[1];
   out_8662695085446243012[2] = dt*state[9] + state[2];
   out_8662695085446243012[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8662695085446243012[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8662695085446243012[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8662695085446243012[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8662695085446243012[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8662695085446243012[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8662695085446243012[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8662695085446243012[10] = state[10];
   out_8662695085446243012[11] = state[11];
   out_8662695085446243012[12] = state[12];
   out_8662695085446243012[13] = state[13];
   out_8662695085446243012[14] = state[14];
   out_8662695085446243012[15] = state[15];
   out_8662695085446243012[16] = state[16];
   out_8662695085446243012[17] = state[17];
   out_8662695085446243012[18] = state[18];
   out_8662695085446243012[19] = state[19];
   out_8662695085446243012[20] = state[20];
   out_8662695085446243012[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2007569535825338613) {
   out_2007569535825338613[0] = 1;
   out_2007569535825338613[1] = 0;
   out_2007569535825338613[2] = 0;
   out_2007569535825338613[3] = 0;
   out_2007569535825338613[4] = 0;
   out_2007569535825338613[5] = 0;
   out_2007569535825338613[6] = dt;
   out_2007569535825338613[7] = 0;
   out_2007569535825338613[8] = 0;
   out_2007569535825338613[9] = 0;
   out_2007569535825338613[10] = 0;
   out_2007569535825338613[11] = 0;
   out_2007569535825338613[12] = 0;
   out_2007569535825338613[13] = 0;
   out_2007569535825338613[14] = 0;
   out_2007569535825338613[15] = 0;
   out_2007569535825338613[16] = 0;
   out_2007569535825338613[17] = 0;
   out_2007569535825338613[18] = 0;
   out_2007569535825338613[19] = 0;
   out_2007569535825338613[20] = 0;
   out_2007569535825338613[21] = 0;
   out_2007569535825338613[22] = 1;
   out_2007569535825338613[23] = 0;
   out_2007569535825338613[24] = 0;
   out_2007569535825338613[25] = 0;
   out_2007569535825338613[26] = 0;
   out_2007569535825338613[27] = 0;
   out_2007569535825338613[28] = dt;
   out_2007569535825338613[29] = 0;
   out_2007569535825338613[30] = 0;
   out_2007569535825338613[31] = 0;
   out_2007569535825338613[32] = 0;
   out_2007569535825338613[33] = 0;
   out_2007569535825338613[34] = 0;
   out_2007569535825338613[35] = 0;
   out_2007569535825338613[36] = 0;
   out_2007569535825338613[37] = 0;
   out_2007569535825338613[38] = 0;
   out_2007569535825338613[39] = 0;
   out_2007569535825338613[40] = 0;
   out_2007569535825338613[41] = 0;
   out_2007569535825338613[42] = 0;
   out_2007569535825338613[43] = 0;
   out_2007569535825338613[44] = 1;
   out_2007569535825338613[45] = 0;
   out_2007569535825338613[46] = 0;
   out_2007569535825338613[47] = 0;
   out_2007569535825338613[48] = 0;
   out_2007569535825338613[49] = 0;
   out_2007569535825338613[50] = dt;
   out_2007569535825338613[51] = 0;
   out_2007569535825338613[52] = 0;
   out_2007569535825338613[53] = 0;
   out_2007569535825338613[54] = 0;
   out_2007569535825338613[55] = 0;
   out_2007569535825338613[56] = 0;
   out_2007569535825338613[57] = 0;
   out_2007569535825338613[58] = 0;
   out_2007569535825338613[59] = 0;
   out_2007569535825338613[60] = 0;
   out_2007569535825338613[61] = 0;
   out_2007569535825338613[62] = 0;
   out_2007569535825338613[63] = 0;
   out_2007569535825338613[64] = 0;
   out_2007569535825338613[65] = 0;
   out_2007569535825338613[66] = 1;
   out_2007569535825338613[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2007569535825338613[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2007569535825338613[69] = 0;
   out_2007569535825338613[70] = 0;
   out_2007569535825338613[71] = 0;
   out_2007569535825338613[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2007569535825338613[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2007569535825338613[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2007569535825338613[75] = 0;
   out_2007569535825338613[76] = 0;
   out_2007569535825338613[77] = 0;
   out_2007569535825338613[78] = 0;
   out_2007569535825338613[79] = 0;
   out_2007569535825338613[80] = 0;
   out_2007569535825338613[81] = 0;
   out_2007569535825338613[82] = 0;
   out_2007569535825338613[83] = 0;
   out_2007569535825338613[84] = 0;
   out_2007569535825338613[85] = 0;
   out_2007569535825338613[86] = 0;
   out_2007569535825338613[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2007569535825338613[88] = 1;
   out_2007569535825338613[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2007569535825338613[90] = 0;
   out_2007569535825338613[91] = 0;
   out_2007569535825338613[92] = 0;
   out_2007569535825338613[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2007569535825338613[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2007569535825338613[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2007569535825338613[96] = 0;
   out_2007569535825338613[97] = 0;
   out_2007569535825338613[98] = 0;
   out_2007569535825338613[99] = 0;
   out_2007569535825338613[100] = 0;
   out_2007569535825338613[101] = 0;
   out_2007569535825338613[102] = 0;
   out_2007569535825338613[103] = 0;
   out_2007569535825338613[104] = 0;
   out_2007569535825338613[105] = 0;
   out_2007569535825338613[106] = 0;
   out_2007569535825338613[107] = 0;
   out_2007569535825338613[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2007569535825338613[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2007569535825338613[110] = 1;
   out_2007569535825338613[111] = 0;
   out_2007569535825338613[112] = 0;
   out_2007569535825338613[113] = 0;
   out_2007569535825338613[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2007569535825338613[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2007569535825338613[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2007569535825338613[117] = 0;
   out_2007569535825338613[118] = 0;
   out_2007569535825338613[119] = 0;
   out_2007569535825338613[120] = 0;
   out_2007569535825338613[121] = 0;
   out_2007569535825338613[122] = 0;
   out_2007569535825338613[123] = 0;
   out_2007569535825338613[124] = 0;
   out_2007569535825338613[125] = 0;
   out_2007569535825338613[126] = 0;
   out_2007569535825338613[127] = 0;
   out_2007569535825338613[128] = 0;
   out_2007569535825338613[129] = 0;
   out_2007569535825338613[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2007569535825338613[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2007569535825338613[132] = 1;
   out_2007569535825338613[133] = 0;
   out_2007569535825338613[134] = 0;
   out_2007569535825338613[135] = 0;
   out_2007569535825338613[136] = 0;
   out_2007569535825338613[137] = 0;
   out_2007569535825338613[138] = 0;
   out_2007569535825338613[139] = 0;
   out_2007569535825338613[140] = 0;
   out_2007569535825338613[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2007569535825338613[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2007569535825338613[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2007569535825338613[144] = 0;
   out_2007569535825338613[145] = 0;
   out_2007569535825338613[146] = 0;
   out_2007569535825338613[147] = 0;
   out_2007569535825338613[148] = 0;
   out_2007569535825338613[149] = 0;
   out_2007569535825338613[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2007569535825338613[151] = 0;
   out_2007569535825338613[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2007569535825338613[153] = 0;
   out_2007569535825338613[154] = 1;
   out_2007569535825338613[155] = 0;
   out_2007569535825338613[156] = 0;
   out_2007569535825338613[157] = 0;
   out_2007569535825338613[158] = 0;
   out_2007569535825338613[159] = 0;
   out_2007569535825338613[160] = 0;
   out_2007569535825338613[161] = 0;
   out_2007569535825338613[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2007569535825338613[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2007569535825338613[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2007569535825338613[165] = 0;
   out_2007569535825338613[166] = 0;
   out_2007569535825338613[167] = 0;
   out_2007569535825338613[168] = 0;
   out_2007569535825338613[169] = 0;
   out_2007569535825338613[170] = 0;
   out_2007569535825338613[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2007569535825338613[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2007569535825338613[173] = 0;
   out_2007569535825338613[174] = 0;
   out_2007569535825338613[175] = 0;
   out_2007569535825338613[176] = 1;
   out_2007569535825338613[177] = 0;
   out_2007569535825338613[178] = 0;
   out_2007569535825338613[179] = 0;
   out_2007569535825338613[180] = 0;
   out_2007569535825338613[181] = 0;
   out_2007569535825338613[182] = 0;
   out_2007569535825338613[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2007569535825338613[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2007569535825338613[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2007569535825338613[186] = 0;
   out_2007569535825338613[187] = 0;
   out_2007569535825338613[188] = 0;
   out_2007569535825338613[189] = 0;
   out_2007569535825338613[190] = 0;
   out_2007569535825338613[191] = 0;
   out_2007569535825338613[192] = 0;
   out_2007569535825338613[193] = 0;
   out_2007569535825338613[194] = 0;
   out_2007569535825338613[195] = 0;
   out_2007569535825338613[196] = 0;
   out_2007569535825338613[197] = 0;
   out_2007569535825338613[198] = 1;
   out_2007569535825338613[199] = 0;
   out_2007569535825338613[200] = 0;
   out_2007569535825338613[201] = 0;
   out_2007569535825338613[202] = 0;
   out_2007569535825338613[203] = 0;
   out_2007569535825338613[204] = 0;
   out_2007569535825338613[205] = 0;
   out_2007569535825338613[206] = 0;
   out_2007569535825338613[207] = 0;
   out_2007569535825338613[208] = 0;
   out_2007569535825338613[209] = 0;
   out_2007569535825338613[210] = 0;
   out_2007569535825338613[211] = 0;
   out_2007569535825338613[212] = 0;
   out_2007569535825338613[213] = 0;
   out_2007569535825338613[214] = 0;
   out_2007569535825338613[215] = 0;
   out_2007569535825338613[216] = 0;
   out_2007569535825338613[217] = 0;
   out_2007569535825338613[218] = 0;
   out_2007569535825338613[219] = 0;
   out_2007569535825338613[220] = 1;
   out_2007569535825338613[221] = 0;
   out_2007569535825338613[222] = 0;
   out_2007569535825338613[223] = 0;
   out_2007569535825338613[224] = 0;
   out_2007569535825338613[225] = 0;
   out_2007569535825338613[226] = 0;
   out_2007569535825338613[227] = 0;
   out_2007569535825338613[228] = 0;
   out_2007569535825338613[229] = 0;
   out_2007569535825338613[230] = 0;
   out_2007569535825338613[231] = 0;
   out_2007569535825338613[232] = 0;
   out_2007569535825338613[233] = 0;
   out_2007569535825338613[234] = 0;
   out_2007569535825338613[235] = 0;
   out_2007569535825338613[236] = 0;
   out_2007569535825338613[237] = 0;
   out_2007569535825338613[238] = 0;
   out_2007569535825338613[239] = 0;
   out_2007569535825338613[240] = 0;
   out_2007569535825338613[241] = 0;
   out_2007569535825338613[242] = 1;
   out_2007569535825338613[243] = 0;
   out_2007569535825338613[244] = 0;
   out_2007569535825338613[245] = 0;
   out_2007569535825338613[246] = 0;
   out_2007569535825338613[247] = 0;
   out_2007569535825338613[248] = 0;
   out_2007569535825338613[249] = 0;
   out_2007569535825338613[250] = 0;
   out_2007569535825338613[251] = 0;
   out_2007569535825338613[252] = 0;
   out_2007569535825338613[253] = 0;
   out_2007569535825338613[254] = 0;
   out_2007569535825338613[255] = 0;
   out_2007569535825338613[256] = 0;
   out_2007569535825338613[257] = 0;
   out_2007569535825338613[258] = 0;
   out_2007569535825338613[259] = 0;
   out_2007569535825338613[260] = 0;
   out_2007569535825338613[261] = 0;
   out_2007569535825338613[262] = 0;
   out_2007569535825338613[263] = 0;
   out_2007569535825338613[264] = 1;
   out_2007569535825338613[265] = 0;
   out_2007569535825338613[266] = 0;
   out_2007569535825338613[267] = 0;
   out_2007569535825338613[268] = 0;
   out_2007569535825338613[269] = 0;
   out_2007569535825338613[270] = 0;
   out_2007569535825338613[271] = 0;
   out_2007569535825338613[272] = 0;
   out_2007569535825338613[273] = 0;
   out_2007569535825338613[274] = 0;
   out_2007569535825338613[275] = 0;
   out_2007569535825338613[276] = 0;
   out_2007569535825338613[277] = 0;
   out_2007569535825338613[278] = 0;
   out_2007569535825338613[279] = 0;
   out_2007569535825338613[280] = 0;
   out_2007569535825338613[281] = 0;
   out_2007569535825338613[282] = 0;
   out_2007569535825338613[283] = 0;
   out_2007569535825338613[284] = 0;
   out_2007569535825338613[285] = 0;
   out_2007569535825338613[286] = 1;
   out_2007569535825338613[287] = 0;
   out_2007569535825338613[288] = 0;
   out_2007569535825338613[289] = 0;
   out_2007569535825338613[290] = 0;
   out_2007569535825338613[291] = 0;
   out_2007569535825338613[292] = 0;
   out_2007569535825338613[293] = 0;
   out_2007569535825338613[294] = 0;
   out_2007569535825338613[295] = 0;
   out_2007569535825338613[296] = 0;
   out_2007569535825338613[297] = 0;
   out_2007569535825338613[298] = 0;
   out_2007569535825338613[299] = 0;
   out_2007569535825338613[300] = 0;
   out_2007569535825338613[301] = 0;
   out_2007569535825338613[302] = 0;
   out_2007569535825338613[303] = 0;
   out_2007569535825338613[304] = 0;
   out_2007569535825338613[305] = 0;
   out_2007569535825338613[306] = 0;
   out_2007569535825338613[307] = 0;
   out_2007569535825338613[308] = 1;
   out_2007569535825338613[309] = 0;
   out_2007569535825338613[310] = 0;
   out_2007569535825338613[311] = 0;
   out_2007569535825338613[312] = 0;
   out_2007569535825338613[313] = 0;
   out_2007569535825338613[314] = 0;
   out_2007569535825338613[315] = 0;
   out_2007569535825338613[316] = 0;
   out_2007569535825338613[317] = 0;
   out_2007569535825338613[318] = 0;
   out_2007569535825338613[319] = 0;
   out_2007569535825338613[320] = 0;
   out_2007569535825338613[321] = 0;
   out_2007569535825338613[322] = 0;
   out_2007569535825338613[323] = 0;
   out_2007569535825338613[324] = 0;
   out_2007569535825338613[325] = 0;
   out_2007569535825338613[326] = 0;
   out_2007569535825338613[327] = 0;
   out_2007569535825338613[328] = 0;
   out_2007569535825338613[329] = 0;
   out_2007569535825338613[330] = 1;
   out_2007569535825338613[331] = 0;
   out_2007569535825338613[332] = 0;
   out_2007569535825338613[333] = 0;
   out_2007569535825338613[334] = 0;
   out_2007569535825338613[335] = 0;
   out_2007569535825338613[336] = 0;
   out_2007569535825338613[337] = 0;
   out_2007569535825338613[338] = 0;
   out_2007569535825338613[339] = 0;
   out_2007569535825338613[340] = 0;
   out_2007569535825338613[341] = 0;
   out_2007569535825338613[342] = 0;
   out_2007569535825338613[343] = 0;
   out_2007569535825338613[344] = 0;
   out_2007569535825338613[345] = 0;
   out_2007569535825338613[346] = 0;
   out_2007569535825338613[347] = 0;
   out_2007569535825338613[348] = 0;
   out_2007569535825338613[349] = 0;
   out_2007569535825338613[350] = 0;
   out_2007569535825338613[351] = 0;
   out_2007569535825338613[352] = 1;
   out_2007569535825338613[353] = 0;
   out_2007569535825338613[354] = 0;
   out_2007569535825338613[355] = 0;
   out_2007569535825338613[356] = 0;
   out_2007569535825338613[357] = 0;
   out_2007569535825338613[358] = 0;
   out_2007569535825338613[359] = 0;
   out_2007569535825338613[360] = 0;
   out_2007569535825338613[361] = 0;
   out_2007569535825338613[362] = 0;
   out_2007569535825338613[363] = 0;
   out_2007569535825338613[364] = 0;
   out_2007569535825338613[365] = 0;
   out_2007569535825338613[366] = 0;
   out_2007569535825338613[367] = 0;
   out_2007569535825338613[368] = 0;
   out_2007569535825338613[369] = 0;
   out_2007569535825338613[370] = 0;
   out_2007569535825338613[371] = 0;
   out_2007569535825338613[372] = 0;
   out_2007569535825338613[373] = 0;
   out_2007569535825338613[374] = 1;
   out_2007569535825338613[375] = 0;
   out_2007569535825338613[376] = 0;
   out_2007569535825338613[377] = 0;
   out_2007569535825338613[378] = 0;
   out_2007569535825338613[379] = 0;
   out_2007569535825338613[380] = 0;
   out_2007569535825338613[381] = 0;
   out_2007569535825338613[382] = 0;
   out_2007569535825338613[383] = 0;
   out_2007569535825338613[384] = 0;
   out_2007569535825338613[385] = 0;
   out_2007569535825338613[386] = 0;
   out_2007569535825338613[387] = 0;
   out_2007569535825338613[388] = 0;
   out_2007569535825338613[389] = 0;
   out_2007569535825338613[390] = 0;
   out_2007569535825338613[391] = 0;
   out_2007569535825338613[392] = 0;
   out_2007569535825338613[393] = 0;
   out_2007569535825338613[394] = 0;
   out_2007569535825338613[395] = 0;
   out_2007569535825338613[396] = 1;
   out_2007569535825338613[397] = 0;
   out_2007569535825338613[398] = 0;
   out_2007569535825338613[399] = 0;
   out_2007569535825338613[400] = 0;
   out_2007569535825338613[401] = 0;
   out_2007569535825338613[402] = 0;
   out_2007569535825338613[403] = 0;
   out_2007569535825338613[404] = 0;
   out_2007569535825338613[405] = 0;
   out_2007569535825338613[406] = 0;
   out_2007569535825338613[407] = 0;
   out_2007569535825338613[408] = 0;
   out_2007569535825338613[409] = 0;
   out_2007569535825338613[410] = 0;
   out_2007569535825338613[411] = 0;
   out_2007569535825338613[412] = 0;
   out_2007569535825338613[413] = 0;
   out_2007569535825338613[414] = 0;
   out_2007569535825338613[415] = 0;
   out_2007569535825338613[416] = 0;
   out_2007569535825338613[417] = 0;
   out_2007569535825338613[418] = 1;
   out_2007569535825338613[419] = 0;
   out_2007569535825338613[420] = 0;
   out_2007569535825338613[421] = 0;
   out_2007569535825338613[422] = 0;
   out_2007569535825338613[423] = 0;
   out_2007569535825338613[424] = 0;
   out_2007569535825338613[425] = 0;
   out_2007569535825338613[426] = 0;
   out_2007569535825338613[427] = 0;
   out_2007569535825338613[428] = 0;
   out_2007569535825338613[429] = 0;
   out_2007569535825338613[430] = 0;
   out_2007569535825338613[431] = 0;
   out_2007569535825338613[432] = 0;
   out_2007569535825338613[433] = 0;
   out_2007569535825338613[434] = 0;
   out_2007569535825338613[435] = 0;
   out_2007569535825338613[436] = 0;
   out_2007569535825338613[437] = 0;
   out_2007569535825338613[438] = 0;
   out_2007569535825338613[439] = 0;
   out_2007569535825338613[440] = 1;
}
void h_4(double *state, double *unused, double *out_8117044963495096876) {
   out_8117044963495096876[0] = state[10] + state[13];
   out_8117044963495096876[1] = state[11] + state[14];
   out_8117044963495096876[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3996264805459263269) {
   out_3996264805459263269[0] = 0;
   out_3996264805459263269[1] = 0;
   out_3996264805459263269[2] = 0;
   out_3996264805459263269[3] = 0;
   out_3996264805459263269[4] = 0;
   out_3996264805459263269[5] = 0;
   out_3996264805459263269[6] = 0;
   out_3996264805459263269[7] = 0;
   out_3996264805459263269[8] = 0;
   out_3996264805459263269[9] = 0;
   out_3996264805459263269[10] = 1;
   out_3996264805459263269[11] = 0;
   out_3996264805459263269[12] = 0;
   out_3996264805459263269[13] = 1;
   out_3996264805459263269[14] = 0;
   out_3996264805459263269[15] = 0;
   out_3996264805459263269[16] = 0;
   out_3996264805459263269[17] = 0;
   out_3996264805459263269[18] = 0;
   out_3996264805459263269[19] = 0;
   out_3996264805459263269[20] = 0;
   out_3996264805459263269[21] = 0;
   out_3996264805459263269[22] = 0;
   out_3996264805459263269[23] = 0;
   out_3996264805459263269[24] = 0;
   out_3996264805459263269[25] = 0;
   out_3996264805459263269[26] = 0;
   out_3996264805459263269[27] = 0;
   out_3996264805459263269[28] = 0;
   out_3996264805459263269[29] = 0;
   out_3996264805459263269[30] = 0;
   out_3996264805459263269[31] = 0;
   out_3996264805459263269[32] = 0;
   out_3996264805459263269[33] = 1;
   out_3996264805459263269[34] = 0;
   out_3996264805459263269[35] = 0;
   out_3996264805459263269[36] = 1;
   out_3996264805459263269[37] = 0;
   out_3996264805459263269[38] = 0;
   out_3996264805459263269[39] = 0;
   out_3996264805459263269[40] = 0;
   out_3996264805459263269[41] = 0;
   out_3996264805459263269[42] = 0;
   out_3996264805459263269[43] = 0;
   out_3996264805459263269[44] = 0;
   out_3996264805459263269[45] = 0;
   out_3996264805459263269[46] = 0;
   out_3996264805459263269[47] = 0;
   out_3996264805459263269[48] = 0;
   out_3996264805459263269[49] = 0;
   out_3996264805459263269[50] = 0;
   out_3996264805459263269[51] = 0;
   out_3996264805459263269[52] = 0;
   out_3996264805459263269[53] = 0;
   out_3996264805459263269[54] = 0;
   out_3996264805459263269[55] = 0;
   out_3996264805459263269[56] = 1;
   out_3996264805459263269[57] = 0;
   out_3996264805459263269[58] = 0;
   out_3996264805459263269[59] = 1;
   out_3996264805459263269[60] = 0;
   out_3996264805459263269[61] = 0;
   out_3996264805459263269[62] = 0;
   out_3996264805459263269[63] = 0;
   out_3996264805459263269[64] = 0;
   out_3996264805459263269[65] = 0;
}
void h_9(double *state, double *unused, double *out_8101051777655745798) {
   out_8101051777655745798[0] = state[10];
   out_8101051777655745798[1] = state[11];
   out_8101051777655745798[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1107403253179183927) {
   out_1107403253179183927[0] = 0;
   out_1107403253179183927[1] = 0;
   out_1107403253179183927[2] = 0;
   out_1107403253179183927[3] = 0;
   out_1107403253179183927[4] = 0;
   out_1107403253179183927[5] = 0;
   out_1107403253179183927[6] = 0;
   out_1107403253179183927[7] = 0;
   out_1107403253179183927[8] = 0;
   out_1107403253179183927[9] = 0;
   out_1107403253179183927[10] = 1;
   out_1107403253179183927[11] = 0;
   out_1107403253179183927[12] = 0;
   out_1107403253179183927[13] = 0;
   out_1107403253179183927[14] = 0;
   out_1107403253179183927[15] = 0;
   out_1107403253179183927[16] = 0;
   out_1107403253179183927[17] = 0;
   out_1107403253179183927[18] = 0;
   out_1107403253179183927[19] = 0;
   out_1107403253179183927[20] = 0;
   out_1107403253179183927[21] = 0;
   out_1107403253179183927[22] = 0;
   out_1107403253179183927[23] = 0;
   out_1107403253179183927[24] = 0;
   out_1107403253179183927[25] = 0;
   out_1107403253179183927[26] = 0;
   out_1107403253179183927[27] = 0;
   out_1107403253179183927[28] = 0;
   out_1107403253179183927[29] = 0;
   out_1107403253179183927[30] = 0;
   out_1107403253179183927[31] = 0;
   out_1107403253179183927[32] = 0;
   out_1107403253179183927[33] = 1;
   out_1107403253179183927[34] = 0;
   out_1107403253179183927[35] = 0;
   out_1107403253179183927[36] = 0;
   out_1107403253179183927[37] = 0;
   out_1107403253179183927[38] = 0;
   out_1107403253179183927[39] = 0;
   out_1107403253179183927[40] = 0;
   out_1107403253179183927[41] = 0;
   out_1107403253179183927[42] = 0;
   out_1107403253179183927[43] = 0;
   out_1107403253179183927[44] = 0;
   out_1107403253179183927[45] = 0;
   out_1107403253179183927[46] = 0;
   out_1107403253179183927[47] = 0;
   out_1107403253179183927[48] = 0;
   out_1107403253179183927[49] = 0;
   out_1107403253179183927[50] = 0;
   out_1107403253179183927[51] = 0;
   out_1107403253179183927[52] = 0;
   out_1107403253179183927[53] = 0;
   out_1107403253179183927[54] = 0;
   out_1107403253179183927[55] = 0;
   out_1107403253179183927[56] = 1;
   out_1107403253179183927[57] = 0;
   out_1107403253179183927[58] = 0;
   out_1107403253179183927[59] = 0;
   out_1107403253179183927[60] = 0;
   out_1107403253179183927[61] = 0;
   out_1107403253179183927[62] = 0;
   out_1107403253179183927[63] = 0;
   out_1107403253179183927[64] = 0;
   out_1107403253179183927[65] = 0;
}
void h_10(double *state, double *unused, double *out_7605337253302135628) {
   out_7605337253302135628[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7605337253302135628[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7605337253302135628[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1130019112268262903) {
   out_1130019112268262903[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1130019112268262903[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1130019112268262903[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1130019112268262903[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1130019112268262903[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1130019112268262903[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1130019112268262903[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1130019112268262903[7] = 0;
   out_1130019112268262903[8] = 0;
   out_1130019112268262903[9] = 0;
   out_1130019112268262903[10] = 0;
   out_1130019112268262903[11] = 0;
   out_1130019112268262903[12] = 0;
   out_1130019112268262903[13] = 0;
   out_1130019112268262903[14] = 0;
   out_1130019112268262903[15] = 0;
   out_1130019112268262903[16] = 1;
   out_1130019112268262903[17] = 0;
   out_1130019112268262903[18] = 0;
   out_1130019112268262903[19] = 1;
   out_1130019112268262903[20] = 0;
   out_1130019112268262903[21] = 0;
   out_1130019112268262903[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1130019112268262903[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1130019112268262903[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1130019112268262903[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1130019112268262903[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1130019112268262903[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1130019112268262903[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1130019112268262903[29] = 0;
   out_1130019112268262903[30] = 0;
   out_1130019112268262903[31] = 0;
   out_1130019112268262903[32] = 0;
   out_1130019112268262903[33] = 0;
   out_1130019112268262903[34] = 0;
   out_1130019112268262903[35] = 0;
   out_1130019112268262903[36] = 0;
   out_1130019112268262903[37] = 0;
   out_1130019112268262903[38] = 0;
   out_1130019112268262903[39] = 1;
   out_1130019112268262903[40] = 0;
   out_1130019112268262903[41] = 0;
   out_1130019112268262903[42] = 1;
   out_1130019112268262903[43] = 0;
   out_1130019112268262903[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1130019112268262903[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1130019112268262903[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1130019112268262903[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1130019112268262903[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1130019112268262903[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1130019112268262903[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1130019112268262903[51] = 0;
   out_1130019112268262903[52] = 0;
   out_1130019112268262903[53] = 0;
   out_1130019112268262903[54] = 0;
   out_1130019112268262903[55] = 0;
   out_1130019112268262903[56] = 0;
   out_1130019112268262903[57] = 0;
   out_1130019112268262903[58] = 0;
   out_1130019112268262903[59] = 0;
   out_1130019112268262903[60] = 0;
   out_1130019112268262903[61] = 0;
   out_1130019112268262903[62] = 1;
   out_1130019112268262903[63] = 0;
   out_1130019112268262903[64] = 0;
   out_1130019112268262903[65] = 1;
}
void h_12(double *state, double *unused, double *out_4351979789937965025) {
   out_4351979789937965025[0] = state[0];
   out_4351979789937965025[1] = state[1];
   out_4351979789937965025[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3375165780411669602) {
   out_3375165780411669602[0] = 1;
   out_3375165780411669602[1] = 0;
   out_3375165780411669602[2] = 0;
   out_3375165780411669602[3] = 0;
   out_3375165780411669602[4] = 0;
   out_3375165780411669602[5] = 0;
   out_3375165780411669602[6] = 0;
   out_3375165780411669602[7] = 0;
   out_3375165780411669602[8] = 0;
   out_3375165780411669602[9] = 0;
   out_3375165780411669602[10] = 0;
   out_3375165780411669602[11] = 0;
   out_3375165780411669602[12] = 0;
   out_3375165780411669602[13] = 0;
   out_3375165780411669602[14] = 0;
   out_3375165780411669602[15] = 0;
   out_3375165780411669602[16] = 0;
   out_3375165780411669602[17] = 0;
   out_3375165780411669602[18] = 0;
   out_3375165780411669602[19] = 0;
   out_3375165780411669602[20] = 0;
   out_3375165780411669602[21] = 0;
   out_3375165780411669602[22] = 0;
   out_3375165780411669602[23] = 1;
   out_3375165780411669602[24] = 0;
   out_3375165780411669602[25] = 0;
   out_3375165780411669602[26] = 0;
   out_3375165780411669602[27] = 0;
   out_3375165780411669602[28] = 0;
   out_3375165780411669602[29] = 0;
   out_3375165780411669602[30] = 0;
   out_3375165780411669602[31] = 0;
   out_3375165780411669602[32] = 0;
   out_3375165780411669602[33] = 0;
   out_3375165780411669602[34] = 0;
   out_3375165780411669602[35] = 0;
   out_3375165780411669602[36] = 0;
   out_3375165780411669602[37] = 0;
   out_3375165780411669602[38] = 0;
   out_3375165780411669602[39] = 0;
   out_3375165780411669602[40] = 0;
   out_3375165780411669602[41] = 0;
   out_3375165780411669602[42] = 0;
   out_3375165780411669602[43] = 0;
   out_3375165780411669602[44] = 0;
   out_3375165780411669602[45] = 0;
   out_3375165780411669602[46] = 1;
   out_3375165780411669602[47] = 0;
   out_3375165780411669602[48] = 0;
   out_3375165780411669602[49] = 0;
   out_3375165780411669602[50] = 0;
   out_3375165780411669602[51] = 0;
   out_3375165780411669602[52] = 0;
   out_3375165780411669602[53] = 0;
   out_3375165780411669602[54] = 0;
   out_3375165780411669602[55] = 0;
   out_3375165780411669602[56] = 0;
   out_3375165780411669602[57] = 0;
   out_3375165780411669602[58] = 0;
   out_3375165780411669602[59] = 0;
   out_3375165780411669602[60] = 0;
   out_3375165780411669602[61] = 0;
   out_3375165780411669602[62] = 0;
   out_3375165780411669602[63] = 0;
   out_3375165780411669602[64] = 0;
   out_3375165780411669602[65] = 0;
}
void h_35(double *state, double *unused, double *out_8363245642099122728) {
   out_8363245642099122728[0] = state[7];
   out_8363245642099122728[1] = state[8];
   out_8363245642099122728[2] = state[9];
}
void H_35(double *state, double *unused, double *out_629602748086655893) {
   out_629602748086655893[0] = 0;
   out_629602748086655893[1] = 0;
   out_629602748086655893[2] = 0;
   out_629602748086655893[3] = 0;
   out_629602748086655893[4] = 0;
   out_629602748086655893[5] = 0;
   out_629602748086655893[6] = 0;
   out_629602748086655893[7] = 1;
   out_629602748086655893[8] = 0;
   out_629602748086655893[9] = 0;
   out_629602748086655893[10] = 0;
   out_629602748086655893[11] = 0;
   out_629602748086655893[12] = 0;
   out_629602748086655893[13] = 0;
   out_629602748086655893[14] = 0;
   out_629602748086655893[15] = 0;
   out_629602748086655893[16] = 0;
   out_629602748086655893[17] = 0;
   out_629602748086655893[18] = 0;
   out_629602748086655893[19] = 0;
   out_629602748086655893[20] = 0;
   out_629602748086655893[21] = 0;
   out_629602748086655893[22] = 0;
   out_629602748086655893[23] = 0;
   out_629602748086655893[24] = 0;
   out_629602748086655893[25] = 0;
   out_629602748086655893[26] = 0;
   out_629602748086655893[27] = 0;
   out_629602748086655893[28] = 0;
   out_629602748086655893[29] = 0;
   out_629602748086655893[30] = 1;
   out_629602748086655893[31] = 0;
   out_629602748086655893[32] = 0;
   out_629602748086655893[33] = 0;
   out_629602748086655893[34] = 0;
   out_629602748086655893[35] = 0;
   out_629602748086655893[36] = 0;
   out_629602748086655893[37] = 0;
   out_629602748086655893[38] = 0;
   out_629602748086655893[39] = 0;
   out_629602748086655893[40] = 0;
   out_629602748086655893[41] = 0;
   out_629602748086655893[42] = 0;
   out_629602748086655893[43] = 0;
   out_629602748086655893[44] = 0;
   out_629602748086655893[45] = 0;
   out_629602748086655893[46] = 0;
   out_629602748086655893[47] = 0;
   out_629602748086655893[48] = 0;
   out_629602748086655893[49] = 0;
   out_629602748086655893[50] = 0;
   out_629602748086655893[51] = 0;
   out_629602748086655893[52] = 0;
   out_629602748086655893[53] = 1;
   out_629602748086655893[54] = 0;
   out_629602748086655893[55] = 0;
   out_629602748086655893[56] = 0;
   out_629602748086655893[57] = 0;
   out_629602748086655893[58] = 0;
   out_629602748086655893[59] = 0;
   out_629602748086655893[60] = 0;
   out_629602748086655893[61] = 0;
   out_629602748086655893[62] = 0;
   out_629602748086655893[63] = 0;
   out_629602748086655893[64] = 0;
   out_629602748086655893[65] = 0;
}
void h_32(double *state, double *unused, double *out_2637019686530349721) {
   out_2637019686530349721[0] = state[3];
   out_2637019686530349721[1] = state[4];
   out_2637019686530349721[2] = state[5];
   out_2637019686530349721[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5171701624120956665) {
   out_5171701624120956665[0] = 0;
   out_5171701624120956665[1] = 0;
   out_5171701624120956665[2] = 0;
   out_5171701624120956665[3] = 1;
   out_5171701624120956665[4] = 0;
   out_5171701624120956665[5] = 0;
   out_5171701624120956665[6] = 0;
   out_5171701624120956665[7] = 0;
   out_5171701624120956665[8] = 0;
   out_5171701624120956665[9] = 0;
   out_5171701624120956665[10] = 0;
   out_5171701624120956665[11] = 0;
   out_5171701624120956665[12] = 0;
   out_5171701624120956665[13] = 0;
   out_5171701624120956665[14] = 0;
   out_5171701624120956665[15] = 0;
   out_5171701624120956665[16] = 0;
   out_5171701624120956665[17] = 0;
   out_5171701624120956665[18] = 0;
   out_5171701624120956665[19] = 0;
   out_5171701624120956665[20] = 0;
   out_5171701624120956665[21] = 0;
   out_5171701624120956665[22] = 0;
   out_5171701624120956665[23] = 0;
   out_5171701624120956665[24] = 0;
   out_5171701624120956665[25] = 0;
   out_5171701624120956665[26] = 1;
   out_5171701624120956665[27] = 0;
   out_5171701624120956665[28] = 0;
   out_5171701624120956665[29] = 0;
   out_5171701624120956665[30] = 0;
   out_5171701624120956665[31] = 0;
   out_5171701624120956665[32] = 0;
   out_5171701624120956665[33] = 0;
   out_5171701624120956665[34] = 0;
   out_5171701624120956665[35] = 0;
   out_5171701624120956665[36] = 0;
   out_5171701624120956665[37] = 0;
   out_5171701624120956665[38] = 0;
   out_5171701624120956665[39] = 0;
   out_5171701624120956665[40] = 0;
   out_5171701624120956665[41] = 0;
   out_5171701624120956665[42] = 0;
   out_5171701624120956665[43] = 0;
   out_5171701624120956665[44] = 0;
   out_5171701624120956665[45] = 0;
   out_5171701624120956665[46] = 0;
   out_5171701624120956665[47] = 0;
   out_5171701624120956665[48] = 0;
   out_5171701624120956665[49] = 1;
   out_5171701624120956665[50] = 0;
   out_5171701624120956665[51] = 0;
   out_5171701624120956665[52] = 0;
   out_5171701624120956665[53] = 0;
   out_5171701624120956665[54] = 0;
   out_5171701624120956665[55] = 0;
   out_5171701624120956665[56] = 0;
   out_5171701624120956665[57] = 0;
   out_5171701624120956665[58] = 0;
   out_5171701624120956665[59] = 0;
   out_5171701624120956665[60] = 0;
   out_5171701624120956665[61] = 0;
   out_5171701624120956665[62] = 0;
   out_5171701624120956665[63] = 0;
   out_5171701624120956665[64] = 0;
   out_5171701624120956665[65] = 0;
   out_5171701624120956665[66] = 0;
   out_5171701624120956665[67] = 0;
   out_5171701624120956665[68] = 0;
   out_5171701624120956665[69] = 0;
   out_5171701624120956665[70] = 0;
   out_5171701624120956665[71] = 0;
   out_5171701624120956665[72] = 1;
   out_5171701624120956665[73] = 0;
   out_5171701624120956665[74] = 0;
   out_5171701624120956665[75] = 0;
   out_5171701624120956665[76] = 0;
   out_5171701624120956665[77] = 0;
   out_5171701624120956665[78] = 0;
   out_5171701624120956665[79] = 0;
   out_5171701624120956665[80] = 0;
   out_5171701624120956665[81] = 0;
   out_5171701624120956665[82] = 0;
   out_5171701624120956665[83] = 0;
   out_5171701624120956665[84] = 0;
   out_5171701624120956665[85] = 0;
   out_5171701624120956665[86] = 0;
   out_5171701624120956665[87] = 0;
}
void h_13(double *state, double *unused, double *out_5270822806141700213) {
   out_5270822806141700213[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5270822806141700213[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5270822806141700213[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8624198647030686927) {
   out_8624198647030686927[0] = 0;
   out_8624198647030686927[1] = 0;
   out_8624198647030686927[2] = 0;
   out_8624198647030686927[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8624198647030686927[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8624198647030686927[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8624198647030686927[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8624198647030686927[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8624198647030686927[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8624198647030686927[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8624198647030686927[10] = 0;
   out_8624198647030686927[11] = 0;
   out_8624198647030686927[12] = 0;
   out_8624198647030686927[13] = 0;
   out_8624198647030686927[14] = 0;
   out_8624198647030686927[15] = 0;
   out_8624198647030686927[16] = 0;
   out_8624198647030686927[17] = 0;
   out_8624198647030686927[18] = 0;
   out_8624198647030686927[19] = 0;
   out_8624198647030686927[20] = 0;
   out_8624198647030686927[21] = 0;
   out_8624198647030686927[22] = 0;
   out_8624198647030686927[23] = 0;
   out_8624198647030686927[24] = 0;
   out_8624198647030686927[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8624198647030686927[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8624198647030686927[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8624198647030686927[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8624198647030686927[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8624198647030686927[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8624198647030686927[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8624198647030686927[32] = 0;
   out_8624198647030686927[33] = 0;
   out_8624198647030686927[34] = 0;
   out_8624198647030686927[35] = 0;
   out_8624198647030686927[36] = 0;
   out_8624198647030686927[37] = 0;
   out_8624198647030686927[38] = 0;
   out_8624198647030686927[39] = 0;
   out_8624198647030686927[40] = 0;
   out_8624198647030686927[41] = 0;
   out_8624198647030686927[42] = 0;
   out_8624198647030686927[43] = 0;
   out_8624198647030686927[44] = 0;
   out_8624198647030686927[45] = 0;
   out_8624198647030686927[46] = 0;
   out_8624198647030686927[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8624198647030686927[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8624198647030686927[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8624198647030686927[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8624198647030686927[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8624198647030686927[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8624198647030686927[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8624198647030686927[54] = 0;
   out_8624198647030686927[55] = 0;
   out_8624198647030686927[56] = 0;
   out_8624198647030686927[57] = 0;
   out_8624198647030686927[58] = 0;
   out_8624198647030686927[59] = 0;
   out_8624198647030686927[60] = 0;
   out_8624198647030686927[61] = 0;
   out_8624198647030686927[62] = 0;
   out_8624198647030686927[63] = 0;
   out_8624198647030686927[64] = 0;
   out_8624198647030686927[65] = 0;
}
void h_14(double *state, double *unused, double *out_8101051777655745798) {
   out_8101051777655745798[0] = state[10];
   out_8101051777655745798[1] = state[11];
   out_8101051777655745798[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1107403253179183927) {
   out_1107403253179183927[0] = 0;
   out_1107403253179183927[1] = 0;
   out_1107403253179183927[2] = 0;
   out_1107403253179183927[3] = 0;
   out_1107403253179183927[4] = 0;
   out_1107403253179183927[5] = 0;
   out_1107403253179183927[6] = 0;
   out_1107403253179183927[7] = 0;
   out_1107403253179183927[8] = 0;
   out_1107403253179183927[9] = 0;
   out_1107403253179183927[10] = 1;
   out_1107403253179183927[11] = 0;
   out_1107403253179183927[12] = 0;
   out_1107403253179183927[13] = 0;
   out_1107403253179183927[14] = 0;
   out_1107403253179183927[15] = 0;
   out_1107403253179183927[16] = 0;
   out_1107403253179183927[17] = 0;
   out_1107403253179183927[18] = 0;
   out_1107403253179183927[19] = 0;
   out_1107403253179183927[20] = 0;
   out_1107403253179183927[21] = 0;
   out_1107403253179183927[22] = 0;
   out_1107403253179183927[23] = 0;
   out_1107403253179183927[24] = 0;
   out_1107403253179183927[25] = 0;
   out_1107403253179183927[26] = 0;
   out_1107403253179183927[27] = 0;
   out_1107403253179183927[28] = 0;
   out_1107403253179183927[29] = 0;
   out_1107403253179183927[30] = 0;
   out_1107403253179183927[31] = 0;
   out_1107403253179183927[32] = 0;
   out_1107403253179183927[33] = 1;
   out_1107403253179183927[34] = 0;
   out_1107403253179183927[35] = 0;
   out_1107403253179183927[36] = 0;
   out_1107403253179183927[37] = 0;
   out_1107403253179183927[38] = 0;
   out_1107403253179183927[39] = 0;
   out_1107403253179183927[40] = 0;
   out_1107403253179183927[41] = 0;
   out_1107403253179183927[42] = 0;
   out_1107403253179183927[43] = 0;
   out_1107403253179183927[44] = 0;
   out_1107403253179183927[45] = 0;
   out_1107403253179183927[46] = 0;
   out_1107403253179183927[47] = 0;
   out_1107403253179183927[48] = 0;
   out_1107403253179183927[49] = 0;
   out_1107403253179183927[50] = 0;
   out_1107403253179183927[51] = 0;
   out_1107403253179183927[52] = 0;
   out_1107403253179183927[53] = 0;
   out_1107403253179183927[54] = 0;
   out_1107403253179183927[55] = 0;
   out_1107403253179183927[56] = 1;
   out_1107403253179183927[57] = 0;
   out_1107403253179183927[58] = 0;
   out_1107403253179183927[59] = 0;
   out_1107403253179183927[60] = 0;
   out_1107403253179183927[61] = 0;
   out_1107403253179183927[62] = 0;
   out_1107403253179183927[63] = 0;
   out_1107403253179183927[64] = 0;
   out_1107403253179183927[65] = 0;
}
void h_33(double *state, double *unused, double *out_2979384547065868558) {
   out_2979384547065868558[0] = state[16];
   out_2979384547065868558[1] = state[17];
   out_2979384547065868558[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2520954256552201711) {
   out_2520954256552201711[0] = 0;
   out_2520954256552201711[1] = 0;
   out_2520954256552201711[2] = 0;
   out_2520954256552201711[3] = 0;
   out_2520954256552201711[4] = 0;
   out_2520954256552201711[5] = 0;
   out_2520954256552201711[6] = 0;
   out_2520954256552201711[7] = 0;
   out_2520954256552201711[8] = 0;
   out_2520954256552201711[9] = 0;
   out_2520954256552201711[10] = 0;
   out_2520954256552201711[11] = 0;
   out_2520954256552201711[12] = 0;
   out_2520954256552201711[13] = 0;
   out_2520954256552201711[14] = 0;
   out_2520954256552201711[15] = 0;
   out_2520954256552201711[16] = 1;
   out_2520954256552201711[17] = 0;
   out_2520954256552201711[18] = 0;
   out_2520954256552201711[19] = 0;
   out_2520954256552201711[20] = 0;
   out_2520954256552201711[21] = 0;
   out_2520954256552201711[22] = 0;
   out_2520954256552201711[23] = 0;
   out_2520954256552201711[24] = 0;
   out_2520954256552201711[25] = 0;
   out_2520954256552201711[26] = 0;
   out_2520954256552201711[27] = 0;
   out_2520954256552201711[28] = 0;
   out_2520954256552201711[29] = 0;
   out_2520954256552201711[30] = 0;
   out_2520954256552201711[31] = 0;
   out_2520954256552201711[32] = 0;
   out_2520954256552201711[33] = 0;
   out_2520954256552201711[34] = 0;
   out_2520954256552201711[35] = 0;
   out_2520954256552201711[36] = 0;
   out_2520954256552201711[37] = 0;
   out_2520954256552201711[38] = 0;
   out_2520954256552201711[39] = 1;
   out_2520954256552201711[40] = 0;
   out_2520954256552201711[41] = 0;
   out_2520954256552201711[42] = 0;
   out_2520954256552201711[43] = 0;
   out_2520954256552201711[44] = 0;
   out_2520954256552201711[45] = 0;
   out_2520954256552201711[46] = 0;
   out_2520954256552201711[47] = 0;
   out_2520954256552201711[48] = 0;
   out_2520954256552201711[49] = 0;
   out_2520954256552201711[50] = 0;
   out_2520954256552201711[51] = 0;
   out_2520954256552201711[52] = 0;
   out_2520954256552201711[53] = 0;
   out_2520954256552201711[54] = 0;
   out_2520954256552201711[55] = 0;
   out_2520954256552201711[56] = 0;
   out_2520954256552201711[57] = 0;
   out_2520954256552201711[58] = 0;
   out_2520954256552201711[59] = 0;
   out_2520954256552201711[60] = 0;
   out_2520954256552201711[61] = 0;
   out_2520954256552201711[62] = 1;
   out_2520954256552201711[63] = 0;
   out_2520954256552201711[64] = 0;
   out_2520954256552201711[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5015465238650468081) {
  H(in_vec, out_5015465238650468081);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5824433810176356910) {
  err_fun(nom_x, delta_x, out_5824433810176356910);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4059851042701556511) {
  inv_err_fun(nom_x, true_x, out_4059851042701556511);
}
void live_H_mod_fun(double *state, double *out_4710545414619891339) {
  H_mod_fun(state, out_4710545414619891339);
}
void live_f_fun(double *state, double dt, double *out_8662695085446243012) {
  f_fun(state,  dt, out_8662695085446243012);
}
void live_F_fun(double *state, double dt, double *out_2007569535825338613) {
  F_fun(state,  dt, out_2007569535825338613);
}
void live_h_4(double *state, double *unused, double *out_8117044963495096876) {
  h_4(state, unused, out_8117044963495096876);
}
void live_H_4(double *state, double *unused, double *out_3996264805459263269) {
  H_4(state, unused, out_3996264805459263269);
}
void live_h_9(double *state, double *unused, double *out_8101051777655745798) {
  h_9(state, unused, out_8101051777655745798);
}
void live_H_9(double *state, double *unused, double *out_1107403253179183927) {
  H_9(state, unused, out_1107403253179183927);
}
void live_h_10(double *state, double *unused, double *out_7605337253302135628) {
  h_10(state, unused, out_7605337253302135628);
}
void live_H_10(double *state, double *unused, double *out_1130019112268262903) {
  H_10(state, unused, out_1130019112268262903);
}
void live_h_12(double *state, double *unused, double *out_4351979789937965025) {
  h_12(state, unused, out_4351979789937965025);
}
void live_H_12(double *state, double *unused, double *out_3375165780411669602) {
  H_12(state, unused, out_3375165780411669602);
}
void live_h_35(double *state, double *unused, double *out_8363245642099122728) {
  h_35(state, unused, out_8363245642099122728);
}
void live_H_35(double *state, double *unused, double *out_629602748086655893) {
  H_35(state, unused, out_629602748086655893);
}
void live_h_32(double *state, double *unused, double *out_2637019686530349721) {
  h_32(state, unused, out_2637019686530349721);
}
void live_H_32(double *state, double *unused, double *out_5171701624120956665) {
  H_32(state, unused, out_5171701624120956665);
}
void live_h_13(double *state, double *unused, double *out_5270822806141700213) {
  h_13(state, unused, out_5270822806141700213);
}
void live_H_13(double *state, double *unused, double *out_8624198647030686927) {
  H_13(state, unused, out_8624198647030686927);
}
void live_h_14(double *state, double *unused, double *out_8101051777655745798) {
  h_14(state, unused, out_8101051777655745798);
}
void live_H_14(double *state, double *unused, double *out_1107403253179183927) {
  H_14(state, unused, out_1107403253179183927);
}
void live_h_33(double *state, double *unused, double *out_2979384547065868558) {
  h_33(state, unused, out_2979384547065868558);
}
void live_H_33(double *state, double *unused, double *out_2520954256552201711) {
  H_33(state, unused, out_2520954256552201711);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
